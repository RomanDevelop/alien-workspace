{
	"id": "2f8faf8e9bb4d91befb01d06b0df222c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"AlienPresale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract AlienPresale is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public alienToken;\n    uint256 public tokenPrice;       // Цена токена в wei (например, 1 MATIC = 1e18)\n    uint256 public startTime;\n    uint256 public endTime;\n    uint256 public hardCap;          // Максимальная сумма в MATIC\n    uint256 public totalRaised;\n\n    bool public paused;\n    uint256 public constant MAX_PRESALE_DURATION = 30 days; // Максимум 30 дней\n\n    mapping(address => uint256) public contributions;\n    mapping(address => uint256) public claimableTokens;\n\n    event TokensPurchased(address indexed buyer, uint256 amountPaid, uint256 tokensAllocated);\n    event TokensClaimed(address indexed user, uint256 tokensClaimed);\n    event EmergencyWithdraw(address indexed user, uint256 amountRefunded);\n    event PresalePaused(bool status);\n\n    constructor(\n        address _alienToken,\n        uint256 _tokenPrice,\n        uint256 _startTime,\n        uint256 _endTime,\n        uint256 _hardCap,\n        address initialOwner\n    ) Ownable(initialOwner) {\n        require(_alienToken != address(0), \"Invalid token\");\n        require(_startTime < _endTime, \"Start must be before end\");\n        require(_endTime - _startTime <= MAX_PRESALE_DURATION, \"Presale too long\");\n        require(_tokenPrice > 0, \"Invalid price\");\n        require(_hardCap > 0, \"Invalid hardcap\");\n\n        alienToken = IERC20(_alienToken);\n        tokenPrice = _tokenPrice;\n        startTime = _startTime;\n        endTime = _endTime;\n        hardCap = _hardCap;\n    }\n\n    modifier saleActive() {\n        require(block.timestamp >= startTime && block.timestamp <= endTime, \"Presale not active\");\n        require(!paused, \"Presale paused\");\n        _;\n    }\n\n    function buyTokens() external payable nonReentrant saleActive {\n        require(msg.value > 0, \"Send MATIC\");\n        require(totalRaised + msg.value <= hardCap, \"Exceeds hardcap\");\n\n        uint256 tokens = (msg.value * 1e18) / tokenPrice;\n\n        claimableTokens[msg.sender] += tokens;\n        contributions[msg.sender] += msg.value;\n        totalRaised += msg.value;\n\n        emit TokensPurchased(msg.sender, msg.value, tokens);\n    }\n\n    function claimTokens() external nonReentrant {\n        uint256 tokens = claimableTokens[msg.sender];\n        require(tokens > 0, \"Nothing to claim\");\n\n        claimableTokens[msg.sender] = 0;\n        alienToken.safeTransfer(msg.sender, tokens);\n\n        emit TokensClaimed(msg.sender, tokens);\n    }\n\n    function withdrawFunds() external onlyOwner {\n        uint256 amount = address(this).balance;\n        payable(owner()).transfer(amount);\n    }\n\n    function withdrawUnsoldTokens() external onlyOwner {\n        uint256 balance = alienToken.balanceOf(address(this));\n        require(balance > 0, \"No tokens\");\n        alienToken.safeTransfer(owner(), balance);\n    }\n\n    function pausePresale(bool _status) external onlyOwner {\n        paused = _status;\n        emit PresalePaused(_status);\n    }\n\n    function emergencyWithdraw() external nonReentrant {\n        require(paused, \"Not paused\");\n        uint256 amount = contributions[msg.sender];\n        require(amount > 0, \"Nothing to refund\");\n\n        contributions[msg.sender] = 0;\n        claimableTokens[msg.sender] = 0;\n        payable(msg.sender).transfer(amount);\n\n        emit EmergencyWithdraw(msg.sender, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c74df5d97e18e3ad4a083b2ae18115b5700df32d5f3103e8a99d540caab4003864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c74df5d97e18e3ad4a083b2ae18115b5700df32d5f3103e8a99d540caab4003864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x4D CREATE2 0xD9 PUSH31 0x18E3AD4A083B2AE18115B5700DF32D5F3103E8A99D540CAAB4003864736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c74df5d97e18e3ad4a083b2ae18115b5700df32d5f3103e8a99d540caab4003864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x4D CREATE2 0xD9 PUSH31 0x18E3AD4A083B2AE18115B5700DF32D5F3103E8A99D540CAAB4003864736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c74df5d97e18e3ad4a083b2ae18115b5700df32d5f3103e8a99d540caab4003864736f6c63430008180033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AlienPresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AlienPresale.sol": {
				"AlienPresale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_alienToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hardCap",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountRefunded",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "PresalePaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensClaimed",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensAllocated",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_PRESALE_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alienToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimableTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contributions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hardCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "pausePresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawUnsoldTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AlienPresale.sol\":298:3723  contract AlienPresale is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"AlienPresale.sol\":1204:1898  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"AlienPresale.sol\":1398:1410  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AlienPresale.sol\":1453:1454  0 */\n  0x00\n    /* \"AlienPresale.sol\":1430:1455  _alienToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"AlienPresale.sol\":1430:1441  _alienToken */\n  dup7\n    /* \"AlienPresale.sol\":1430:1455  _alienToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"AlienPresale.sol\":1422:1473  require(_alienToken != address(0), \"Invalid token\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"AlienPresale.sol\":1504:1512  _endTime */\n  dup3\n    /* \"AlienPresale.sol\":1491:1501  _startTime */\n  dup5\n    /* \"AlienPresale.sol\":1491:1512  _startTime < _endTime */\n  lt\n    /* \"AlienPresale.sol\":1483:1541  require(_startTime < _endTime, \"Start must be before end\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"AlienPresale.sol\":768:775  30 days */\n  0x278d00\n    /* \"AlienPresale.sol\":1570:1580  _startTime */\n  dup5\n    /* \"AlienPresale.sol\":1559:1567  _endTime */\n  dup5\n    /* \"AlienPresale.sol\":1559:1580  _endTime - _startTime */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"AlienPresale.sol\":1559:1604  _endTime - _startTime <= MAX_PRESALE_DURATION */\n  gt\n  iszero\n    /* \"AlienPresale.sol\":1551:1625  require(_endTime - _startTime <= MAX_PRESALE_DURATION, \"Presale too long\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"AlienPresale.sol\":1657:1658  0 */\n  0x00\n    /* \"AlienPresale.sol\":1643:1654  _tokenPrice */\n  dup6\n    /* \"AlienPresale.sol\":1643:1658  _tokenPrice > 0 */\n  gt\n    /* \"AlienPresale.sol\":1635:1676  require(_tokenPrice > 0, \"Invalid price\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"AlienPresale.sol\":1705:1706  0 */\n  0x00\n    /* \"AlienPresale.sol\":1694:1702  _hardCap */\n  dup3\n    /* \"AlienPresale.sol\":1694:1706  _hardCap > 0 */\n  gt\n    /* \"AlienPresale.sol\":1686:1726  require(_hardCap > 0, \"Invalid hardcap\") */\n  tag_29\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_29:\n    /* \"AlienPresale.sol\":1757:1768  _alienToken */\n  dup6\n    /* \"AlienPresale.sol\":1737:1747  alienToken */\n  0x02\n  0x00\n    /* \"AlienPresale.sol\":1737:1769  alienToken = IERC20(_alienToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AlienPresale.sol\":1792:1803  _tokenPrice */\n  dup5\n    /* \"AlienPresale.sol\":1779:1789  tokenPrice */\n  0x03\n    /* \"AlienPresale.sol\":1779:1803  tokenPrice = _tokenPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AlienPresale.sol\":1825:1835  _startTime */\n  dup4\n    /* \"AlienPresale.sol\":1813:1822  startTime */\n  0x04\n    /* \"AlienPresale.sol\":1813:1835  startTime = _startTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AlienPresale.sol\":1855:1863  _endTime */\n  dup3\n    /* \"AlienPresale.sol\":1845:1852  endTime */\n  0x05\n    /* \"AlienPresale.sol\":1845:1863  endTime = _endTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AlienPresale.sol\":1883:1891  _hardCap */\n  dup2\n    /* \"AlienPresale.sol\":1873:1880  hardCap */\n  0x06\n    /* \"AlienPresale.sol\":1873:1891  hardCap = _hardCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AlienPresale.sol\":1204:1898  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"AlienPresale.sol\":298:3723  contract AlienPresale is Ownable, ReentrancyGuard {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_35:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_37:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_38:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_63\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_37\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_39:\n    /* \"#utility.yul\":641:665   */\n  tag_65\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_38\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_66:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_40:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_68\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_39\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_41:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_42:\n    /* \"#utility.yul\":1001:1025   */\n  tag_71\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_41\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_72:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_43:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_74\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_42\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2339   */\ntag_3:\n    /* \"#utility.yul\":1320:1326   */\n  0x00\n    /* \"#utility.yul\":1328:1334   */\n  dup1\n    /* \"#utility.yul\":1336:1342   */\n  0x00\n    /* \"#utility.yul\":1344:1350   */\n  dup1\n    /* \"#utility.yul\":1352:1358   */\n  0x00\n    /* \"#utility.yul\":1360:1366   */\n  dup1\n    /* \"#utility.yul\":1409:1412   */\n  0xc0\n    /* \"#utility.yul\":1397:1406   */\n  dup8\n    /* \"#utility.yul\":1388:1395   */\n  dup10\n    /* \"#utility.yul\":1384:1407   */\n  sub\n    /* \"#utility.yul\":1380:1413   */\n  slt\n    /* \"#utility.yul\":1377:1497   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1416:1495   */\n  tag_77\n  tag_35\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1377:1497   */\ntag_76:\n    /* \"#utility.yul\":1536:1537   */\n  0x00\n    /* \"#utility.yul\":1561:1625   */\n  tag_78\n    /* \"#utility.yul\":1617:1624   */\n  dup10\n    /* \"#utility.yul\":1608:1614   */\n  dup3\n    /* \"#utility.yul\":1597:1606   */\n  dup11\n    /* \"#utility.yul\":1593:1615   */\n  add\n    /* \"#utility.yul\":1561:1625   */\n  tag_40\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1551:1625   */\n  swap7\n  pop\n    /* \"#utility.yul\":1507:1635   */\n  pop\n    /* \"#utility.yul\":1674:1676   */\n  0x20\n    /* \"#utility.yul\":1700:1764   */\n  tag_79\n    /* \"#utility.yul\":1756:1763   */\n  dup10\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1736:1745   */\n  dup11\n    /* \"#utility.yul\":1732:1754   */\n  add\n    /* \"#utility.yul\":1700:1764   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1690:1764   */\n  swap6\n  pop\n    /* \"#utility.yul\":1645:1774   */\n  pop\n    /* \"#utility.yul\":1813:1815   */\n  0x40\n    /* \"#utility.yul\":1839:1903   */\n  tag_80\n    /* \"#utility.yul\":1895:1902   */\n  dup10\n    /* \"#utility.yul\":1886:1892   */\n  dup3\n    /* \"#utility.yul\":1875:1884   */\n  dup11\n    /* \"#utility.yul\":1871:1893   */\n  add\n    /* \"#utility.yul\":1839:1903   */\n  tag_43\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1829:1903   */\n  swap5\n  pop\n    /* \"#utility.yul\":1784:1913   */\n  pop\n    /* \"#utility.yul\":1952:1954   */\n  0x60\n    /* \"#utility.yul\":1978:2042   */\n  tag_81\n    /* \"#utility.yul\":2034:2041   */\n  dup10\n    /* \"#utility.yul\":2025:2031   */\n  dup3\n    /* \"#utility.yul\":2014:2023   */\n  dup11\n    /* \"#utility.yul\":2010:2032   */\n  add\n    /* \"#utility.yul\":1978:2042   */\n  tag_43\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1968:2042   */\n  swap4\n  pop\n    /* \"#utility.yul\":1923:2052   */\n  pop\n    /* \"#utility.yul\":2091:2094   */\n  0x80\n    /* \"#utility.yul\":2118:2182   */\n  tag_82\n    /* \"#utility.yul\":2174:2181   */\n  dup10\n    /* \"#utility.yul\":2165:2171   */\n  dup3\n    /* \"#utility.yul\":2154:2163   */\n  dup11\n    /* \"#utility.yul\":2150:2172   */\n  add\n    /* \"#utility.yul\":2118:2182   */\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2108:2182   */\n  swap3\n  pop\n    /* \"#utility.yul\":2062:2192   */\n  pop\n    /* \"#utility.yul\":2231:2234   */\n  0xa0\n    /* \"#utility.yul\":2258:2322   */\n  tag_83\n    /* \"#utility.yul\":2314:2321   */\n  dup10\n    /* \"#utility.yul\":2305:2311   */\n  dup3\n    /* \"#utility.yul\":2294:2303   */\n  dup11\n    /* \"#utility.yul\":2290:2312   */\n  add\n    /* \"#utility.yul\":2258:2322   */\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2248:2322   */\n  swap2\n  pop\n    /* \"#utility.yul\":2202:2332   */\n  pop\n    /* \"#utility.yul\":1205:2339   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":2345:2463   */\ntag_44:\n    /* \"#utility.yul\":2432:2456   */\n  tag_85\n    /* \"#utility.yul\":2450:2455   */\n  dup2\n    /* \"#utility.yul\":2432:2456   */\n  tag_38\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2427:2430   */\n  dup3\n    /* \"#utility.yul\":2420:2457   */\n  mstore\n    /* \"#utility.yul\":2345:2463   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2469:2691   */\ntag_10:\n    /* \"#utility.yul\":2562:2566   */\n  0x00\n    /* \"#utility.yul\":2600:2602   */\n  0x20\n    /* \"#utility.yul\":2589:2598   */\n  dup3\n    /* \"#utility.yul\":2585:2603   */\n  add\n    /* \"#utility.yul\":2577:2603   */\n  swap1\n  pop\n    /* \"#utility.yul\":2613:2684   */\n  tag_87\n    /* \"#utility.yul\":2681:2682   */\n  0x00\n    /* \"#utility.yul\":2670:2679   */\n  dup4\n    /* \"#utility.yul\":2666:2683   */\n  add\n    /* \"#utility.yul\":2657:2663   */\n  dup5\n    /* \"#utility.yul\":2613:2684   */\n  tag_44\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2469:2691   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2697:2866   */\ntag_45:\n    /* \"#utility.yul\":2781:2792   */\n  0x00\n    /* \"#utility.yul\":2815:2821   */\n  dup3\n    /* \"#utility.yul\":2810:2813   */\n  dup3\n    /* \"#utility.yul\":2803:2822   */\n  mstore\n    /* \"#utility.yul\":2855:2859   */\n  0x20\n    /* \"#utility.yul\":2850:2853   */\n  dup3\n    /* \"#utility.yul\":2846:2860   */\n  add\n    /* \"#utility.yul\":2831:2860   */\n  swap1\n  pop\n    /* \"#utility.yul\":2697:2866   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2872:3035   */\ntag_46:\n    /* \"#utility.yul\":3012:3027   */\n  0x496e76616c696420746f6b656e00000000000000000000000000000000000000\n    /* \"#utility.yul\":3008:3009   */\n  0x00\n    /* \"#utility.yul\":3000:3006   */\n  dup3\n    /* \"#utility.yul\":2996:3010   */\n  add\n    /* \"#utility.yul\":2989:3028   */\n  mstore\n    /* \"#utility.yul\":2872:3035   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3041:3407   */\ntag_47:\n    /* \"#utility.yul\":3183:3186   */\n  0x00\n    /* \"#utility.yul\":3204:3271   */\n  tag_91\n    /* \"#utility.yul\":3268:3270   */\n  0x0d\n    /* \"#utility.yul\":3263:3266   */\n  dup4\n    /* \"#utility.yul\":3204:3271   */\n  tag_45\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3197:3271   */\n  swap2\n  pop\n    /* \"#utility.yul\":3280:3373   */\n  tag_92\n    /* \"#utility.yul\":3369:3372   */\n  dup3\n    /* \"#utility.yul\":3280:3373   */\n  tag_46\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3398:3400   */\n  0x20\n    /* \"#utility.yul\":3393:3396   */\n  dup3\n    /* \"#utility.yul\":3389:3401   */\n  add\n    /* \"#utility.yul\":3382:3401   */\n  swap1\n  pop\n    /* \"#utility.yul\":3041:3407   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3413:3832   */\ntag_17:\n    /* \"#utility.yul\":3579:3583   */\n  0x00\n    /* \"#utility.yul\":3617:3619   */\n  0x20\n    /* \"#utility.yul\":3606:3615   */\n  dup3\n    /* \"#utility.yul\":3602:3620   */\n  add\n    /* \"#utility.yul\":3594:3620   */\n  swap1\n  pop\n    /* \"#utility.yul\":3666:3675   */\n  dup2\n    /* \"#utility.yul\":3660:3664   */\n  dup2\n    /* \"#utility.yul\":3656:3676   */\n  sub\n    /* \"#utility.yul\":3652:3653   */\n  0x00\n    /* \"#utility.yul\":3641:3650   */\n  dup4\n    /* \"#utility.yul\":3637:3654   */\n  add\n    /* \"#utility.yul\":3630:3677   */\n  mstore\n    /* \"#utility.yul\":3694:3825   */\n  tag_94\n    /* \"#utility.yul\":3820:3824   */\n  dup2\n    /* \"#utility.yul\":3694:3825   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3686:3825   */\n  swap1\n  pop\n    /* \"#utility.yul\":3413:3832   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3838:4012   */\ntag_48:\n    /* \"#utility.yul\":3978:4004   */\n  0x5374617274206d757374206265206265666f726520656e640000000000000000\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3966:3972   */\n  dup3\n    /* \"#utility.yul\":3962:3976   */\n  add\n    /* \"#utility.yul\":3955:4005   */\n  mstore\n    /* \"#utility.yul\":3838:4012   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4018:4384   */\ntag_49:\n    /* \"#utility.yul\":4160:4163   */\n  0x00\n    /* \"#utility.yul\":4181:4248   */\n  tag_97\n    /* \"#utility.yul\":4245:4247   */\n  0x18\n    /* \"#utility.yul\":4240:4243   */\n  dup4\n    /* \"#utility.yul\":4181:4248   */\n  tag_45\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4174:4248   */\n  swap2\n  pop\n    /* \"#utility.yul\":4257:4350   */\n  tag_98\n    /* \"#utility.yul\":4346:4349   */\n  dup3\n    /* \"#utility.yul\":4257:4350   */\n  tag_48\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4375:4377   */\n  0x20\n    /* \"#utility.yul\":4370:4373   */\n  dup3\n    /* \"#utility.yul\":4366:4378   */\n  add\n    /* \"#utility.yul\":4359:4378   */\n  swap1\n  pop\n    /* \"#utility.yul\":4018:4384   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4390:4809   */\ntag_20:\n    /* \"#utility.yul\":4556:4560   */\n  0x00\n    /* \"#utility.yul\":4594:4596   */\n  0x20\n    /* \"#utility.yul\":4583:4592   */\n  dup3\n    /* \"#utility.yul\":4579:4597   */\n  add\n    /* \"#utility.yul\":4571:4597   */\n  swap1\n  pop\n    /* \"#utility.yul\":4643:4652   */\n  dup2\n    /* \"#utility.yul\":4637:4641   */\n  dup2\n    /* \"#utility.yul\":4633:4653   */\n  sub\n    /* \"#utility.yul\":4629:4630   */\n  0x00\n    /* \"#utility.yul\":4618:4627   */\n  dup4\n    /* \"#utility.yul\":4614:4631   */\n  add\n    /* \"#utility.yul\":4607:4654   */\n  mstore\n    /* \"#utility.yul\":4671:4802   */\n  tag_100\n    /* \"#utility.yul\":4797:4801   */\n  dup2\n    /* \"#utility.yul\":4671:4802   */\n  tag_49\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4663:4802   */\n  swap1\n  pop\n    /* \"#utility.yul\":4390:4809   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4815:4995   */\ntag_50:\n    /* \"#utility.yul\":4863:4940   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4860:4861   */\n  0x00\n    /* \"#utility.yul\":4853:4941   */\n  mstore\n    /* \"#utility.yul\":4960:4964   */\n  0x11\n    /* \"#utility.yul\":4957:4958   */\n  0x04\n    /* \"#utility.yul\":4950:4965   */\n  mstore\n    /* \"#utility.yul\":4984:4988   */\n  0x24\n    /* \"#utility.yul\":4981:4982   */\n  0x00\n    /* \"#utility.yul\":4974:4989   */\n  revert\n    /* \"#utility.yul\":5001:5195   */\ntag_22:\n    /* \"#utility.yul\":5041:5045   */\n  0x00\n    /* \"#utility.yul\":5061:5081   */\n  tag_103\n    /* \"#utility.yul\":5079:5080   */\n  dup3\n    /* \"#utility.yul\":5061:5081   */\n  tag_41\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5056:5081   */\n  swap2\n  pop\n    /* \"#utility.yul\":5095:5115   */\n  tag_104\n    /* \"#utility.yul\":5113:5114   */\n  dup4\n    /* \"#utility.yul\":5095:5115   */\n  tag_41\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5090:5115   */\n  swap3\n  pop\n    /* \"#utility.yul\":5139:5140   */\n  dup3\n    /* \"#utility.yul\":5136:5137   */\n  dup3\n    /* \"#utility.yul\":5132:5141   */\n  sub\n    /* \"#utility.yul\":5124:5141   */\n  swap1\n  pop\n    /* \"#utility.yul\":5163:5164   */\n  dup2\n    /* \"#utility.yul\":5157:5161   */\n  dup2\n    /* \"#utility.yul\":5154:5165   */\n  gt\n    /* \"#utility.yul\":5151:5188   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":5168:5186   */\n  tag_106\n  tag_50\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5151:5188   */\ntag_105:\n    /* \"#utility.yul\":5001:5195   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5201:5367   */\ntag_51:\n    /* \"#utility.yul\":5341:5359   */\n  0x50726573616c6520746f6f206c6f6e6700000000000000000000000000000000\n    /* \"#utility.yul\":5337:5338   */\n  0x00\n    /* \"#utility.yul\":5329:5335   */\n  dup3\n    /* \"#utility.yul\":5325:5339   */\n  add\n    /* \"#utility.yul\":5318:5360   */\n  mstore\n    /* \"#utility.yul\":5201:5367   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5373:5739   */\ntag_52:\n    /* \"#utility.yul\":5515:5518   */\n  0x00\n    /* \"#utility.yul\":5536:5603   */\n  tag_109\n    /* \"#utility.yul\":5600:5602   */\n  0x10\n    /* \"#utility.yul\":5595:5598   */\n  dup4\n    /* \"#utility.yul\":5536:5603   */\n  tag_45\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5529:5603   */\n  swap2\n  pop\n    /* \"#utility.yul\":5612:5705   */\n  tag_110\n    /* \"#utility.yul\":5701:5704   */\n  dup3\n    /* \"#utility.yul\":5612:5705   */\n  tag_51\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5730:5732   */\n  0x20\n    /* \"#utility.yul\":5725:5728   */\n  dup3\n    /* \"#utility.yul\":5721:5733   */\n  add\n    /* \"#utility.yul\":5714:5733   */\n  swap1\n  pop\n    /* \"#utility.yul\":5373:5739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5745:6164   */\ntag_25:\n    /* \"#utility.yul\":5911:5915   */\n  0x00\n    /* \"#utility.yul\":5949:5951   */\n  0x20\n    /* \"#utility.yul\":5938:5947   */\n  dup3\n    /* \"#utility.yul\":5934:5952   */\n  add\n    /* \"#utility.yul\":5926:5952   */\n  swap1\n  pop\n    /* \"#utility.yul\":5998:6007   */\n  dup2\n    /* \"#utility.yul\":5992:5996   */\n  dup2\n    /* \"#utility.yul\":5988:6008   */\n  sub\n    /* \"#utility.yul\":5984:5985   */\n  0x00\n    /* \"#utility.yul\":5973:5982   */\n  dup4\n    /* \"#utility.yul\":5969:5986   */\n  add\n    /* \"#utility.yul\":5962:6009   */\n  mstore\n    /* \"#utility.yul\":6026:6157   */\n  tag_112\n    /* \"#utility.yul\":6152:6156   */\n  dup2\n    /* \"#utility.yul\":6026:6157   */\n  tag_52\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":6018:6157   */\n  swap1\n  pop\n    /* \"#utility.yul\":5745:6164   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6170:6333   */\ntag_53:\n    /* \"#utility.yul\":6310:6325   */\n  0x496e76616c696420707269636500000000000000000000000000000000000000\n    /* \"#utility.yul\":6306:6307   */\n  0x00\n    /* \"#utility.yul\":6298:6304   */\n  dup3\n    /* \"#utility.yul\":6294:6308   */\n  add\n    /* \"#utility.yul\":6287:6326   */\n  mstore\n    /* \"#utility.yul\":6170:6333   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6339:6705   */\ntag_54:\n    /* \"#utility.yul\":6481:6484   */\n  0x00\n    /* \"#utility.yul\":6502:6569   */\n  tag_115\n    /* \"#utility.yul\":6566:6568   */\n  0x0d\n    /* \"#utility.yul\":6561:6564   */\n  dup4\n    /* \"#utility.yul\":6502:6569   */\n  tag_45\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6495:6569   */\n  swap2\n  pop\n    /* \"#utility.yul\":6578:6671   */\n  tag_116\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6578:6671   */\n  tag_53\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6696:6698   */\n  0x20\n    /* \"#utility.yul\":6691:6694   */\n  dup3\n    /* \"#utility.yul\":6687:6699   */\n  add\n    /* \"#utility.yul\":6680:6699   */\n  swap1\n  pop\n    /* \"#utility.yul\":6339:6705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6711:7130   */\ntag_28:\n    /* \"#utility.yul\":6877:6881   */\n  0x00\n    /* \"#utility.yul\":6915:6917   */\n  0x20\n    /* \"#utility.yul\":6904:6913   */\n  dup3\n    /* \"#utility.yul\":6900:6918   */\n  add\n    /* \"#utility.yul\":6892:6918   */\n  swap1\n  pop\n    /* \"#utility.yul\":6964:6973   */\n  dup2\n    /* \"#utility.yul\":6958:6962   */\n  dup2\n    /* \"#utility.yul\":6954:6974   */\n  sub\n    /* \"#utility.yul\":6950:6951   */\n  0x00\n    /* \"#utility.yul\":6939:6948   */\n  dup4\n    /* \"#utility.yul\":6935:6952   */\n  add\n    /* \"#utility.yul\":6928:6975   */\n  mstore\n    /* \"#utility.yul\":6992:7123   */\n  tag_118\n    /* \"#utility.yul\":7118:7122   */\n  dup2\n    /* \"#utility.yul\":6992:7123   */\n  tag_54\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6984:7123   */\n  swap1\n  pop\n    /* \"#utility.yul\":6711:7130   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7136:7301   */\ntag_55:\n    /* \"#utility.yul\":7276:7293   */\n  0x496e76616c696420686172646361700000000000000000000000000000000000\n    /* \"#utility.yul\":7272:7273   */\n  0x00\n    /* \"#utility.yul\":7264:7270   */\n  dup3\n    /* \"#utility.yul\":7260:7274   */\n  add\n    /* \"#utility.yul\":7253:7294   */\n  mstore\n    /* \"#utility.yul\":7136:7301   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7307:7673   */\ntag_56:\n    /* \"#utility.yul\":7449:7452   */\n  0x00\n    /* \"#utility.yul\":7470:7537   */\n  tag_121\n    /* \"#utility.yul\":7534:7536   */\n  0x0f\n    /* \"#utility.yul\":7529:7532   */\n  dup4\n    /* \"#utility.yul\":7470:7537   */\n  tag_45\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":7463:7537   */\n  swap2\n  pop\n    /* \"#utility.yul\":7546:7639   */\n  tag_122\n    /* \"#utility.yul\":7635:7638   */\n  dup3\n    /* \"#utility.yul\":7546:7639   */\n  tag_55\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":7664:7666   */\n  0x20\n    /* \"#utility.yul\":7659:7662   */\n  dup3\n    /* \"#utility.yul\":7655:7667   */\n  add\n    /* \"#utility.yul\":7648:7667   */\n  swap1\n  pop\n    /* \"#utility.yul\":7307:7673   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7679:8098   */\ntag_31:\n    /* \"#utility.yul\":7845:7849   */\n  0x00\n    /* \"#utility.yul\":7883:7885   */\n  0x20\n    /* \"#utility.yul\":7872:7881   */\n  dup3\n    /* \"#utility.yul\":7868:7886   */\n  add\n    /* \"#utility.yul\":7860:7886   */\n  swap1\n  pop\n    /* \"#utility.yul\":7932:7941   */\n  dup2\n    /* \"#utility.yul\":7926:7930   */\n  dup2\n    /* \"#utility.yul\":7922:7942   */\n  sub\n    /* \"#utility.yul\":7918:7919   */\n  0x00\n    /* \"#utility.yul\":7907:7916   */\n  dup4\n    /* \"#utility.yul\":7903:7920   */\n  add\n    /* \"#utility.yul\":7896:7943   */\n  mstore\n    /* \"#utility.yul\":7960:8091   */\n  tag_124\n    /* \"#utility.yul\":8086:8090   */\n  dup2\n    /* \"#utility.yul\":7960:8091   */\n  tag_56\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":7952:8091   */\n  swap1\n  pop\n    /* \"#utility.yul\":7679:8098   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"AlienPresale.sol\":298:3723  contract AlienPresale is Ownable, ReentrancyGuard {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AlienPresale.sol\":298:3723  contract AlienPresale is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84d24226\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd7299ef7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd7299ef7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd744b702\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfb86a404\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x84d24226\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc5c4744c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc8bdbfb6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x48c54b9d\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7ff9b596\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x1958e58a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42e94c90\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"AlienPresale.sol\":387:411  IERC20 public alienToken */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":2842:2984  function withdrawFunds() external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"AlienPresale.sol\":551:573  uint256 public endTime */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":814:862  mapping(address => uint256) public contributions */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":2537:2836  function claimTokens() external nonReentrant {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"AlienPresale.sol\":697:715  bool public paused */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"AlienPresale.sol\":521:545  uint256 public startTime */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":417:442  uint256 public tokenPrice */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":868:918  mapping(address => uint256) public claimableTokens */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":664:690  uint256 public totalRaised */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":2990:3205  function withdrawUnsoldTokens() external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      stop\n        /* \"AlienPresale.sol\":2093:2531  function buyTokens() external payable nonReentrant saleActive {... */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"AlienPresale.sol\":3211:3336  function pausePresale(bool _status) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"AlienPresale.sol\":721:775  uint256 public constant MAX_PRESALE_DURATION = 30 days */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":3342:3721  function emergencyWithdraw() external nonReentrant {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"AlienPresale.sol\":579:601  uint256 public hardCap */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AlienPresale.sol\":387:411  IERC20 public alienToken */\n    tag_26:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":2842:2984  function withdrawFunds() external onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"AlienPresale.sol\":2896:2910  uint256 amount */\n      0x00\n        /* \"AlienPresale.sol\":2913:2934  address(this).balance */\n      selfbalance\n        /* \"AlienPresale.sol\":2896:2934  uint256 amount = address(this).balance */\n      swap1\n      pop\n        /* \"AlienPresale.sol\":2952:2959  owner() */\n      tag_105\n        /* \"AlienPresale.sol\":2952:2957  owner */\n      tag_69\n        /* \"AlienPresale.sol\":2952:2959  owner() */\n      jump\t// in\n    tag_105:\n        /* \"AlienPresale.sol\":2944:2969  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AlienPresale.sol\":2944:2977  payable(owner()).transfer(amount) */\n      0x08fc\n        /* \"AlienPresale.sol\":2970:2976  amount */\n      dup3\n        /* \"AlienPresale.sol\":2944:2977  payable(owner()).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n        /* \"AlienPresale.sol\":2886:2984  {... */\n      pop\n        /* \"AlienPresale.sol\":2842:2984  function withdrawFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"AlienPresale.sol\":551:573  uint256 public endTime */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":814:862  mapping(address => uint256) public contributions */\n    tag_41:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":2537:2836  function claimTokens() external nonReentrant {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_109:\n        /* \"AlienPresale.sol\":2592:2606  uint256 tokens */\n      0x00\n        /* \"AlienPresale.sol\":2609:2624  claimableTokens */\n      0x0a\n        /* \"AlienPresale.sol\":2609:2636  claimableTokens[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":2625:2635  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2609:2636  claimableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"AlienPresale.sol\":2592:2636  uint256 tokens = claimableTokens[msg.sender] */\n      swap1\n      pop\n        /* \"AlienPresale.sol\":2663:2664  0 */\n      0x00\n        /* \"AlienPresale.sol\":2654:2660  tokens */\n      dup2\n        /* \"AlienPresale.sol\":2654:2664  tokens > 0 */\n      gt\n        /* \"AlienPresale.sol\":2646:2685  require(tokens > 0, \"Nothing to claim\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"AlienPresale.sol\":2726:2727  0 */\n      0x00\n        /* \"AlienPresale.sol\":2696:2711  claimableTokens */\n      0x0a\n        /* \"AlienPresale.sol\":2696:2723  claimableTokens[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":2712:2722  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2696:2723  claimableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"AlienPresale.sol\":2696:2727  claimableTokens[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":2737:2780  alienToken.safeTransfer(msg.sender, tokens) */\n      tag_115\n        /* \"AlienPresale.sol\":2761:2771  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2773:2779  tokens */\n      dup3\n        /* \"AlienPresale.sol\":2737:2747  alienToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AlienPresale.sol\":2737:2760  alienToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_116\n      swap1\n        /* \"AlienPresale.sol\":2737:2780  alienToken.safeTransfer(msg.sender, tokens) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"AlienPresale.sol\":2810:2820  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2796:2829  TokensClaimed(msg.sender, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430\n        /* \"AlienPresale.sol\":2822:2828  tokens */\n      dup3\n        /* \"AlienPresale.sol\":2796:2829  TokensClaimed(msg.sender, tokens) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"AlienPresale.sol\":2582:2836  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_118\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_118:\n        /* \"AlienPresale.sol\":2537:2836  function claimTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"AlienPresale.sol\":697:715  bool public paused */\n    tag_48:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"AlienPresale.sol\":521:545  uint256 public startTime */\n    tag_56:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":417:442  uint256 public tokenPrice */\n    tag_60:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":868:918  mapping(address => uint256) public claimableTokens */\n    tag_65:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"AlienPresale.sol\":664:690  uint256 public totalRaised */\n    tag_74:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":2990:3205  function withdrawUnsoldTokens() external onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"AlienPresale.sol\":3051:3066  uint256 balance */\n      0x00\n        /* \"AlienPresale.sol\":3069:3079  alienToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AlienPresale.sol\":3069:3089  alienToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AlienPresale.sol\":3098:3102  this */\n      address\n        /* \"AlienPresale.sol\":3069:3104  alienToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_129:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"AlienPresale.sol\":3051:3104  uint256 balance = alienToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"AlienPresale.sol\":3132:3133  0 */\n      0x00\n        /* \"AlienPresale.sol\":3122:3129  balance */\n      dup2\n        /* \"AlienPresale.sol\":3122:3133  balance > 0 */\n      gt\n        /* \"AlienPresale.sol\":3114:3147  require(balance > 0, \"No tokens\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"AlienPresale.sol\":3157:3198  alienToken.safeTransfer(owner(), balance) */\n      tag_137\n        /* \"AlienPresale.sol\":3181:3188  owner() */\n      tag_138\n        /* \"AlienPresale.sol\":3181:3186  owner */\n      tag_69\n        /* \"AlienPresale.sol\":3181:3188  owner() */\n      jump\t// in\n    tag_138:\n        /* \"AlienPresale.sol\":3190:3197  balance */\n      dup3\n        /* \"AlienPresale.sol\":3157:3167  alienToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AlienPresale.sol\":3157:3180  alienToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_116\n      swap1\n        /* \"AlienPresale.sol\":3157:3198  alienToken.safeTransfer(owner(), balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"AlienPresale.sol\":3041:3205  {... */\n      pop\n        /* \"AlienPresale.sol\":2990:3205  function withdrawUnsoldTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"AlienPresale.sol\":2093:2531  function buyTokens() external payable nonReentrant saleActive {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_140:\n        /* \"AlienPresale.sol\":1963:1972  startTime */\n      sload(0x04)\n        /* \"AlienPresale.sol\":1944:1959  block.timestamp */\n      timestamp\n        /* \"AlienPresale.sol\":1944:1972  block.timestamp >= startTime */\n      lt\n      iszero\n        /* \"AlienPresale.sol\":1944:2002  block.timestamp >= startTime && block.timestamp <= endTime */\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n        /* \"AlienPresale.sol\":1995:2002  endTime */\n      sload(0x05)\n        /* \"AlienPresale.sol\":1976:1991  block.timestamp */\n      timestamp\n        /* \"AlienPresale.sol\":1976:2002  block.timestamp <= endTime */\n      gt\n      iszero\n        /* \"AlienPresale.sol\":1944:2002  block.timestamp >= startTime && block.timestamp <= endTime */\n    tag_142:\n        /* \"AlienPresale.sol\":1936:2025  require(block.timestamp >= startTime && block.timestamp <= endTime, \"Presale not active\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"AlienPresale.sol\":2044:2050  paused */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AlienPresale.sol\":2043:2050  !paused */\n      iszero\n        /* \"AlienPresale.sol\":2035:2069  require(!paused, \"Presale paused\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"AlienPresale.sol\":2185:2186  0 */\n      0x00\n        /* \"AlienPresale.sol\":2173:2182  msg.value */\n      callvalue\n        /* \"AlienPresale.sol\":2173:2186  msg.value > 0 */\n      gt\n        /* \"AlienPresale.sol\":2165:2201  require(msg.value > 0, \"Send MATIC\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"AlienPresale.sol\":2246:2253  hardCap */\n      sload(0x06)\n        /* \"AlienPresale.sol\":2233:2242  msg.value */\n      callvalue\n        /* \"AlienPresale.sol\":2219:2230  totalRaised */\n      sload(0x07)\n        /* \"AlienPresale.sol\":2219:2242  totalRaised + msg.value */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"AlienPresale.sol\":2219:2253  totalRaised + msg.value <= hardCap */\n      gt\n      iszero\n        /* \"AlienPresale.sol\":2211:2273  require(totalRaised + msg.value <= hardCap, \"Exceeds hardcap\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"AlienPresale.sol\":2284:2298  uint256 tokens */\n      0x00\n        /* \"AlienPresale.sol\":2322:2332  tokenPrice */\n      sload(0x03)\n        /* \"AlienPresale.sol\":2314:2318  1e18 */\n      0x0de0b6b3a7640000\n        /* \"AlienPresale.sol\":2302:2311  msg.value */\n      callvalue\n        /* \"AlienPresale.sol\":2302:2318  msg.value * 1e18 */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"AlienPresale.sol\":2301:2332  (msg.value * 1e18) / tokenPrice */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"AlienPresale.sol\":2284:2332  uint256 tokens = (msg.value * 1e18) / tokenPrice */\n      swap1\n      pop\n        /* \"AlienPresale.sol\":2374:2380  tokens */\n      dup1\n        /* \"AlienPresale.sol\":2343:2358  claimableTokens */\n      0x0a\n        /* \"AlienPresale.sol\":2343:2370  claimableTokens[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":2359:2369  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2343:2370  claimableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"AlienPresale.sol\":2343:2380  claimableTokens[msg.sender] += tokens */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":2419:2428  msg.value */\n      callvalue\n        /* \"AlienPresale.sol\":2390:2403  contributions */\n      0x09\n        /* \"AlienPresale.sol\":2390:2415  contributions[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":2404:2414  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2390:2415  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"AlienPresale.sol\":2390:2428  contributions[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_163\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_163:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":2453:2462  msg.value */\n      callvalue\n        /* \"AlienPresale.sol\":2438:2449  totalRaised */\n      0x07\n      0x00\n        /* \"AlienPresale.sol\":2438:2462  totalRaised += msg.value */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_164:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":2494:2504  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":2478:2524  TokensPurchased(msg.sender, msg.value, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"AlienPresale.sol\":2506:2515  msg.value */\n      callvalue\n        /* \"AlienPresale.sol\":2517:2523  tokens */\n      dup4\n        /* \"AlienPresale.sol\":2478:2524  TokensPurchased(msg.sender, msg.value, tokens) */\n      mload(0x40)\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"AlienPresale.sol\":2155:2531  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_167:\n        /* \"AlienPresale.sol\":2093:2531  function buyTokens() external payable nonReentrant saleActive {... */\n      jump\t// out\n        /* \"AlienPresale.sol\":3211:3336  function pausePresale(bool _status) external onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"AlienPresale.sol\":3285:3292  _status */\n      dup1\n        /* \"AlienPresale.sol\":3276:3282  paused */\n      0x08\n      0x00\n        /* \"AlienPresale.sol\":3276:3292  paused = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":3307:3329  PresalePaused(_status) */\n      0x66006354ac6a35f0f9b001e7cd8a73623bab487be4239f71fb1428656e7de6a6\n        /* \"AlienPresale.sol\":3321:3328  _status */\n      dup2\n        /* \"AlienPresale.sol\":3307:3329  PresalePaused(_status) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AlienPresale.sol\":3211:3336  function pausePresale(bool _status) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AlienPresale.sol\":721:775  uint256 public constant MAX_PRESALE_DURATION = 30 days */\n    tag_88:\n        /* \"AlienPresale.sol\":768:775  30 days */\n      0x278d00\n        /* \"AlienPresale.sol\":721:775  uint256 public constant MAX_PRESALE_DURATION = 30 days */\n      dup2\n      jump\t// out\n        /* \"AlienPresale.sol\":3342:3721  function emergencyWithdraw() external nonReentrant {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_173:\n        /* \"AlienPresale.sol\":3411:3417  paused */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AlienPresale.sol\":3403:3432  require(paused, \"Not paused\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"AlienPresale.sol\":3442:3456  uint256 amount */\n      0x00\n        /* \"AlienPresale.sol\":3459:3472  contributions */\n      0x09\n        /* \"AlienPresale.sol\":3459:3484  contributions[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":3473:3483  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":3459:3484  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"AlienPresale.sol\":3442:3484  uint256 amount = contributions[msg.sender] */\n      swap1\n      pop\n        /* \"AlienPresale.sol\":3511:3512  0 */\n      0x00\n        /* \"AlienPresale.sol\":3502:3508  amount */\n      dup2\n        /* \"AlienPresale.sol\":3502:3512  amount > 0 */\n      gt\n        /* \"AlienPresale.sol\":3494:3534  require(amount > 0, \"Nothing to refund\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"AlienPresale.sol\":3573:3574  0 */\n      0x00\n        /* \"AlienPresale.sol\":3545:3558  contributions */\n      0x09\n        /* \"AlienPresale.sol\":3545:3570  contributions[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":3559:3569  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":3545:3570  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"AlienPresale.sol\":3545:3574  contributions[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":3614:3615  0 */\n      0x00\n        /* \"AlienPresale.sol\":3584:3599  claimableTokens */\n      0x0a\n        /* \"AlienPresale.sol\":3584:3611  claimableTokens[msg.sender] */\n      0x00\n        /* \"AlienPresale.sol\":3600:3610  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":3584:3611  claimableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"AlienPresale.sol\":3584:3615  claimableTokens[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AlienPresale.sol\":3633:3643  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":3625:3653  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AlienPresale.sol\":3625:3661  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"AlienPresale.sol\":3654:3660  amount */\n      dup3\n        /* \"AlienPresale.sol\":3625:3661  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n        /* \"AlienPresale.sol\":3695:3705  msg.sender */\n      caller\n        /* \"AlienPresale.sol\":3677:3714  EmergencyWithdraw(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"AlienPresale.sol\":3707:3713  amount */\n      dup3\n        /* \"AlienPresale.sol\":3677:3714  EmergencyWithdraw(msg.sender, amount) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"AlienPresale.sol\":3393:3721  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_184\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_184:\n        /* \"AlienPresale.sol\":3342:3721  function emergencyWithdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AlienPresale.sol\":579:601  uint256 public hardCap */\n    tag_99:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_213)\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_216:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_217:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_218:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_262\n        /* \"#utility.yul\":306:340   */\n      tag_263\n        /* \"#utility.yul\":315:339   */\n      tag_264\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_216\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":306:340   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":288:341   */\n      tag_216\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_219:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_266\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_218\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_220:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_268\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_219\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_221:\n        /* \"#utility.yul\":732:783   */\n      tag_270\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_220\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_28:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_272\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_221\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1129   */\n    tag_222:\n        /* \"#utility.yul\":1089:1096   */\n      0x00\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1107:1123   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1253   */\n    tag_223:\n        /* \"#utility.yul\":1222:1246   */\n      tag_275\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1222:1246   */\n      tag_222\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1217:1220   */\n      dup3\n        /* \"#utility.yul\":1210:1247   */\n      mstore\n        /* \"#utility.yul\":1135:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1481   */\n    tag_36:\n        /* \"#utility.yul\":1352:1356   */\n      0x00\n        /* \"#utility.yul\":1390:1392   */\n      0x20\n        /* \"#utility.yul\":1379:1388   */\n      dup3\n        /* \"#utility.yul\":1375:1393   */\n      add\n        /* \"#utility.yul\":1367:1393   */\n      swap1\n      pop\n        /* \"#utility.yul\":1403:1474   */\n      tag_277\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1403:1474   */\n      tag_223\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1259:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_225:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1910   */\n    tag_227:\n        /* \"#utility.yul\":1851:1858   */\n      0x00\n        /* \"#utility.yul\":1880:1904   */\n      tag_282\n        /* \"#utility.yul\":1898:1903   */\n      dup3\n        /* \"#utility.yul\":1880:1904   */\n      tag_216\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1869:1904   */\n      swap1\n      pop\n        /* \"#utility.yul\":1814:1910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2038   */\n    tag_228:\n        /* \"#utility.yul\":1989:2013   */\n      tag_284\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1989:2013   */\n      tag_227\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1982:1987   */\n      dup2\n        /* \"#utility.yul\":1979:2014   */\n      eq\n        /* \"#utility.yul\":1969:2032   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1969:2032   */\n    tag_285:\n        /* \"#utility.yul\":1916:2038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2044:2183   */\n    tag_229:\n        /* \"#utility.yul\":2090:2095   */\n      0x00\n        /* \"#utility.yul\":2128:2134   */\n      dup2\n        /* \"#utility.yul\":2115:2135   */\n      calldataload\n        /* \"#utility.yul\":2106:2135   */\n      swap1\n      pop\n        /* \"#utility.yul\":2144:2177   */\n      tag_287\n        /* \"#utility.yul\":2171:2176   */\n      dup2\n        /* \"#utility.yul\":2144:2177   */\n      tag_228\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2044:2183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2518   */\n    tag_40:\n        /* \"#utility.yul\":2248:2254   */\n      0x00\n        /* \"#utility.yul\":2297:2299   */\n      0x20\n        /* \"#utility.yul\":2285:2294   */\n      dup3\n        /* \"#utility.yul\":2276:2283   */\n      dup5\n        /* \"#utility.yul\":2272:2295   */\n      sub\n        /* \"#utility.yul\":2268:2300   */\n      slt\n        /* \"#utility.yul\":2265:2384   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2303:2382   */\n      tag_290\n      tag_225\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2265:2384   */\n    tag_289:\n        /* \"#utility.yul\":2423:2424   */\n      0x00\n        /* \"#utility.yul\":2448:2501   */\n      tag_291\n        /* \"#utility.yul\":2493:2500   */\n      dup5\n        /* \"#utility.yul\":2484:2490   */\n      dup3\n        /* \"#utility.yul\":2473:2482   */\n      dup6\n        /* \"#utility.yul\":2469:2491   */\n      add\n        /* \"#utility.yul\":2448:2501   */\n      tag_229\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2438:2501   */\n      swap2\n      pop\n        /* \"#utility.yul\":2394:2511   */\n      pop\n        /* \"#utility.yul\":2189:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2614   */\n    tag_230:\n        /* \"#utility.yul\":2558:2565   */\n      0x00\n        /* \"#utility.yul\":2601:2606   */\n      dup2\n        /* \"#utility.yul\":2594:2607   */\n      iszero\n        /* \"#utility.yul\":2587:2608   */\n      iszero\n        /* \"#utility.yul\":2576:2608   */\n      swap1\n      pop\n        /* \"#utility.yul\":2524:2614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2620:2729   */\n    tag_231:\n        /* \"#utility.yul\":2701:2722   */\n      tag_294\n        /* \"#utility.yul\":2716:2721   */\n      dup2\n        /* \"#utility.yul\":2701:2722   */\n      tag_230\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2696:2699   */\n      dup3\n        /* \"#utility.yul\":2689:2723   */\n      mstore\n        /* \"#utility.yul\":2620:2729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2945   */\n    tag_50:\n        /* \"#utility.yul\":2822:2826   */\n      0x00\n        /* \"#utility.yul\":2860:2862   */\n      0x20\n        /* \"#utility.yul\":2849:2858   */\n      dup3\n        /* \"#utility.yul\":2845:2863   */\n      add\n        /* \"#utility.yul\":2837:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2873:2938   */\n      tag_296\n        /* \"#utility.yul\":2935:2936   */\n      0x00\n        /* \"#utility.yul\":2924:2933   */\n      dup4\n        /* \"#utility.yul\":2920:2937   */\n      add\n        /* \"#utility.yul\":2911:2917   */\n      dup5\n        /* \"#utility.yul\":2873:2938   */\n      tag_231\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2735:2945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3069   */\n    tag_232:\n        /* \"#utility.yul\":3038:3062   */\n      tag_298\n        /* \"#utility.yul\":3056:3061   */\n      dup2\n        /* \"#utility.yul\":3038:3062   */\n      tag_227\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3033:3036   */\n      dup3\n        /* \"#utility.yul\":3026:3063   */\n      mstore\n        /* \"#utility.yul\":2951:3069   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3075:3297   */\n    tag_71:\n        /* \"#utility.yul\":3168:3172   */\n      0x00\n        /* \"#utility.yul\":3206:3208   */\n      0x20\n        /* \"#utility.yul\":3195:3204   */\n      dup3\n        /* \"#utility.yul\":3191:3209   */\n      add\n        /* \"#utility.yul\":3183:3209   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3290   */\n      tag_300\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3276:3285   */\n      dup4\n        /* \"#utility.yul\":3272:3289   */\n      add\n        /* \"#utility.yul\":3263:3269   */\n      dup5\n        /* \"#utility.yul\":3219:3290   */\n      tag_232\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3075:3297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3419   */\n    tag_233:\n        /* \"#utility.yul\":3373:3394   */\n      tag_302\n        /* \"#utility.yul\":3388:3393   */\n      dup2\n        /* \"#utility.yul\":3373:3394   */\n      tag_230\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3366:3371   */\n      dup2\n        /* \"#utility.yul\":3363:3395   */\n      eq\n        /* \"#utility.yul\":3353:3413   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3409:3410   */\n      0x00\n        /* \"#utility.yul\":3406:3407   */\n      dup1\n        /* \"#utility.yul\":3399:3411   */\n      revert\n        /* \"#utility.yul\":3353:3413   */\n    tag_303:\n        /* \"#utility.yul\":3303:3419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3425:3558   */\n    tag_234:\n        /* \"#utility.yul\":3468:3473   */\n      0x00\n        /* \"#utility.yul\":3506:3512   */\n      dup2\n        /* \"#utility.yul\":3493:3513   */\n      calldataload\n        /* \"#utility.yul\":3484:3513   */\n      swap1\n      pop\n        /* \"#utility.yul\":3522:3552   */\n      tag_305\n        /* \"#utility.yul\":3546:3551   */\n      dup2\n        /* \"#utility.yul\":3522:3552   */\n      tag_233\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3425:3558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3564:3887   */\n    tag_84:\n        /* \"#utility.yul\":3620:3626   */\n      0x00\n        /* \"#utility.yul\":3669:3671   */\n      0x20\n        /* \"#utility.yul\":3657:3666   */\n      dup3\n        /* \"#utility.yul\":3648:3655   */\n      dup5\n        /* \"#utility.yul\":3644:3667   */\n      sub\n        /* \"#utility.yul\":3640:3672   */\n      slt\n        /* \"#utility.yul\":3637:3756   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3675:3754   */\n      tag_308\n      tag_225\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3637:3756   */\n    tag_307:\n        /* \"#utility.yul\":3795:3796   */\n      0x00\n        /* \"#utility.yul\":3820:3870   */\n      tag_309\n        /* \"#utility.yul\":3862:3869   */\n      dup5\n        /* \"#utility.yul\":3853:3859   */\n      dup3\n        /* \"#utility.yul\":3842:3851   */\n      dup6\n        /* \"#utility.yul\":3838:3860   */\n      add\n        /* \"#utility.yul\":3820:3870   */\n      tag_234\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3810:3870   */\n      swap2\n      pop\n        /* \"#utility.yul\":3766:3880   */\n      pop\n        /* \"#utility.yul\":3564:3887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3893:4062   */\n    tag_235:\n        /* \"#utility.yul\":3977:3988   */\n      0x00\n        /* \"#utility.yul\":4011:4017   */\n      dup3\n        /* \"#utility.yul\":4006:4009   */\n      dup3\n        /* \"#utility.yul\":3999:4018   */\n      mstore\n        /* \"#utility.yul\":4051:4055   */\n      0x20\n        /* \"#utility.yul\":4046:4049   */\n      dup3\n        /* \"#utility.yul\":4042:4056   */\n      add\n        /* \"#utility.yul\":4027:4056   */\n      swap1\n      pop\n        /* \"#utility.yul\":3893:4062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4068:4234   */\n    tag_236:\n        /* \"#utility.yul\":4208:4226   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":4204:4205   */\n      0x00\n        /* \"#utility.yul\":4196:4202   */\n      dup3\n        /* \"#utility.yul\":4192:4206   */\n      add\n        /* \"#utility.yul\":4185:4227   */\n      mstore\n        /* \"#utility.yul\":4068:4234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4240:4606   */\n    tag_237:\n        /* \"#utility.yul\":4382:4385   */\n      0x00\n        /* \"#utility.yul\":4403:4470   */\n      tag_313\n        /* \"#utility.yul\":4467:4469   */\n      0x10\n        /* \"#utility.yul\":4462:4465   */\n      dup4\n        /* \"#utility.yul\":4403:4470   */\n      tag_235\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4396:4470   */\n      swap2\n      pop\n        /* \"#utility.yul\":4479:4572   */\n      tag_314\n        /* \"#utility.yul\":4568:4571   */\n      dup3\n        /* \"#utility.yul\":4479:4572   */\n      tag_236\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4597:4599   */\n      0x20\n        /* \"#utility.yul\":4592:4595   */\n      dup3\n        /* \"#utility.yul\":4588:4600   */\n      add\n        /* \"#utility.yul\":4581:4600   */\n      swap1\n      pop\n        /* \"#utility.yul\":4240:4606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:5031   */\n    tag_114:\n        /* \"#utility.yul\":4778:4782   */\n      0x00\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4805:4814   */\n      dup3\n        /* \"#utility.yul\":4801:4819   */\n      add\n        /* \"#utility.yul\":4793:4819   */\n      swap1\n      pop\n        /* \"#utility.yul\":4865:4874   */\n      dup2\n        /* \"#utility.yul\":4859:4863   */\n      dup2\n        /* \"#utility.yul\":4855:4875   */\n      sub\n        /* \"#utility.yul\":4851:4852   */\n      0x00\n        /* \"#utility.yul\":4840:4849   */\n      dup4\n        /* \"#utility.yul\":4836:4853   */\n      add\n        /* \"#utility.yul\":4829:4876   */\n      mstore\n        /* \"#utility.yul\":4893:5024   */\n      tag_316\n        /* \"#utility.yul\":5019:5023   */\n      dup2\n        /* \"#utility.yul\":4893:5024   */\n      tag_237\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4885:5024   */\n      swap1\n      pop\n        /* \"#utility.yul\":4612:5031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5037:5159   */\n    tag_238:\n        /* \"#utility.yul\":5110:5134   */\n      tag_318\n        /* \"#utility.yul\":5128:5133   */\n      dup2\n        /* \"#utility.yul\":5110:5134   */\n      tag_222\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5103:5108   */\n      dup2\n        /* \"#utility.yul\":5100:5135   */\n      eq\n        /* \"#utility.yul\":5090:5153   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5149:5150   */\n      0x00\n        /* \"#utility.yul\":5146:5147   */\n      dup1\n        /* \"#utility.yul\":5139:5151   */\n      revert\n        /* \"#utility.yul\":5090:5153   */\n    tag_319:\n        /* \"#utility.yul\":5037:5159   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5165:5308   */\n    tag_239:\n        /* \"#utility.yul\":5222:5227   */\n      0x00\n        /* \"#utility.yul\":5253:5259   */\n      dup2\n        /* \"#utility.yul\":5247:5260   */\n      mload\n        /* \"#utility.yul\":5238:5260   */\n      swap1\n      pop\n        /* \"#utility.yul\":5269:5302   */\n      tag_321\n        /* \"#utility.yul\":5296:5301   */\n      dup2\n        /* \"#utility.yul\":5269:5302   */\n      tag_238\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5165:5308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5665   */\n    tag_133:\n        /* \"#utility.yul\":5384:5390   */\n      0x00\n        /* \"#utility.yul\":5433:5435   */\n      0x20\n        /* \"#utility.yul\":5421:5430   */\n      dup3\n        /* \"#utility.yul\":5412:5419   */\n      dup5\n        /* \"#utility.yul\":5408:5431   */\n      sub\n        /* \"#utility.yul\":5404:5436   */\n      slt\n        /* \"#utility.yul\":5401:5520   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5439:5518   */\n      tag_324\n      tag_225\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5401:5520   */\n    tag_323:\n        /* \"#utility.yul\":5559:5560   */\n      0x00\n        /* \"#utility.yul\":5584:5648   */\n      tag_325\n        /* \"#utility.yul\":5640:5647   */\n      dup5\n        /* \"#utility.yul\":5631:5637   */\n      dup3\n        /* \"#utility.yul\":5620:5629   */\n      dup6\n        /* \"#utility.yul\":5616:5638   */\n      add\n        /* \"#utility.yul\":5584:5648   */\n      tag_239\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5574:5648   */\n      swap2\n      pop\n        /* \"#utility.yul\":5530:5658   */\n      pop\n        /* \"#utility.yul\":5314:5665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5830   */\n    tag_240:\n        /* \"#utility.yul\":5811:5822   */\n      0x4e6f20746f6b656e730000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5807:5808   */\n      0x00\n        /* \"#utility.yul\":5799:5805   */\n      dup3\n        /* \"#utility.yul\":5795:5809   */\n      add\n        /* \"#utility.yul\":5788:5823   */\n      mstore\n        /* \"#utility.yul\":5671:5830   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5836:6201   */\n    tag_241:\n        /* \"#utility.yul\":5978:5981   */\n      0x00\n        /* \"#utility.yul\":5999:6065   */\n      tag_328\n        /* \"#utility.yul\":6063:6064   */\n      0x09\n        /* \"#utility.yul\":6058:6061   */\n      dup4\n        /* \"#utility.yul\":5999:6065   */\n      tag_235\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5992:6065   */\n      swap2\n      pop\n        /* \"#utility.yul\":6074:6167   */\n      tag_329\n        /* \"#utility.yul\":6163:6166   */\n      dup3\n        /* \"#utility.yul\":6074:6167   */\n      tag_240\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6192:6194   */\n      0x20\n        /* \"#utility.yul\":6187:6190   */\n      dup3\n        /* \"#utility.yul\":6183:6195   */\n      add\n        /* \"#utility.yul\":6176:6195   */\n      swap1\n      pop\n        /* \"#utility.yul\":5836:6201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6207:6626   */\n    tag_136:\n        /* \"#utility.yul\":6373:6377   */\n      0x00\n        /* \"#utility.yul\":6411:6413   */\n      0x20\n        /* \"#utility.yul\":6400:6409   */\n      dup3\n        /* \"#utility.yul\":6396:6414   */\n      add\n        /* \"#utility.yul\":6388:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6460:6469   */\n      dup2\n        /* \"#utility.yul\":6454:6458   */\n      dup2\n        /* \"#utility.yul\":6450:6470   */\n      sub\n        /* \"#utility.yul\":6446:6447   */\n      0x00\n        /* \"#utility.yul\":6435:6444   */\n      dup4\n        /* \"#utility.yul\":6431:6448   */\n      add\n        /* \"#utility.yul\":6424:6471   */\n      mstore\n        /* \"#utility.yul\":6488:6619   */\n      tag_331\n        /* \"#utility.yul\":6614:6618   */\n      dup2\n        /* \"#utility.yul\":6488:6619   */\n      tag_241\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6480:6619   */\n      swap1\n      pop\n        /* \"#utility.yul\":6207:6626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:6800   */\n    tag_242:\n        /* \"#utility.yul\":6772:6792   */\n      0x50726573616c65206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":6768:6769   */\n      0x00\n        /* \"#utility.yul\":6760:6766   */\n      dup3\n        /* \"#utility.yul\":6756:6770   */\n      add\n        /* \"#utility.yul\":6749:6793   */\n      mstore\n        /* \"#utility.yul\":6632:6800   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7172   */\n    tag_243:\n        /* \"#utility.yul\":6948:6951   */\n      0x00\n        /* \"#utility.yul\":6969:7036   */\n      tag_334\n        /* \"#utility.yul\":7033:7035   */\n      0x12\n        /* \"#utility.yul\":7028:7031   */\n      dup4\n        /* \"#utility.yul\":6969:7036   */\n      tag_235\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6962:7036   */\n      swap2\n      pop\n        /* \"#utility.yul\":7045:7138   */\n      tag_335\n        /* \"#utility.yul\":7134:7137   */\n      dup3\n        /* \"#utility.yul\":7045:7138   */\n      tag_242\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7163:7165   */\n      0x20\n        /* \"#utility.yul\":7158:7161   */\n      dup3\n        /* \"#utility.yul\":7154:7166   */\n      add\n        /* \"#utility.yul\":7147:7166   */\n      swap1\n      pop\n        /* \"#utility.yul\":6806:7172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7178:7597   */\n    tag_145:\n        /* \"#utility.yul\":7344:7348   */\n      0x00\n        /* \"#utility.yul\":7382:7384   */\n      0x20\n        /* \"#utility.yul\":7371:7380   */\n      dup3\n        /* \"#utility.yul\":7367:7385   */\n      add\n        /* \"#utility.yul\":7359:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7431:7440   */\n      dup2\n        /* \"#utility.yul\":7425:7429   */\n      dup2\n        /* \"#utility.yul\":7421:7441   */\n      sub\n        /* \"#utility.yul\":7417:7418   */\n      0x00\n        /* \"#utility.yul\":7406:7415   */\n      dup4\n        /* \"#utility.yul\":7402:7419   */\n      add\n        /* \"#utility.yul\":7395:7442   */\n      mstore\n        /* \"#utility.yul\":7459:7590   */\n      tag_337\n        /* \"#utility.yul\":7585:7589   */\n      dup2\n        /* \"#utility.yul\":7459:7590   */\n      tag_243\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7451:7590   */\n      swap1\n      pop\n        /* \"#utility.yul\":7178:7597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7603:7767   */\n    tag_244:\n        /* \"#utility.yul\":7743:7759   */\n      0x50726573616c6520706175736564000000000000000000000000000000000000\n        /* \"#utility.yul\":7739:7740   */\n      0x00\n        /* \"#utility.yul\":7731:7737   */\n      dup3\n        /* \"#utility.yul\":7727:7741   */\n      add\n        /* \"#utility.yul\":7720:7760   */\n      mstore\n        /* \"#utility.yul\":7603:7767   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7773:8139   */\n    tag_245:\n        /* \"#utility.yul\":7915:7918   */\n      0x00\n        /* \"#utility.yul\":7936:8003   */\n      tag_340\n        /* \"#utility.yul\":8000:8002   */\n      0x0e\n        /* \"#utility.yul\":7995:7998   */\n      dup4\n        /* \"#utility.yul\":7936:8003   */\n      tag_235\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7929:8003   */\n      swap2\n      pop\n        /* \"#utility.yul\":8012:8105   */\n      tag_341\n        /* \"#utility.yul\":8101:8104   */\n      dup3\n        /* \"#utility.yul\":8012:8105   */\n      tag_244\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8130:8132   */\n      0x20\n        /* \"#utility.yul\":8125:8128   */\n      dup3\n        /* \"#utility.yul\":8121:8133   */\n      add\n        /* \"#utility.yul\":8114:8133   */\n      swap1\n      pop\n        /* \"#utility.yul\":7773:8139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8145:8564   */\n    tag_148:\n        /* \"#utility.yul\":8311:8315   */\n      0x00\n        /* \"#utility.yul\":8349:8351   */\n      0x20\n        /* \"#utility.yul\":8338:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8352   */\n      add\n        /* \"#utility.yul\":8326:8352   */\n      swap1\n      pop\n        /* \"#utility.yul\":8398:8407   */\n      dup2\n        /* \"#utility.yul\":8392:8396   */\n      dup2\n        /* \"#utility.yul\":8388:8408   */\n      sub\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8373:8382   */\n      dup4\n        /* \"#utility.yul\":8369:8386   */\n      add\n        /* \"#utility.yul\":8362:8409   */\n      mstore\n        /* \"#utility.yul\":8426:8557   */\n      tag_343\n        /* \"#utility.yul\":8552:8556   */\n      dup2\n        /* \"#utility.yul\":8426:8557   */\n      tag_245\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8418:8557   */\n      swap1\n      pop\n        /* \"#utility.yul\":8145:8564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8570:8730   */\n    tag_246:\n        /* \"#utility.yul\":8710:8722   */\n      0x53656e64204d4154494300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8706:8707   */\n      0x00\n        /* \"#utility.yul\":8698:8704   */\n      dup3\n        /* \"#utility.yul\":8694:8708   */\n      add\n        /* \"#utility.yul\":8687:8723   */\n      mstore\n        /* \"#utility.yul\":8570:8730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8736:9102   */\n    tag_247:\n        /* \"#utility.yul\":8878:8881   */\n      0x00\n        /* \"#utility.yul\":8899:8966   */\n      tag_346\n        /* \"#utility.yul\":8963:8965   */\n      0x0a\n        /* \"#utility.yul\":8958:8961   */\n      dup4\n        /* \"#utility.yul\":8899:8966   */\n      tag_235\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8892:8966   */\n      swap2\n      pop\n        /* \"#utility.yul\":8975:9068   */\n      tag_347\n        /* \"#utility.yul\":9064:9067   */\n      dup3\n        /* \"#utility.yul\":8975:9068   */\n      tag_246\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9088:9091   */\n      dup3\n        /* \"#utility.yul\":9084:9096   */\n      add\n        /* \"#utility.yul\":9077:9096   */\n      swap1\n      pop\n        /* \"#utility.yul\":8736:9102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9108:9527   */\n    tag_152:\n        /* \"#utility.yul\":9274:9278   */\n      0x00\n        /* \"#utility.yul\":9312:9314   */\n      0x20\n        /* \"#utility.yul\":9301:9310   */\n      dup3\n        /* \"#utility.yul\":9297:9315   */\n      add\n        /* \"#utility.yul\":9289:9315   */\n      swap1\n      pop\n        /* \"#utility.yul\":9361:9370   */\n      dup2\n        /* \"#utility.yul\":9355:9359   */\n      dup2\n        /* \"#utility.yul\":9351:9371   */\n      sub\n        /* \"#utility.yul\":9347:9348   */\n      0x00\n        /* \"#utility.yul\":9336:9345   */\n      dup4\n        /* \"#utility.yul\":9332:9349   */\n      add\n        /* \"#utility.yul\":9325:9372   */\n      mstore\n        /* \"#utility.yul\":9389:9520   */\n      tag_349\n        /* \"#utility.yul\":9515:9519   */\n      dup2\n        /* \"#utility.yul\":9389:9520   */\n      tag_247\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9381:9520   */\n      swap1\n      pop\n        /* \"#utility.yul\":9108:9527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9533:9713   */\n    tag_248:\n        /* \"#utility.yul\":9581:9658   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9578:9579   */\n      0x00\n        /* \"#utility.yul\":9571:9659   */\n      mstore\n        /* \"#utility.yul\":9678:9682   */\n      0x11\n        /* \"#utility.yul\":9675:9676   */\n      0x04\n        /* \"#utility.yul\":9668:9683   */\n      mstore\n        /* \"#utility.yul\":9702:9706   */\n      0x24\n        /* \"#utility.yul\":9699:9700   */\n      0x00\n        /* \"#utility.yul\":9692:9707   */\n      revert\n        /* \"#utility.yul\":9719:9910   */\n    tag_154:\n        /* \"#utility.yul\":9759:9762   */\n      0x00\n        /* \"#utility.yul\":9778:9798   */\n      tag_352\n        /* \"#utility.yul\":9796:9797   */\n      dup3\n        /* \"#utility.yul\":9778:9798   */\n      tag_222\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9773:9798   */\n      swap2\n      pop\n        /* \"#utility.yul\":9812:9832   */\n      tag_353\n        /* \"#utility.yul\":9830:9831   */\n      dup4\n        /* \"#utility.yul\":9812:9832   */\n      tag_222\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9807:9832   */\n      swap3\n      pop\n        /* \"#utility.yul\":9855:9856   */\n      dup3\n        /* \"#utility.yul\":9852:9853   */\n      dup3\n        /* \"#utility.yul\":9848:9857   */\n      add\n        /* \"#utility.yul\":9841:9857   */\n      swap1\n      pop\n        /* \"#utility.yul\":9876:9879   */\n      dup1\n        /* \"#utility.yul\":9873:9874   */\n      dup3\n        /* \"#utility.yul\":9870:9880   */\n      gt\n        /* \"#utility.yul\":9867:9903   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":9883:9901   */\n      tag_355\n      tag_248\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9867:9903   */\n    tag_354:\n        /* \"#utility.yul\":9719:9910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9916:10081   */\n    tag_249:\n        /* \"#utility.yul\":10056:10073   */\n      0x4578636565647320686172646361700000000000000000000000000000000000\n        /* \"#utility.yul\":10052:10053   */\n      0x00\n        /* \"#utility.yul\":10044:10050   */\n      dup3\n        /* \"#utility.yul\":10040:10054   */\n      add\n        /* \"#utility.yul\":10033:10074   */\n      mstore\n        /* \"#utility.yul\":9916:10081   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10087:10453   */\n    tag_250:\n        /* \"#utility.yul\":10229:10232   */\n      0x00\n        /* \"#utility.yul\":10250:10317   */\n      tag_358\n        /* \"#utility.yul\":10314:10316   */\n      0x0f\n        /* \"#utility.yul\":10309:10312   */\n      dup4\n        /* \"#utility.yul\":10250:10317   */\n      tag_235\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10243:10317   */\n      swap2\n      pop\n        /* \"#utility.yul\":10326:10419   */\n      tag_359\n        /* \"#utility.yul\":10415:10418   */\n      dup3\n        /* \"#utility.yul\":10326:10419   */\n      tag_249\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10444:10446   */\n      0x20\n        /* \"#utility.yul\":10439:10442   */\n      dup3\n        /* \"#utility.yul\":10435:10447   */\n      add\n        /* \"#utility.yul\":10428:10447   */\n      swap1\n      pop\n        /* \"#utility.yul\":10087:10453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10459:10878   */\n    tag_157:\n        /* \"#utility.yul\":10625:10629   */\n      0x00\n        /* \"#utility.yul\":10663:10665   */\n      0x20\n        /* \"#utility.yul\":10652:10661   */\n      dup3\n        /* \"#utility.yul\":10648:10666   */\n      add\n        /* \"#utility.yul\":10640:10666   */\n      swap1\n      pop\n        /* \"#utility.yul\":10712:10721   */\n      dup2\n        /* \"#utility.yul\":10706:10710   */\n      dup2\n        /* \"#utility.yul\":10702:10722   */\n      sub\n        /* \"#utility.yul\":10698:10699   */\n      0x00\n        /* \"#utility.yul\":10687:10696   */\n      dup4\n        /* \"#utility.yul\":10683:10700   */\n      add\n        /* \"#utility.yul\":10676:10723   */\n      mstore\n        /* \"#utility.yul\":10740:10871   */\n      tag_361\n        /* \"#utility.yul\":10866:10870   */\n      dup2\n        /* \"#utility.yul\":10740:10871   */\n      tag_250\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10732:10871   */\n      swap1\n      pop\n        /* \"#utility.yul\":10459:10878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10884:11294   */\n    tag_159:\n        /* \"#utility.yul\":10924:10931   */\n      0x00\n        /* \"#utility.yul\":10947:10967   */\n      tag_363\n        /* \"#utility.yul\":10965:10966   */\n      dup3\n        /* \"#utility.yul\":10947:10967   */\n      tag_222\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10942:10967   */\n      swap2\n      pop\n        /* \"#utility.yul\":10981:11001   */\n      tag_364\n        /* \"#utility.yul\":10999:11000   */\n      dup4\n        /* \"#utility.yul\":10981:11001   */\n      tag_222\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10976:11001   */\n      swap3\n      pop\n        /* \"#utility.yul\":11036:11037   */\n      dup3\n        /* \"#utility.yul\":11033:11034   */\n      dup3\n        /* \"#utility.yul\":11029:11038   */\n      mul\n        /* \"#utility.yul\":11058:11088   */\n      tag_365\n        /* \"#utility.yul\":11076:11087   */\n      dup2\n        /* \"#utility.yul\":11058:11088   */\n      tag_222\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11047:11088   */\n      swap2\n      pop\n        /* \"#utility.yul\":11237:11238   */\n      dup3\n        /* \"#utility.yul\":11228:11235   */\n      dup3\n        /* \"#utility.yul\":11224:11239   */\n      div\n        /* \"#utility.yul\":11221:11222   */\n      dup5\n        /* \"#utility.yul\":11218:11240   */\n      eq\n        /* \"#utility.yul\":11198:11199   */\n      dup4\n        /* \"#utility.yul\":11191:11200   */\n      iszero\n        /* \"#utility.yul\":11171:11254   */\n      or\n        /* \"#utility.yul\":11148:11287   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":11267:11285   */\n      tag_367\n      tag_248\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11148:11287   */\n    tag_366:\n        /* \"#utility.yul\":10932:11294   */\n      pop\n        /* \"#utility.yul\":10884:11294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11480   */\n    tag_251:\n        /* \"#utility.yul\":11348:11425   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11345:11346   */\n      0x00\n        /* \"#utility.yul\":11338:11426   */\n      mstore\n        /* \"#utility.yul\":11445:11449   */\n      0x12\n        /* \"#utility.yul\":11442:11443   */\n      0x04\n        /* \"#utility.yul\":11435:11450   */\n      mstore\n        /* \"#utility.yul\":11469:11473   */\n      0x24\n        /* \"#utility.yul\":11466:11467   */\n      0x00\n        /* \"#utility.yul\":11459:11474   */\n      revert\n        /* \"#utility.yul\":11486:11671   */\n    tag_161:\n        /* \"#utility.yul\":11526:11527   */\n      0x00\n        /* \"#utility.yul\":11543:11563   */\n      tag_370\n        /* \"#utility.yul\":11561:11562   */\n      dup3\n        /* \"#utility.yul\":11543:11563   */\n      tag_222\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11538:11563   */\n      swap2\n      pop\n        /* \"#utility.yul\":11577:11597   */\n      tag_371\n        /* \"#utility.yul\":11595:11596   */\n      dup4\n        /* \"#utility.yul\":11577:11597   */\n      tag_222\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11572:11597   */\n      swap3\n      pop\n        /* \"#utility.yul\":11616:11617   */\n      dup3\n        /* \"#utility.yul\":11606:11641   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":11621:11639   */\n      tag_373\n      tag_251\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11606:11641   */\n    tag_372:\n        /* \"#utility.yul\":11663:11664   */\n      dup3\n        /* \"#utility.yul\":11660:11661   */\n      dup3\n        /* \"#utility.yul\":11656:11665   */\n      div\n        /* \"#utility.yul\":11651:11665   */\n      swap1\n      pop\n        /* \"#utility.yul\":11486:11671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11677:12009   */\n    tag_166:\n        /* \"#utility.yul\":11798:11802   */\n      0x00\n        /* \"#utility.yul\":11836:11838   */\n      0x40\n        /* \"#utility.yul\":11825:11834   */\n      dup3\n        /* \"#utility.yul\":11821:11839   */\n      add\n        /* \"#utility.yul\":11813:11839   */\n      swap1\n      pop\n        /* \"#utility.yul\":11849:11920   */\n      tag_375\n        /* \"#utility.yul\":11917:11918   */\n      0x00\n        /* \"#utility.yul\":11906:11915   */\n      dup4\n        /* \"#utility.yul\":11902:11919   */\n      add\n        /* \"#utility.yul\":11893:11899   */\n      dup6\n        /* \"#utility.yul\":11849:11920   */\n      tag_223\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11930:12002   */\n      tag_376\n        /* \"#utility.yul\":11998:12000   */\n      0x20\n        /* \"#utility.yul\":11987:11996   */\n      dup4\n        /* \"#utility.yul\":11983:12001   */\n      add\n        /* \"#utility.yul\":11974:11980   */\n      dup5\n        /* \"#utility.yul\":11930:12002   */\n      tag_223\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11677:12009   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12015:12175   */\n    tag_252:\n        /* \"#utility.yul\":12155:12167   */\n      0x4e6f742070617573656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12151:12152   */\n      0x00\n        /* \"#utility.yul\":12143:12149   */\n      dup3\n        /* \"#utility.yul\":12139:12153   */\n      add\n        /* \"#utility.yul\":12132:12168   */\n      mstore\n        /* \"#utility.yul\":12015:12175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12181:12547   */\n    tag_253:\n        /* \"#utility.yul\":12323:12326   */\n      0x00\n        /* \"#utility.yul\":12344:12411   */\n      tag_379\n        /* \"#utility.yul\":12408:12410   */\n      0x0a\n        /* \"#utility.yul\":12403:12406   */\n      dup4\n        /* \"#utility.yul\":12344:12411   */\n      tag_235\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12337:12411   */\n      swap2\n      pop\n        /* \"#utility.yul\":12420:12513   */\n      tag_380\n        /* \"#utility.yul\":12509:12512   */\n      dup3\n        /* \"#utility.yul\":12420:12513   */\n      tag_252\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12538:12540   */\n      0x20\n        /* \"#utility.yul\":12533:12536   */\n      dup3\n        /* \"#utility.yul\":12529:12541   */\n      add\n        /* \"#utility.yul\":12522:12541   */\n      swap1\n      pop\n        /* \"#utility.yul\":12181:12547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12553:12972   */\n    tag_177:\n        /* \"#utility.yul\":12719:12723   */\n      0x00\n        /* \"#utility.yul\":12757:12759   */\n      0x20\n        /* \"#utility.yul\":12746:12755   */\n      dup3\n        /* \"#utility.yul\":12742:12760   */\n      add\n        /* \"#utility.yul\":12734:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12806:12815   */\n      dup2\n        /* \"#utility.yul\":12800:12804   */\n      dup2\n        /* \"#utility.yul\":12796:12816   */\n      sub\n        /* \"#utility.yul\":12792:12793   */\n      0x00\n        /* \"#utility.yul\":12781:12790   */\n      dup4\n        /* \"#utility.yul\":12777:12794   */\n      add\n        /* \"#utility.yul\":12770:12817   */\n      mstore\n        /* \"#utility.yul\":12834:12965   */\n      tag_382\n        /* \"#utility.yul\":12960:12964   */\n      dup2\n        /* \"#utility.yul\":12834:12965   */\n      tag_253\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12826:12965   */\n      swap1\n      pop\n        /* \"#utility.yul\":12553:12972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12978:13145   */\n    tag_254:\n        /* \"#utility.yul\":13118:13137   */\n      0x4e6f7468696e6720746f20726566756e64000000000000000000000000000000\n        /* \"#utility.yul\":13114:13115   */\n      0x00\n        /* \"#utility.yul\":13106:13112   */\n      dup3\n        /* \"#utility.yul\":13102:13116   */\n      add\n        /* \"#utility.yul\":13095:13138   */\n      mstore\n        /* \"#utility.yul\":12978:13145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13151:13517   */\n    tag_255:\n        /* \"#utility.yul\":13293:13296   */\n      0x00\n        /* \"#utility.yul\":13314:13381   */\n      tag_385\n        /* \"#utility.yul\":13378:13380   */\n      0x11\n        /* \"#utility.yul\":13373:13376   */\n      dup4\n        /* \"#utility.yul\":13314:13381   */\n      tag_235\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13307:13381   */\n      swap2\n      pop\n        /* \"#utility.yul\":13390:13483   */\n      tag_386\n        /* \"#utility.yul\":13479:13482   */\n      dup3\n        /* \"#utility.yul\":13390:13483   */\n      tag_254\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13508:13510   */\n      0x20\n        /* \"#utility.yul\":13503:13506   */\n      dup3\n        /* \"#utility.yul\":13499:13511   */\n      add\n        /* \"#utility.yul\":13492:13511   */\n      swap1\n      pop\n        /* \"#utility.yul\":13151:13517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13523:13942   */\n    tag_180:\n        /* \"#utility.yul\":13689:13693   */\n      0x00\n        /* \"#utility.yul\":13727:13729   */\n      0x20\n        /* \"#utility.yul\":13716:13725   */\n      dup3\n        /* \"#utility.yul\":13712:13730   */\n      add\n        /* \"#utility.yul\":13704:13730   */\n      swap1\n      pop\n        /* \"#utility.yul\":13776:13785   */\n      dup2\n        /* \"#utility.yul\":13770:13774   */\n      dup2\n        /* \"#utility.yul\":13766:13786   */\n      sub\n        /* \"#utility.yul\":13762:13763   */\n      0x00\n        /* \"#utility.yul\":13751:13760   */\n      dup4\n        /* \"#utility.yul\":13747:13764   */\n      add\n        /* \"#utility.yul\":13740:13787   */\n      mstore\n        /* \"#utility.yul\":13804:13935   */\n      tag_388\n        /* \"#utility.yul\":13930:13934   */\n      dup2\n        /* \"#utility.yul\":13804:13935   */\n      tag_255\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13796:13935   */\n      swap1\n      pop\n        /* \"#utility.yul\":13523:13942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13948:14129   */\n    tag_256:\n        /* \"#utility.yul\":14088:14121   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14084:14085   */\n      0x00\n        /* \"#utility.yul\":14076:14082   */\n      dup3\n        /* \"#utility.yul\":14072:14086   */\n      add\n        /* \"#utility.yul\":14065:14122   */\n      mstore\n        /* \"#utility.yul\":13948:14129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14135:14501   */\n    tag_257:\n        /* \"#utility.yul\":14277:14280   */\n      0x00\n        /* \"#utility.yul\":14298:14365   */\n      tag_391\n        /* \"#utility.yul\":14362:14364   */\n      0x1f\n        /* \"#utility.yul\":14357:14360   */\n      dup4\n        /* \"#utility.yul\":14298:14365   */\n      tag_235\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14291:14365   */\n      swap2\n      pop\n        /* \"#utility.yul\":14374:14467   */\n      tag_392\n        /* \"#utility.yul\":14463:14466   */\n      dup3\n        /* \"#utility.yul\":14374:14467   */\n      tag_256\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14492:14494   */\n      0x20\n        /* \"#utility.yul\":14487:14490   */\n      dup3\n        /* \"#utility.yul\":14483:14495   */\n      add\n        /* \"#utility.yul\":14476:14495   */\n      swap1\n      pop\n        /* \"#utility.yul\":14135:14501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14507:14926   */\n    tag_201:\n        /* \"#utility.yul\":14673:14677   */\n      0x00\n        /* \"#utility.yul\":14711:14713   */\n      0x20\n        /* \"#utility.yul\":14700:14709   */\n      dup3\n        /* \"#utility.yul\":14696:14714   */\n      add\n        /* \"#utility.yul\":14688:14714   */\n      swap1\n      pop\n        /* \"#utility.yul\":14760:14769   */\n      dup2\n        /* \"#utility.yul\":14754:14758   */\n      dup2\n        /* \"#utility.yul\":14750:14770   */\n      sub\n        /* \"#utility.yul\":14746:14747   */\n      0x00\n        /* \"#utility.yul\":14735:14744   */\n      dup4\n        /* \"#utility.yul\":14731:14748   */\n      add\n        /* \"#utility.yul\":14724:14771   */\n      mstore\n        /* \"#utility.yul\":14788:14919   */\n      tag_394\n        /* \"#utility.yul\":14914:14918   */\n      dup2\n        /* \"#utility.yul\":14788:14919   */\n      tag_257\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":14780:14919   */\n      swap1\n      pop\n        /* \"#utility.yul\":14507:14926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14932:15264   */\n    tag_205:\n        /* \"#utility.yul\":15053:15057   */\n      0x00\n        /* \"#utility.yul\":15091:15093   */\n      0x40\n        /* \"#utility.yul\":15080:15089   */\n      dup3\n        /* \"#utility.yul\":15076:15094   */\n      add\n        /* \"#utility.yul\":15068:15094   */\n      swap1\n      pop\n        /* \"#utility.yul\":15104:15175   */\n      tag_396\n        /* \"#utility.yul\":15172:15173   */\n      0x00\n        /* \"#utility.yul\":15161:15170   */\n      dup4\n        /* \"#utility.yul\":15157:15174   */\n      add\n        /* \"#utility.yul\":15148:15154   */\n      dup6\n        /* \"#utility.yul\":15104:15175   */\n      tag_232\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":15185:15257   */\n      tag_397\n        /* \"#utility.yul\":15253:15255   */\n      0x20\n        /* \"#utility.yul\":15242:15251   */\n      dup4\n        /* \"#utility.yul\":15238:15256   */\n      add\n        /* \"#utility.yul\":15229:15235   */\n      dup5\n        /* \"#utility.yul\":15185:15257   */\n      tag_223\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":14932:15264   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bbc51c86d0b54d19665b02248b040d251bdb9df51e9b1baa2c9e1a936260606264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 705,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8101:10",
										"nodeType": "YulBlock",
										"src": "0:8101:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "890:32:10",
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nativeSrc": "900:16:10",
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:10",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:10",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:10",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1367:972:10",
													"nodeType": "YulBlock",
													"src": "1367:972:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1414:83:10",
																"nodeType": "YulBlock",
																"src": "1414:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1416:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1416:77:10"
																			},
																			"nativeSrc": "1416:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1416:79:10"
																		},
																		"nativeSrc": "1416:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1416:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1388:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1388:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1397:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1384:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:10"
																		},
																		"nativeSrc": "1384:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1409:3:10",
																		"nodeType": "YulLiteral",
																		"src": "1409:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:10"
																},
																"nativeSrc": "1380:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1380:33:10"
															},
															"nativeSrc": "1377:120:10",
															"nodeType": "YulIf",
															"src": "1377:120:10"
														},
														{
															"nativeSrc": "1507:128:10",
															"nodeType": "YulBlock",
															"src": "1507:128:10",
															"statements": [
																{
																	"nativeSrc": "1522:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1522:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1536:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1526:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1526:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1551:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1551:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1597:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1597:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1608:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1608:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1593:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1593:3:10"
																				},
																				"nativeSrc": "1593:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1593:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1617:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1617:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1561:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1561:31:10"
																		},
																		"nativeSrc": "1561:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1561:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1551:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1551:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1645:129:10",
															"nodeType": "YulBlock",
															"src": "1645:129:10",
															"statements": [
																{
																	"nativeSrc": "1660:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1660:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1674:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1664:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1664:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1690:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1690:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1736:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1736:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1747:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1747:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1732:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1732:3:10"
																				},
																				"nativeSrc": "1732:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1732:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1756:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1756:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1700:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1700:31:10"
																		},
																		"nativeSrc": "1700:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1690:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1690:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1784:129:10",
															"nodeType": "YulBlock",
															"src": "1784:129:10",
															"statements": [
																{
																	"nativeSrc": "1799:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1799:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1813:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1813:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1803:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1803:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1829:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1829:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1875:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1875:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1886:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1886:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1871:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1871:3:10"
																				},
																				"nativeSrc": "1871:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1871:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1895:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1895:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1839:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1839:31:10"
																		},
																		"nativeSrc": "1839:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1829:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1829:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1923:129:10",
															"nodeType": "YulBlock",
															"src": "1923:129:10",
															"statements": [
																{
																	"nativeSrc": "1938:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1938:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1952:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1952:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1942:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1942:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1968:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1968:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2014:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2014:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2025:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2025:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2010:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:10"
																				},
																				"nativeSrc": "2010:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2010:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2034:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2034:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1978:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1978:31:10"
																		},
																		"nativeSrc": "1978:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1978:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1968:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1968:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2062:130:10",
															"nodeType": "YulBlock",
															"src": "2062:130:10",
															"statements": [
																{
																	"nativeSrc": "2077:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2077:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2091:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2091:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2081:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2081:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2108:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2108:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2154:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2154:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2165:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2165:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2150:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2150:3:10"
																				},
																				"nativeSrc": "2150:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2150:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2118:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2118:31:10"
																		},
																		"nativeSrc": "2118:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2108:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2108:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2202:130:10",
															"nodeType": "YulBlock",
															"src": "2202:130:10",
															"statements": [
																{
																	"nativeSrc": "2217:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2217:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2231:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2231:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2221:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2221:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2248:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2248:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2294:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2294:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2305:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2305:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2290:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2290:3:10"
																				},
																				"nativeSrc": "2290:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2290:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2314:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2258:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2258:31:10"
																		},
																		"nativeSrc": "2258:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2258:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2248:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2248:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1205:1134:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1297:9:10",
														"nodeType": "YulTypedName",
														"src": "1297:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1308:7:10",
														"nodeType": "YulTypedName",
														"src": "1308:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1320:6:10",
														"nodeType": "YulTypedName",
														"src": "1320:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1328:6:10",
														"nodeType": "YulTypedName",
														"src": "1328:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1336:6:10",
														"nodeType": "YulTypedName",
														"src": "1336:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1344:6:10",
														"nodeType": "YulTypedName",
														"src": "1344:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1352:6:10",
														"nodeType": "YulTypedName",
														"src": "1352:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1360:6:10",
														"nodeType": "YulTypedName",
														"src": "1360:6:10",
														"type": ""
													}
												],
												"src": "1205:1134:10"
											},
											{
												"body": {
													"nativeSrc": "2410:53:10",
													"nodeType": "YulBlock",
													"src": "2410:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2427:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2427:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2450:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2450:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2432:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2432:17:10"
																		},
																		"nativeSrc": "2432:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2432:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2420:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																},
																"nativeSrc": "2420:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2420:37:10"
															},
															"nativeSrc": "2420:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2420:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2345:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2398:5:10",
														"nodeType": "YulTypedName",
														"src": "2398:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2405:3:10",
														"nodeType": "YulTypedName",
														"src": "2405:3:10",
														"type": ""
													}
												],
												"src": "2345:118:10"
											},
											{
												"body": {
													"nativeSrc": "2567:124:10",
													"nodeType": "YulBlock",
													"src": "2567:124:10",
													"statements": [
														{
															"nativeSrc": "2577:26:10",
															"nodeType": "YulAssignment",
															"src": "2577:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2589:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2589:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2600:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2600:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2585:3:10"
																},
																"nativeSrc": "2585:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2585:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2577:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2577:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2657:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2657:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2670:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2670:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2681:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2681:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2666:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2666:3:10"
																		},
																		"nativeSrc": "2666:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2666:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2613:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2613:43:10"
																},
																"nativeSrc": "2613:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2613:71:10"
															},
															"nativeSrc": "2613:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2613:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2469:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2539:9:10",
														"nodeType": "YulTypedName",
														"src": "2539:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2551:6:10",
														"nodeType": "YulTypedName",
														"src": "2551:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2562:4:10",
														"nodeType": "YulTypedName",
														"src": "2562:4:10",
														"type": ""
													}
												],
												"src": "2469:222:10"
											},
											{
												"body": {
													"nativeSrc": "2793:73:10",
													"nodeType": "YulBlock",
													"src": "2793:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2810:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2810:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2815:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2815:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2803:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2803:6:10"
																},
																"nativeSrc": "2803:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2803:19:10"
															},
															"nativeSrc": "2803:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2803:19:10"
														},
														{
															"nativeSrc": "2831:29:10",
															"nodeType": "YulAssignment",
															"src": "2831:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2850:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2850:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2855:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2855:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2846:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2846:3:10"
																},
																"nativeSrc": "2846:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2846:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2831:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2831:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2697:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2765:3:10",
														"nodeType": "YulTypedName",
														"src": "2765:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2770:6:10",
														"nodeType": "YulTypedName",
														"src": "2770:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2781:11:10",
														"nodeType": "YulTypedName",
														"src": "2781:11:10",
														"type": ""
													}
												],
												"src": "2697:169:10"
											},
											{
												"body": {
													"nativeSrc": "2978:57:10",
													"nodeType": "YulBlock",
													"src": "2978:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3000:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3000:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3008:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3008:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2996:3:10"
																		},
																		"nativeSrc": "2996:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "3012:15:10",
																		"nodeType": "YulLiteral",
																		"src": "3012:15:10",
																		"type": "",
																		"value": "Invalid token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2989:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2989:6:10"
																},
																"nativeSrc": "2989:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2989:39:10"
															},
															"nativeSrc": "2989:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "2989:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
												"nativeSrc": "2872:163:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2970:6:10",
														"nodeType": "YulTypedName",
														"src": "2970:6:10",
														"type": ""
													}
												],
												"src": "2872:163:10"
											},
											{
												"body": {
													"nativeSrc": "3187:220:10",
													"nodeType": "YulBlock",
													"src": "3187:220:10",
													"statements": [
														{
															"nativeSrc": "3197:74:10",
															"nodeType": "YulAssignment",
															"src": "3197:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3263:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3268:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3268:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3204:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3204:58:10"
																},
																"nativeSrc": "3204:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3204:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3197:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3369:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																	"nativeSrc": "3280:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3280:88:10"
																},
																"nativeSrc": "3280:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3280:93:10"
															},
															"nativeSrc": "3280:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3280:93:10"
														},
														{
															"nativeSrc": "3382:19:10",
															"nodeType": "YulAssignment",
															"src": "3382:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3393:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3393:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3398:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3389:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3389:3:10"
																},
																"nativeSrc": "3389:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3389:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3382:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3382:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3041:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3175:3:10",
														"nodeType": "YulTypedName",
														"src": "3175:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3183:3:10",
														"nodeType": "YulTypedName",
														"src": "3183:3:10",
														"type": ""
													}
												],
												"src": "3041:366:10"
											},
											{
												"body": {
													"nativeSrc": "3584:248:10",
													"nodeType": "YulBlock",
													"src": "3584:248:10",
													"statements": [
														{
															"nativeSrc": "3594:26:10",
															"nodeType": "YulAssignment",
															"src": "3594:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3606:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3606:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:10"
																},
																"nativeSrc": "3602:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3602:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3594:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3594:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3641:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3641:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3652:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3652:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:10"
																		},
																		"nativeSrc": "3637:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3637:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3660:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3660:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3666:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3666:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3656:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3656:3:10"
																		},
																		"nativeSrc": "3656:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3656:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3630:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:10"
																},
																"nativeSrc": "3630:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3630:47:10"
															},
															"nativeSrc": "3630:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3630:47:10"
														},
														{
															"nativeSrc": "3686:139:10",
															"nodeType": "YulAssignment",
															"src": "3686:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3820:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3820:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3694:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3694:124:10"
																},
																"nativeSrc": "3694:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3694:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3686:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3686:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3413:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3564:9:10",
														"nodeType": "YulTypedName",
														"src": "3564:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3579:4:10",
														"nodeType": "YulTypedName",
														"src": "3579:4:10",
														"type": ""
													}
												],
												"src": "3413:419:10"
											},
											{
												"body": {
													"nativeSrc": "3944:68:10",
													"nodeType": "YulBlock",
													"src": "3944:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3966:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3974:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3974:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:10"
																		},
																		"nativeSrc": "3962:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:14:10"
																	},
																	{
																		"hexValue": "5374617274206d757374206265206265666f726520656e64",
																		"kind": "string",
																		"nativeSrc": "3978:26:10",
																		"nodeType": "YulLiteral",
																		"src": "3978:26:10",
																		"type": "",
																		"value": "Start must be before end"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:10"
																},
																"nativeSrc": "3955:50:10",
																"nodeType": "YulFunctionCall",
																"src": "3955:50:10"
															},
															"nativeSrc": "3955:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "3955:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d",
												"nativeSrc": "3838:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3936:6:10",
														"nodeType": "YulTypedName",
														"src": "3936:6:10",
														"type": ""
													}
												],
												"src": "3838:174:10"
											},
											{
												"body": {
													"nativeSrc": "4164:220:10",
													"nodeType": "YulBlock",
													"src": "4164:220:10",
													"statements": [
														{
															"nativeSrc": "4174:74:10",
															"nodeType": "YulAssignment",
															"src": "4174:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4240:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4240:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4245:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4245:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4181:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4181:58:10"
																},
																"nativeSrc": "4181:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4181:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4174:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4174:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4346:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4346:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d",
																	"nativeSrc": "4257:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4257:88:10"
																},
																"nativeSrc": "4257:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4257:93:10"
															},
															"nativeSrc": "4257:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4257:93:10"
														},
														{
															"nativeSrc": "4359:19:10",
															"nodeType": "YulAssignment",
															"src": "4359:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4370:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4370:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4375:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4375:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4366:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:10"
																},
																"nativeSrc": "4366:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4366:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4359:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4359:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4018:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4152:3:10",
														"nodeType": "YulTypedName",
														"src": "4152:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4160:3:10",
														"nodeType": "YulTypedName",
														"src": "4160:3:10",
														"type": ""
													}
												],
												"src": "4018:366:10"
											},
											{
												"body": {
													"nativeSrc": "4561:248:10",
													"nodeType": "YulBlock",
													"src": "4561:248:10",
													"statements": [
														{
															"nativeSrc": "4571:26:10",
															"nodeType": "YulAssignment",
															"src": "4571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:10"
																},
																"nativeSrc": "4579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4618:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4629:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4629:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4614:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:10"
																		},
																		"nativeSrc": "4614:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4614:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4637:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4637:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4643:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4643:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4633:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:10"
																		},
																		"nativeSrc": "4633:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4633:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4607:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:10"
																},
																"nativeSrc": "4607:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4607:47:10"
															},
															"nativeSrc": "4607:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4607:47:10"
														},
														{
															"nativeSrc": "4663:139:10",
															"nodeType": "YulAssignment",
															"src": "4663:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4797:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4797:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4671:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4671:124:10"
																},
																"nativeSrc": "4671:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4671:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4390:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4541:9:10",
														"nodeType": "YulTypedName",
														"src": "4541:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4556:4:10",
														"nodeType": "YulTypedName",
														"src": "4556:4:10",
														"type": ""
													}
												],
												"src": "4390:419:10"
											},
											{
												"body": {
													"nativeSrc": "4843:152:10",
													"nodeType": "YulBlock",
													"src": "4843:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4860:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4863:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:10"
																},
																"nativeSrc": "4853:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4853:88:10"
															},
															"nativeSrc": "4853:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4853:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4957:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4957:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4960:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4960:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4950:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:10"
																},
																"nativeSrc": "4950:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4950:15:10"
															},
															"nativeSrc": "4950:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4950:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4981:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4981:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4984:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4984:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4974:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4974:6:10"
																},
																"nativeSrc": "4974:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4974:15:10"
															},
															"nativeSrc": "4974:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4974:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4815:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4815:180:10"
											},
											{
												"body": {
													"nativeSrc": "5046:149:10",
													"nodeType": "YulBlock",
													"src": "5046:149:10",
													"statements": [
														{
															"nativeSrc": "5056:25:10",
															"nodeType": "YulAssignment",
															"src": "5056:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5079:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5079:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5061:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5061:17:10"
																},
																"nativeSrc": "5061:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5061:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5056:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5056:1:10"
																}
															]
														},
														{
															"nativeSrc": "5090:25:10",
															"nodeType": "YulAssignment",
															"src": "5090:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5113:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5113:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5095:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5095:17:10"
																},
																"nativeSrc": "5095:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5095:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5090:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5090:1:10"
																}
															]
														},
														{
															"nativeSrc": "5124:17:10",
															"nodeType": "YulAssignment",
															"src": "5124:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5136:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5136:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5139:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5139:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5132:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5132:3:10"
																},
																"nativeSrc": "5132:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5132:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5124:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5124:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5166:22:10",
																"nodeType": "YulBlock",
																"src": "5166:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5168:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:16:10"
																			},
																			"nativeSrc": "5168:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5168:18:10"
																		},
																		"nativeSrc": "5168:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5168:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5157:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5157:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5163:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5163:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5154:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5154:2:10"
																},
																"nativeSrc": "5154:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5154:11:10"
															},
															"nativeSrc": "5151:37:10",
															"nodeType": "YulIf",
															"src": "5151:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5001:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5032:1:10",
														"nodeType": "YulTypedName",
														"src": "5032:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5035:1:10",
														"nodeType": "YulTypedName",
														"src": "5035:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5041:4:10",
														"nodeType": "YulTypedName",
														"src": "5041:4:10",
														"type": ""
													}
												],
												"src": "5001:194:10"
											},
											{
												"body": {
													"nativeSrc": "5307:60:10",
													"nodeType": "YulBlock",
													"src": "5307:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5329:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5329:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5337:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5337:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5325:3:10"
																		},
																		"nativeSrc": "5325:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5325:14:10"
																	},
																	{
																		"hexValue": "50726573616c6520746f6f206c6f6e67",
																		"kind": "string",
																		"nativeSrc": "5341:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5341:18:10",
																		"type": "",
																		"value": "Presale too long"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5318:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:10"
																},
																"nativeSrc": "5318:42:10",
																"nodeType": "YulFunctionCall",
																"src": "5318:42:10"
															},
															"nativeSrc": "5318:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "5318:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1",
												"nativeSrc": "5201:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5299:6:10",
														"nodeType": "YulTypedName",
														"src": "5299:6:10",
														"type": ""
													}
												],
												"src": "5201:166:10"
											},
											{
												"body": {
													"nativeSrc": "5519:220:10",
													"nodeType": "YulBlock",
													"src": "5519:220:10",
													"statements": [
														{
															"nativeSrc": "5529:74:10",
															"nodeType": "YulAssignment",
															"src": "5529:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5595:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5595:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5600:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5600:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5536:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5536:58:10"
																},
																"nativeSrc": "5536:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5536:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5701:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5701:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1",
																	"nativeSrc": "5612:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5612:88:10"
																},
																"nativeSrc": "5612:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5612:93:10"
															},
															"nativeSrc": "5612:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5612:93:10"
														},
														{
															"nativeSrc": "5714:19:10",
															"nodeType": "YulAssignment",
															"src": "5714:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5725:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5725:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5730:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5721:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:10"
																},
																"nativeSrc": "5721:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5721:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5714:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5714:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5373:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5507:3:10",
														"nodeType": "YulTypedName",
														"src": "5507:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5515:3:10",
														"nodeType": "YulTypedName",
														"src": "5515:3:10",
														"type": ""
													}
												],
												"src": "5373:366:10"
											},
											{
												"body": {
													"nativeSrc": "5916:248:10",
													"nodeType": "YulBlock",
													"src": "5916:248:10",
													"statements": [
														{
															"nativeSrc": "5926:26:10",
															"nodeType": "YulAssignment",
															"src": "5926:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5938:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5938:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5949:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5934:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:10"
																},
																"nativeSrc": "5934:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5934:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5926:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5973:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5973:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5984:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5984:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5969:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:10"
																		},
																		"nativeSrc": "5969:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5969:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5992:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5992:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5998:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5998:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5988:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:10"
																		},
																		"nativeSrc": "5988:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5988:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5962:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:10"
																},
																"nativeSrc": "5962:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5962:47:10"
															},
															"nativeSrc": "5962:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5962:47:10"
														},
														{
															"nativeSrc": "6018:139:10",
															"nodeType": "YulAssignment",
															"src": "6018:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6152:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6152:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6026:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6026:124:10"
																},
																"nativeSrc": "6026:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6026:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6018:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6018:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5745:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5896:9:10",
														"nodeType": "YulTypedName",
														"src": "5896:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5911:4:10",
														"nodeType": "YulTypedName",
														"src": "5911:4:10",
														"type": ""
													}
												],
												"src": "5745:419:10"
											},
											{
												"body": {
													"nativeSrc": "6276:57:10",
													"nodeType": "YulBlock",
													"src": "6276:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6298:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6306:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6306:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6294:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6294:3:10"
																		},
																		"nativeSrc": "6294:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6294:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "6310:15:10",
																		"nodeType": "YulLiteral",
																		"src": "6310:15:10",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6287:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:10"
																},
																"nativeSrc": "6287:39:10",
																"nodeType": "YulFunctionCall",
																"src": "6287:39:10"
															},
															"nativeSrc": "6287:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "6287:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
												"nativeSrc": "6170:163:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6268:6:10",
														"nodeType": "YulTypedName",
														"src": "6268:6:10",
														"type": ""
													}
												],
												"src": "6170:163:10"
											},
											{
												"body": {
													"nativeSrc": "6485:220:10",
													"nodeType": "YulBlock",
													"src": "6485:220:10",
													"statements": [
														{
															"nativeSrc": "6495:74:10",
															"nodeType": "YulAssignment",
															"src": "6495:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6561:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6561:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6566:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6566:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6502:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6502:58:10"
																},
																"nativeSrc": "6502:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6502:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6495:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																	"nativeSrc": "6578:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6578:88:10"
																},
																"nativeSrc": "6578:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6578:93:10"
															},
															"nativeSrc": "6578:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6578:93:10"
														},
														{
															"nativeSrc": "6680:19:10",
															"nodeType": "YulAssignment",
															"src": "6680:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6691:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6691:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6696:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6696:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6687:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6687:3:10"
																},
																"nativeSrc": "6687:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6687:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6680:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6680:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6339:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6473:3:10",
														"nodeType": "YulTypedName",
														"src": "6473:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6481:3:10",
														"nodeType": "YulTypedName",
														"src": "6481:3:10",
														"type": ""
													}
												],
												"src": "6339:366:10"
											},
											{
												"body": {
													"nativeSrc": "6882:248:10",
													"nodeType": "YulBlock",
													"src": "6882:248:10",
													"statements": [
														{
															"nativeSrc": "6892:26:10",
															"nodeType": "YulAssignment",
															"src": "6892:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6904:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6904:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6915:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6915:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6900:3:10"
																},
																"nativeSrc": "6900:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6900:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6892:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6892:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6939:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6939:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6950:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6950:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6935:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6935:3:10"
																		},
																		"nativeSrc": "6935:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6935:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6958:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6958:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6964:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6964:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:10"
																		},
																		"nativeSrc": "6954:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6954:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6928:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6928:6:10"
																},
																"nativeSrc": "6928:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6928:47:10"
															},
															"nativeSrc": "6928:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6928:47:10"
														},
														{
															"nativeSrc": "6984:139:10",
															"nodeType": "YulAssignment",
															"src": "6984:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7118:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7118:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6992:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6992:124:10"
																},
																"nativeSrc": "6992:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6992:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6984:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6984:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6711:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6862:9:10",
														"nodeType": "YulTypedName",
														"src": "6862:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6877:4:10",
														"nodeType": "YulTypedName",
														"src": "6877:4:10",
														"type": ""
													}
												],
												"src": "6711:419:10"
											},
											{
												"body": {
													"nativeSrc": "7242:59:10",
													"nodeType": "YulBlock",
													"src": "7242:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7264:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7264:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7272:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7272:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7260:3:10"
																		},
																		"nativeSrc": "7260:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7260:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642068617264636170",
																		"kind": "string",
																		"nativeSrc": "7276:17:10",
																		"nodeType": "YulLiteral",
																		"src": "7276:17:10",
																		"type": "",
																		"value": "Invalid hardcap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:10"
																},
																"nativeSrc": "7253:41:10",
																"nodeType": "YulFunctionCall",
																"src": "7253:41:10"
															},
															"nativeSrc": "7253:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "7253:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106",
												"nativeSrc": "7136:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7234:6:10",
														"nodeType": "YulTypedName",
														"src": "7234:6:10",
														"type": ""
													}
												],
												"src": "7136:165:10"
											},
											{
												"body": {
													"nativeSrc": "7453:220:10",
													"nodeType": "YulBlock",
													"src": "7453:220:10",
													"statements": [
														{
															"nativeSrc": "7463:74:10",
															"nodeType": "YulAssignment",
															"src": "7463:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7529:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7529:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7534:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7470:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7470:58:10"
																},
																"nativeSrc": "7470:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7470:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7463:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7635:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7635:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106",
																	"nativeSrc": "7546:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7546:88:10"
																},
																"nativeSrc": "7546:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7546:93:10"
															},
															"nativeSrc": "7546:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7546:93:10"
														},
														{
															"nativeSrc": "7648:19:10",
															"nodeType": "YulAssignment",
															"src": "7648:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7659:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7659:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7664:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7655:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7655:3:10"
																},
																"nativeSrc": "7655:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7655:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7648:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7307:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7441:3:10",
														"nodeType": "YulTypedName",
														"src": "7441:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7449:3:10",
														"nodeType": "YulTypedName",
														"src": "7449:3:10",
														"type": ""
													}
												],
												"src": "7307:366:10"
											},
											{
												"body": {
													"nativeSrc": "7850:248:10",
													"nodeType": "YulBlock",
													"src": "7850:248:10",
													"statements": [
														{
															"nativeSrc": "7860:26:10",
															"nodeType": "YulAssignment",
															"src": "7860:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7872:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7872:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7883:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7883:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7868:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:10"
																},
																"nativeSrc": "7868:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7868:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7860:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7860:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7907:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7918:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7918:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7903:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:10"
																		},
																		"nativeSrc": "7903:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7903:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7926:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7932:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7932:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7922:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7922:3:10"
																		},
																		"nativeSrc": "7922:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7922:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:10"
																},
																"nativeSrc": "7896:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7896:47:10"
															},
															"nativeSrc": "7896:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7896:47:10"
														},
														{
															"nativeSrc": "7952:139:10",
															"nodeType": "YulAssignment",
															"src": "7952:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8086:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8086:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7960:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7960:124:10"
																},
																"nativeSrc": "7960:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7960:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7952:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7952:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7679:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7830:9:10",
														"nodeType": "YulTypedName",
														"src": "7830:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7845:4:10",
														"nodeType": "YulTypedName",
														"src": "7845:4:10",
														"type": ""
													}
												],
												"src": "7679:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start must be before end\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale too long\")\n\n    }\n\n    function abi_encode_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price\")\n\n    }\n\n    function abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid hardcap\")\n\n    }\n\n    function abi_encode_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001ea938038062001ea983398181016040528101906200003691906200041f565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620004c8565b60405180910390fd5b620000bb81620002c160201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160362000134576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012b9062000541565b60405180910390fd5b82841062000179576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017090620005af565b60405180910390fd5b62278d0084846200018b9190620005fc565b1115620001cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c69062000684565b60405180910390fd5b5f851162000214576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020b90620006f2565b60405180910390fd5b5f821162000259576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002509062000760565b60405180910390fd5b8560025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460038190555083600481905550826005819055508160068190555050505050505062000780565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003b18262000386565b9050919050565b620003c381620003a5565b8114620003ce575f80fd5b50565b5f81519050620003e181620003b8565b92915050565b5f819050919050565b620003fb81620003e7565b811462000406575f80fd5b50565b5f815190506200041981620003f0565b92915050565b5f805f805f8060c087890312156200043c576200043b62000382565b5b5f6200044b89828a01620003d1565b96505060206200045e89828a0162000409565b95505060406200047189828a0162000409565b94505060606200048489828a0162000409565b93505060806200049789828a0162000409565b92505060a0620004aa89828a01620003d1565b9150509295509295509295565b620004c281620003a5565b82525050565b5f602082019050620004dd5f830184620004b7565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e000000000000000000000000000000000000005f82015250565b5f62000529600d83620004e3565b91506200053682620004f3565b602082019050919050565b5f6020820190508181035f8301526200055a816200051b565b9050919050565b7f5374617274206d757374206265206265666f726520656e6400000000000000005f82015250565b5f62000597601883620004e3565b9150620005a48262000561565b602082019050919050565b5f6020820190508181035f830152620005c88162000589565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200060882620003e7565b91506200061583620003e7565b925082820390508181111562000630576200062f620005cf565b5b92915050565b7f50726573616c6520746f6f206c6f6e67000000000000000000000000000000005f82015250565b5f6200066c601083620004e3565b9150620006798262000636565b602082019050919050565b5f6020820190508181035f8301526200069d816200065e565b9050919050565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f620006da600d83620004e3565b9150620006e782620006a4565b602082019050919050565b5f6020820190508181035f8301526200070b81620006cc565b9050919050565b7f496e76616c6964206861726463617000000000000000000000000000000000005f82015250565b5f62000748600f83620004e3565b9150620007558262000712565b602082019050919050565b5f6020820190508181035f83015262000779816200073a565b9050919050565b61171b806200078e5f395ff3fe608060405260043610610113575f3560e01c806384d242261161009f578063d7299ef711610063578063d7299ef714610317578063d744b7021461033f578063db2e21bc14610369578063f2fde38b1461037f578063fb86a404146103a757610113565b806384d24226146102675780638da5cb5b146102a3578063c5c4744c146102cd578063c8bdbfb6146102f7578063d0febe4c1461030d57610113565b806348c54b9d116100e657806348c54b9d146101bd5780635c975abb146101d3578063715018a6146101fd57806378e97925146102135780637ff9b5961461023d57610113565b80631958e58a1461011757806324600fc3146101415780633197cbb61461015757806342e94c9014610181575b5f80fd5b348015610122575f80fd5b5061012b6103d1565b6040516101389190611028565b60405180910390f35b34801561014c575f80fd5b506101556103f6565b005b348015610162575f80fd5b5061016b610450565b6040516101789190611059565b60405180910390f35b34801561018c575f80fd5b506101a760048036038101906101a291906110b1565b610456565b6040516101b49190611059565b60405180910390f35b3480156101c8575f80fd5b506101d161046b565b005b3480156101de575f80fd5b506101e76105dd565b6040516101f491906110f6565b60405180910390f35b348015610208575f80fd5b506102116105ef565b005b34801561021e575f80fd5b50610227610602565b6040516102349190611059565b60405180910390f35b348015610248575f80fd5b50610251610608565b60405161025e9190611059565b60405180910390f35b348015610272575f80fd5b5061028d600480360381019061028891906110b1565b61060e565b60405161029a9190611059565b60405180910390f35b3480156102ae575f80fd5b506102b7610623565b6040516102c4919061111e565b60405180910390f35b3480156102d8575f80fd5b506102e161064a565b6040516102ee9190611059565b60405180910390f35b348015610302575f80fd5b5061030b610650565b005b61031561078c565b005b348015610322575f80fd5b5061033d60048036038101906103389190611161565b610a07565b005b34801561034a575f80fd5b50610353610a62565b6040516103609190611059565b60405180910390f35b348015610374575f80fd5b5061037d610a69565b005b34801561038a575f80fd5b506103a560048036038101906103a091906110b1565b610c63565b005b3480156103b2575f80fd5b506103bb610ce7565b6040516103c89190611059565b60405180910390f35b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103fe610ced565b5f47905061040a610623565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561044c573d5f803e3d5ffd5b5050565b60055481565b6009602052805f5260405f205f915090505481565b610473610d74565b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906111e6565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610584338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dc39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516105ca9190611059565b60405180910390a2506105db610e42565b565b60085f9054906101000a900460ff1681565b6105f7610ced565b6106005f610e4b565b565b60045481565b60035481565b600a602052805f5260405f205f915090505481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b610658610ced565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106b3919061111e565b602060405180830381865afa1580156106ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f2919061122e565b90505f8111610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d906112a3565b60405180910390fd5b610789610741610623565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dc39092919063ffffffff16565b50565b610794610d74565b60045442101580156107a857506005544211155b6107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de9061130b565b60405180910390fd5b60085f9054906101000a900460ff1615610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90611373565b60405180910390fd5b5f3411610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086f906113db565b60405180910390fd5b600654346007546108899190611426565b11156108ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c1906114a3565b60405180910390fd5b5f600354670de0b6b3a7640000346108e291906114c1565b6108ec919061152f565b905080600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461093a9190611426565b925050819055503460095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461098d9190611426565b925050819055503460075f8282546109a59190611426565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f3334836040516109f492919061155f565b60405180910390a250610a05610e42565b565b610a0f610ced565b8060085f6101000a81548160ff0219169083151502179055507f66006354ac6a35f0f9b001e7cd8a73623bab487be4239f71fb1428656e7de6a681604051610a5791906110f6565b60405180910390a150565b62278d0081565b610a71610d74565b60085f9054906101000a900460ff16610abf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab6906115d0565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3990611638565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c09573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582604051610c509190611059565b60405180910390a250610c61610e42565b565b610c6b610ced565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cdb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cd2919061111e565b60405180910390fd5b610ce481610e4b565b50565b60065481565b610cf5610f0c565b73ffffffffffffffffffffffffffffffffffffffff16610d13610623565b73ffffffffffffffffffffffffffffffffffffffff1614610d7257610d36610f0c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d69919061111e565b60405180910390fd5b565b600260015403610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db0906116a0565b60405180910390fd5b6002600181905550565b610e3d838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610df69291906116be565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f13565b505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8060205f8451602086015f885af180610f32576040513d5f823e3d81fd5b3d92505f519150505f8214610f4b576001811415610f66565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fa857836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f9f919061111e565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610ff0610feb610fe684610fae565b610fcd565b610fae565b9050919050565b5f61100182610fd6565b9050919050565b5f61101282610ff7565b9050919050565b61102281611008565b82525050565b5f60208201905061103b5f830184611019565b92915050565b5f819050919050565b61105381611041565b82525050565b5f60208201905061106c5f83018461104a565b92915050565b5f80fd5b5f61108082610fae565b9050919050565b61109081611076565b811461109a575f80fd5b50565b5f813590506110ab81611087565b92915050565b5f602082840312156110c6576110c5611072565b5b5f6110d38482850161109d565b91505092915050565b5f8115159050919050565b6110f0816110dc565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b61111881611076565b82525050565b5f6020820190506111315f83018461110f565b92915050565b611140816110dc565b811461114a575f80fd5b50565b5f8135905061115b81611137565b92915050565b5f6020828403121561117657611175611072565b5b5f6111838482850161114d565b91505092915050565b5f82825260208201905092915050565b7f4e6f7468696e6720746f20636c61696d000000000000000000000000000000005f82015250565b5f6111d060108361118c565b91506111db8261119c565b602082019050919050565b5f6020820190508181035f8301526111fd816111c4565b9050919050565b61120d81611041565b8114611217575f80fd5b50565b5f8151905061122881611204565b92915050565b5f6020828403121561124357611242611072565b5b5f6112508482850161121a565b91505092915050565b7f4e6f20746f6b656e7300000000000000000000000000000000000000000000005f82015250565b5f61128d60098361118c565b915061129882611259565b602082019050919050565b5f6020820190508181035f8301526112ba81611281565b9050919050565b7f50726573616c65206e6f742061637469766500000000000000000000000000005f82015250565b5f6112f560128361118c565b9150611300826112c1565b602082019050919050565b5f6020820190508181035f830152611322816112e9565b9050919050565b7f50726573616c65207061757365640000000000000000000000000000000000005f82015250565b5f61135d600e8361118c565b915061136882611329565b602082019050919050565b5f6020820190508181035f83015261138a81611351565b9050919050565b7f53656e64204d41544943000000000000000000000000000000000000000000005f82015250565b5f6113c5600a8361118c565b91506113d082611391565b602082019050919050565b5f6020820190508181035f8301526113f2816113b9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61143082611041565b915061143b83611041565b9250828201905080821115611453576114526113f9565b5b92915050565b7f45786365656473206861726463617000000000000000000000000000000000005f82015250565b5f61148d600f8361118c565b915061149882611459565b602082019050919050565b5f6020820190508181035f8301526114ba81611481565b9050919050565b5f6114cb82611041565b91506114d683611041565b92508282026114e481611041565b915082820484148315176114fb576114fa6113f9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61153982611041565b915061154483611041565b92508261155457611553611502565b5b828204905092915050565b5f6040820190506115725f83018561104a565b61157f602083018461104a565b9392505050565b7f4e6f7420706175736564000000000000000000000000000000000000000000005f82015250565b5f6115ba600a8361118c565b91506115c582611586565b602082019050919050565b5f6020820190508181035f8301526115e7816115ae565b9050919050565b7f4e6f7468696e6720746f20726566756e640000000000000000000000000000005f82015250565b5f61162260118361118c565b915061162d826115ee565b602082019050919050565b5f6020820190508181035f83015261164f81611616565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61168a601f8361118c565b915061169582611656565b602082019050919050565b5f6020820190508181035f8301526116b78161167e565b9050919050565b5f6040820190506116d15f83018561110f565b6116de602083018461104a565b939250505056fea2646970667358221220bbc51c86d0b54d19665b02248b040d251bdb9df51e9b1baa2c9e1a936260606264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EA9 CODESIZE SUB DUP1 PUSH3 0x1EA9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x41F JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x2C1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12B SWAP1 PUSH3 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 LT PUSH3 0x179 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x170 SWAP1 PUSH3 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 DUP5 DUP5 PUSH3 0x18B SWAP2 SWAP1 PUSH3 0x5FC JUMP JUMPDEST GT ISZERO PUSH3 0x1CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1C6 SWAP1 PUSH3 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH3 0x214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x20B SWAP1 PUSH3 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH3 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x250 SWAP1 PUSH3 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x780 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3B1 DUP3 PUSH3 0x386 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP2 PUSH3 0x3A5 JUMP JUMPDEST DUP2 EQ PUSH3 0x3CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3E1 DUP2 PUSH3 0x3B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3FB DUP2 PUSH3 0x3E7 JUMP JUMPDEST DUP2 EQ PUSH3 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x419 DUP2 PUSH3 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x43C JUMPI PUSH3 0x43B PUSH3 0x382 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x44B DUP10 DUP3 DUP11 ADD PUSH3 0x3D1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x45E DUP10 DUP3 DUP11 ADD PUSH3 0x409 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x471 DUP10 DUP3 DUP11 ADD PUSH3 0x409 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x484 DUP10 DUP3 DUP11 ADD PUSH3 0x409 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x497 DUP10 DUP3 DUP11 ADD PUSH3 0x409 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x4AA DUP10 DUP3 DUP11 ADD PUSH3 0x3D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x4C2 DUP2 PUSH3 0x3A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x4DD PUSH0 DUP4 ADD DUP5 PUSH3 0x4B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x529 PUSH1 0xD DUP4 PUSH3 0x4E3 JUMP JUMPDEST SWAP2 POP PUSH3 0x536 DUP3 PUSH3 0x4F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x55A DUP2 PUSH3 0x51B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274206D757374206265206265666F726520656E640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x597 PUSH1 0x18 DUP4 PUSH3 0x4E3 JUMP JUMPDEST SWAP2 POP PUSH3 0x5A4 DUP3 PUSH3 0x561 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x5C8 DUP2 PUSH3 0x589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x608 DUP3 PUSH3 0x3E7 JUMP JUMPDEST SWAP2 POP PUSH3 0x615 DUP4 PUSH3 0x3E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x630 JUMPI PUSH3 0x62F PUSH3 0x5CF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520746F6F206C6F6E6700000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x66C PUSH1 0x10 DUP4 PUSH3 0x4E3 JUMP JUMPDEST SWAP2 POP PUSH3 0x679 DUP3 PUSH3 0x636 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x69D DUP2 PUSH3 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x6DA PUSH1 0xD DUP4 PUSH3 0x4E3 JUMP JUMPDEST SWAP2 POP PUSH3 0x6E7 DUP3 PUSH3 0x6A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x70B DUP2 PUSH3 0x6CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420686172646361700000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x748 PUSH1 0xF DUP4 PUSH3 0x4E3 JUMP JUMPDEST SWAP2 POP PUSH3 0x755 DUP3 PUSH3 0x712 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x779 DUP2 PUSH3 0x73A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171B DUP1 PUSH3 0x78E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84D24226 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xD7299EF7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD7299EF7 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xD744B702 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xFB86A404 EQ PUSH2 0x3A7 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x84D24226 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xC8BDBFB6 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x30D JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x48C54B9D GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x23D JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x1958E58A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x181 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x3F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x5EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x650 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0x78C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x353 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3FE PUSH2 0xCED JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x40A PUSH2 0x623 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x473 PUSH2 0xD74 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x584 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDC3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x5DB PUSH2 0xE42 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5F7 PUSH2 0xCED JUMP JUMPDEST PUSH2 0x600 PUSH0 PUSH2 0xE4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x658 PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72D SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x789 PUSH2 0x741 PUSH2 0x623 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDC3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x794 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x7A8 JUMPI POP PUSH1 0x5 SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86F SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0x9F4 SWAP3 SWAP2 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xA05 PUSH2 0xE42 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0F PUSH2 0xCED JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x66006354AC6A35F0F9B001E7CD8A73623BAB487BE4239F71FB1428656E7DE6A6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0xA71 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB6 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP1 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC61 PUSH2 0xE42 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC6B PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xE4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCF5 PUSH2 0xF0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD13 PUSH2 0x623 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD72 JUMPI PUSH2 0xD36 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE3D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDF6 SWAP3 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF4B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF66 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFA8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF0 PUSH2 0xFEB PUSH2 0xFE6 DUP5 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1001 DUP3 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1012 DUP3 PUSH2 0xFF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH2 0x1008 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103B PUSH0 DUP4 ADD DUP5 PUSH2 0x1019 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1053 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x106C PUSH0 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1080 DUP3 PUSH2 0xFAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1090 DUP2 PUSH2 0x1076 JUMP JUMPDEST DUP2 EQ PUSH2 0x109A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10AB DUP2 PUSH2 0x1087 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D3 DUP5 DUP3 DUP6 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F0 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1109 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1118 DUP2 PUSH2 0x1076 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1131 PUSH0 DUP4 ADD DUP5 PUSH2 0x110F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1140 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP2 EQ PUSH2 0x114A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x115B DUP2 PUSH2 0x1137 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1183 DUP5 DUP3 DUP6 ADD PUSH2 0x114D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11D0 PUSH1 0x10 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x11DB DUP3 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FD DUP2 PUSH2 0x11C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120D DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1228 DUP2 PUSH2 0x1204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1250 DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E730000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128D PUSH1 0x9 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1298 DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BA DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F5 PUSH1 0x12 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1300 DUP3 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1322 DUP2 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C6520706175736564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135D PUSH1 0xE DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1368 DUP3 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x138A DUP2 PUSH2 0x1351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E64204D4154494300000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C5 PUSH1 0xA DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F2 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1430 DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320686172646361700000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x148D PUSH1 0xF DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1498 DUP3 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BA DUP2 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14CB DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D6 DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14E4 DUP2 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1539 DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1554 JUMPI PUSH2 0x1553 PUSH2 0x1502 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1572 PUSH0 DUP4 ADD DUP6 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x157F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F742070617573656400000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15BA PUSH1 0xA DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x15C5 DUP3 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15E7 DUP2 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20726566756E64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1622 PUSH1 0x11 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x162D DUP3 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x164F DUP2 PUSH2 0x1616 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x168A PUSH1 0x1F DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1695 DUP3 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16B7 DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH0 DUP4 ADD DUP6 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x16DE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xC5 SHR DUP7 0xD0 0xB5 0x4D NOT PUSH7 0x5B02248B040D25 SHL 0xDB SWAP14 CREATE2 0x1E SWAP12 SHL 0xAA 0x2C SWAP15 BYTE SWAP4 PUSH3 0x606062 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "298:3425:9:-:0;;;1204:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1398:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;1453:1:9::1;1430:25;;:11;:25;;::::0;1422:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1504:8;1491:10;:21;1483:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;768:7;1570:10;1559:8;:21;;;;:::i;:::-;:45;;1551:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1657:1;1643:11;:15;1635:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:1;1694:8;:12;1686:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;1757:11;1737:10;;:32;;;;;;;;;;;;;;;;;;1792:11;1779:10;:24;;;;1825:10;1813:9;:22;;;;1855:8;1845:7;:18;;;;1883:8;1873:7;:18;;;;1204:694:::0;;;;;;298:3425;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1134::-;1320:6;1328;1336;1344;1352;1360;1409:3;1397:9;1388:7;1384:23;1380:33;1377:120;;;1416:79;;:::i;:::-;1377:120;1536:1;1561:64;1617:7;1608:6;1597:9;1593:22;1561:64;:::i;:::-;1551:74;;1507:128;1674:2;1700:64;1756:7;1747:6;1736:9;1732:22;1700:64;:::i;:::-;1690:74;;1645:129;1813:2;1839:64;1895:7;1886:6;1875:9;1871:22;1839:64;:::i;:::-;1829:74;;1784:129;1952:2;1978:64;2034:7;2025:6;2014:9;2010:22;1978:64;:::i;:::-;1968:74;;1923:129;2091:3;2118:64;2174:7;2165:6;2154:9;2150:22;2118:64;:::i;:::-;2108:74;;2062:130;2231:3;2258:64;2314:7;2305:6;2294:9;2290:22;2258:64;:::i;:::-;2248:74;;2202:130;1205:1134;;;;;;;;:::o;2345:118::-;2432:24;2450:5;2432:24;:::i;:::-;2427:3;2420:37;2345:118;;:::o;2469:222::-;2562:4;2600:2;2589:9;2585:18;2577:26;;2613:71;2681:1;2670:9;2666:17;2657:6;2613:71;:::i;:::-;2469:222;;;;:::o;2697:169::-;2781:11;2815:6;2810:3;2803:19;2855:4;2850:3;2846:14;2831:29;;2697:169;;;;:::o;2872:163::-;3012:15;3008:1;3000:6;2996:14;2989:39;2872:163;:::o;3041:366::-;3183:3;3204:67;3268:2;3263:3;3204:67;:::i;:::-;3197:74;;3280:93;3369:3;3280:93;:::i;:::-;3398:2;3393:3;3389:12;3382:19;;3041:366;;;:::o;3413:419::-;3579:4;3617:2;3606:9;3602:18;3594:26;;3666:9;3660:4;3656:20;3652:1;3641:9;3637:17;3630:47;3694:131;3820:4;3694:131;:::i;:::-;3686:139;;3413:419;;;:::o;3838:174::-;3978:26;3974:1;3966:6;3962:14;3955:50;3838:174;:::o;4018:366::-;4160:3;4181:67;4245:2;4240:3;4181:67;:::i;:::-;4174:74;;4257:93;4346:3;4257:93;:::i;:::-;4375:2;4370:3;4366:12;4359:19;;4018:366;;;:::o;4390:419::-;4556:4;4594:2;4583:9;4579:18;4571:26;;4643:9;4637:4;4633:20;4629:1;4618:9;4614:17;4607:47;4671:131;4797:4;4671:131;:::i;:::-;4663:139;;4390:419;;;:::o;4815:180::-;4863:77;4860:1;4853:88;4960:4;4957:1;4950:15;4984:4;4981:1;4974:15;5001:194;5041:4;5061:20;5079:1;5061:20;:::i;:::-;5056:25;;5095:20;5113:1;5095:20;:::i;:::-;5090:25;;5139:1;5136;5132:9;5124:17;;5163:1;5157:4;5154:11;5151:37;;;5168:18;;:::i;:::-;5151:37;5001:194;;;;:::o;5201:166::-;5341:18;5337:1;5329:6;5325:14;5318:42;5201:166;:::o;5373:366::-;5515:3;5536:67;5600:2;5595:3;5536:67;:::i;:::-;5529:74;;5612:93;5701:3;5612:93;:::i;:::-;5730:2;5725:3;5721:12;5714:19;;5373:366;;;:::o;5745:419::-;5911:4;5949:2;5938:9;5934:18;5926:26;;5998:9;5992:4;5988:20;5984:1;5973:9;5969:17;5962:47;6026:131;6152:4;6026:131;:::i;:::-;6018:139;;5745:419;;;:::o;6170:163::-;6310:15;6306:1;6298:6;6294:14;6287:39;6170:163;:::o;6339:366::-;6481:3;6502:67;6566:2;6561:3;6502:67;:::i;:::-;6495:74;;6578:93;6667:3;6578:93;:::i;:::-;6696:2;6691:3;6687:12;6680:19;;6339:366;;;:::o;6711:419::-;6877:4;6915:2;6904:9;6900:18;6892:26;;6964:9;6958:4;6954:20;6950:1;6939:9;6935:17;6928:47;6992:131;7118:4;6992:131;:::i;:::-;6984:139;;6711:419;;;:::o;7136:165::-;7276:17;7272:1;7264:6;7260:14;7253:41;7136:165;:::o;7307:366::-;7449:3;7470:67;7534:2;7529:3;7470:67;:::i;:::-;7463:74;;7546:93;7635:3;7546:93;:::i;:::-;7664:2;7659:3;7655:12;7648:19;;7307:366;;;:::o;7679:419::-;7845:4;7883:2;7872:9;7868:18;7860:26;;7932:9;7926:4;7922:20;7918:1;7907:9;7903:17;7896:47;7960:131;8086:4;7960:131;:::i;:::-;7952:139;;7679:419;;;:::o;298:3425:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_PRESALE_DURATION_918": {
									"entryPoint": 2658,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 3859,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3309,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 3852,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 3650,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 3444,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3659,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alienToken_903": {
									"entryPoint": 977,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_1118": {
									"entryPoint": 1932,
									"id": 1118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimTokens_1159": {
									"entryPoint": 1131,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimableTokens_926": {
									"entryPoint": 1550,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contributions_922": {
									"entryPoint": 1110,
									"id": 922,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1283": {
									"entryPoint": 2665,
									"id": 1283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_909": {
									"entryPoint": 1104,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hardCap_911": {
									"entryPoint": 3303,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1571,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pausePresale_1229": {
									"entryPoint": 2567,
									"id": 1229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@paused_915": {
									"entryPoint": 1501,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1519,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 3523,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startTime_907": {
									"entryPoint": 1538,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice_905": {
									"entryPoint": 1544,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRaised_913": {
									"entryPoint": 1610,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3171,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFunds_1182": {
									"entryPoint": 1014,
									"id": 1182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUnsoldTokens_1213": {
									"entryPoint": 1616,
									"id": 1213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 4121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b": {
									"entryPoint": 5209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15267:10",
										"nodeType": "YulBlock",
										"src": "0:15267:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "171:28:10",
													"nodeType": "YulBlock",
													"src": "171:28:10",
													"statements": [
														{
															"nativeSrc": "181:12:10",
															"nodeType": "YulAssignment",
															"src": "181:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:10",
																"nodeType": "YulIdentifier",
																"src": "188:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:10",
														"nodeType": "YulTypedName",
														"src": "157:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:10",
														"nodeType": "YulTypedName",
														"src": "167:3:10",
														"type": ""
													}
												],
												"src": "139:60:10"
											},
											{
												"body": {
													"nativeSrc": "265:82:10",
													"nodeType": "YulBlock",
													"src": "265:82:10",
													"statements": [
														{
															"nativeSrc": "275:66:10",
															"nodeType": "YulAssignment",
															"src": "275:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:10"
																				},
																				"nativeSrc": "315:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:10"
																		},
																		"nativeSrc": "306:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:10"
																},
																"nativeSrc": "288:53:10",
																"nodeType": "YulFunctionCall",
																"src": "288:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:10",
														"nodeType": "YulTypedName",
														"src": "245:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:10",
														"nodeType": "YulTypedName",
														"src": "255:9:10",
														"type": ""
													}
												],
												"src": "205:142:10"
											},
											{
												"body": {
													"nativeSrc": "413:66:10",
													"nodeType": "YulBlock",
													"src": "413:66:10",
													"statements": [
														{
															"nativeSrc": "423:50:10",
															"nodeType": "YulAssignment",
															"src": "423:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:10"
																},
																"nativeSrc": "436:37:10",
																"nodeType": "YulFunctionCall",
																"src": "436:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:10",
														"nodeType": "YulTypedName",
														"src": "393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:10",
														"nodeType": "YulTypedName",
														"src": "403:9:10",
														"type": ""
													}
												],
												"src": "353:126:10"
											},
											{
												"body": {
													"nativeSrc": "559:66:10",
													"nodeType": "YulBlock",
													"src": "559:66:10",
													"statements": [
														{
															"nativeSrc": "569:50:10",
															"nodeType": "YulAssignment",
															"src": "569:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:10"
																},
																"nativeSrc": "582:37:10",
																"nodeType": "YulFunctionCall",
																"src": "582:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "485:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:10",
														"nodeType": "YulTypedName",
														"src": "539:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:10",
														"nodeType": "YulTypedName",
														"src": "549:9:10",
														"type": ""
													}
												],
												"src": "485:140:10"
											},
											{
												"body": {
													"nativeSrc": "710:80:10",
													"nodeType": "YulBlock",
													"src": "710:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "732:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:10"
																		},
																		"nativeSrc": "732:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:10"
																},
																"nativeSrc": "720:64:10",
																"nodeType": "YulFunctionCall",
																"src": "720:64:10"
															},
															"nativeSrc": "720:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "631:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:10",
														"nodeType": "YulTypedName",
														"src": "698:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:10",
														"nodeType": "YulTypedName",
														"src": "705:3:10",
														"type": ""
													}
												],
												"src": "631:159:10"
											},
											{
												"body": {
													"nativeSrc": "908:138:10",
													"nodeType": "YulBlock",
													"src": "908:138:10",
													"statements": [
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:10",
																		"nodeType": "YulLiteral",
																		"src": "941:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:10"
																		},
																		"nativeSrc": "1021:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "954:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:10"
																},
																"nativeSrc": "954:85:10",
																"nodeType": "YulFunctionCall",
																"src": "954:85:10"
															},
															"nativeSrc": "954:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:10",
														"nodeType": "YulTypedName",
														"src": "880:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:10",
														"nodeType": "YulTypedName",
														"src": "892:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:10",
														"nodeType": "YulTypedName",
														"src": "903:4:10",
														"type": ""
													}
												],
												"src": "796:250:10"
											},
											{
												"body": {
													"nativeSrc": "1097:32:10",
													"nodeType": "YulBlock",
													"src": "1097:32:10",
													"statements": [
														{
															"nativeSrc": "1107:16:10",
															"nodeType": "YulAssignment",
															"src": "1107:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1118:5:10",
																"nodeType": "YulIdentifier",
																"src": "1118:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1107:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1107:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1052:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1079:5:10",
														"nodeType": "YulTypedName",
														"src": "1079:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1089:7:10",
														"nodeType": "YulTypedName",
														"src": "1089:7:10",
														"type": ""
													}
												],
												"src": "1052:77:10"
											},
											{
												"body": {
													"nativeSrc": "1200:53:10",
													"nodeType": "YulBlock",
													"src": "1200:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1217:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1217:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1240:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1222:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1222:17:10"
																		},
																		"nativeSrc": "1222:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1210:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:10"
																},
																"nativeSrc": "1210:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1210:37:10"
															},
															"nativeSrc": "1210:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1210:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1135:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1188:5:10",
														"nodeType": "YulTypedName",
														"src": "1188:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1195:3:10",
														"nodeType": "YulTypedName",
														"src": "1195:3:10",
														"type": ""
													}
												],
												"src": "1135:118:10"
											},
											{
												"body": {
													"nativeSrc": "1357:124:10",
													"nodeType": "YulBlock",
													"src": "1357:124:10",
													"statements": [
														{
															"nativeSrc": "1367:26:10",
															"nodeType": "YulAssignment",
															"src": "1367:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1379:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1390:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1375:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:10"
																},
																"nativeSrc": "1375:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1375:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1367:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1367:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1447:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1471:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:10"
																		},
																		"nativeSrc": "1456:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1403:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1403:43:10"
																},
																"nativeSrc": "1403:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1403:71:10"
															},
															"nativeSrc": "1403:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1403:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1259:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1329:9:10",
														"nodeType": "YulTypedName",
														"src": "1329:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1341:6:10",
														"nodeType": "YulTypedName",
														"src": "1341:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1352:4:10",
														"nodeType": "YulTypedName",
														"src": "1352:4:10",
														"type": ""
													}
												],
												"src": "1259:222:10"
											},
											{
												"body": {
													"nativeSrc": "1527:35:10",
													"nodeType": "YulBlock",
													"src": "1527:35:10",
													"statements": [
														{
															"nativeSrc": "1537:19:10",
															"nodeType": "YulAssignment",
															"src": "1537:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1547:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:10"
																},
																"nativeSrc": "1547:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1547:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1487:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1520:6:10",
														"nodeType": "YulTypedName",
														"src": "1520:6:10",
														"type": ""
													}
												],
												"src": "1487:75:10"
											},
											{
												"body": {
													"nativeSrc": "1657:28:10",
													"nodeType": "YulBlock",
													"src": "1657:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1674:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1677:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nativeSrc": "1667:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1667:12:10"
															},
															"nativeSrc": "1667:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1568:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:10"
											},
											{
												"body": {
													"nativeSrc": "1780:28:10",
													"nodeType": "YulBlock",
													"src": "1780:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1797:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1800:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:10"
																},
																"nativeSrc": "1790:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1790:12:10"
															},
															"nativeSrc": "1790:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1691:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:10"
											},
											{
												"body": {
													"nativeSrc": "1859:51:10",
													"nodeType": "YulBlock",
													"src": "1859:51:10",
													"statements": [
														{
															"nativeSrc": "1869:35:10",
															"nodeType": "YulAssignment",
															"src": "1869:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1898:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1898:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1880:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1880:17:10"
																},
																"nativeSrc": "1880:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1880:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1869:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1869:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1814:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1841:5:10",
														"nodeType": "YulTypedName",
														"src": "1841:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1851:7:10",
														"nodeType": "YulTypedName",
														"src": "1851:7:10",
														"type": ""
													}
												],
												"src": "1814:96:10"
											},
											{
												"body": {
													"nativeSrc": "1959:79:10",
													"nodeType": "YulBlock",
													"src": "1959:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:10",
																"nodeType": "YulBlock",
																"src": "2016:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			},
																			"nativeSrc": "2018:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:10"
																		},
																		"nativeSrc": "2018:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1982:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1982:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2007:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2007:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1989:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1989:17:10"
																				},
																				"nativeSrc": "1989:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1989:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1979:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1979:2:10"
																		},
																		"nativeSrc": "1979:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1979:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:10"
																},
																"nativeSrc": "1972:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1972:43:10"
															},
															"nativeSrc": "1969:63:10",
															"nodeType": "YulIf",
															"src": "1969:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1916:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1952:5:10",
														"nodeType": "YulTypedName",
														"src": "1952:5:10",
														"type": ""
													}
												],
												"src": "1916:122:10"
											},
											{
												"body": {
													"nativeSrc": "2096:87:10",
													"nodeType": "YulBlock",
													"src": "2096:87:10",
													"statements": [
														{
															"nativeSrc": "2106:29:10",
															"nodeType": "YulAssignment",
															"src": "2106:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2128:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2128:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2115:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2115:12:10"
																},
																"nativeSrc": "2115:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2115:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2106:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2106:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2171:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2171:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2144:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2144:26:10"
																},
																"nativeSrc": "2144:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2144:33:10"
															},
															"nativeSrc": "2144:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2144:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2044:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2074:6:10",
														"nodeType": "YulTypedName",
														"src": "2074:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2082:3:10",
														"nodeType": "YulTypedName",
														"src": "2082:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2090:5:10",
														"nodeType": "YulTypedName",
														"src": "2090:5:10",
														"type": ""
													}
												],
												"src": "2044:139:10"
											},
											{
												"body": {
													"nativeSrc": "2255:263:10",
													"nodeType": "YulBlock",
													"src": "2255:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2301:83:10",
																"nodeType": "YulBlock",
																"src": "2301:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2303:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2303:77:10"
																			},
																			"nativeSrc": "2303:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2303:79:10"
																		},
																		"nativeSrc": "2303:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2276:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2276:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2285:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2272:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:10"
																		},
																		"nativeSrc": "2272:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2297:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2297:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2268:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:10"
																},
																"nativeSrc": "2268:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2268:32:10"
															},
															"nativeSrc": "2265:119:10",
															"nodeType": "YulIf",
															"src": "2265:119:10"
														},
														{
															"nativeSrc": "2394:117:10",
															"nodeType": "YulBlock",
															"src": "2394:117:10",
															"statements": [
																{
																	"nativeSrc": "2409:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2409:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2423:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2423:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2413:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2413:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2438:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2438:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2473:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2473:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2484:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2484:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2469:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2469:3:10"
																				},
																				"nativeSrc": "2469:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2469:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2493:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2493:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2448:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2448:20:10"
																		},
																		"nativeSrc": "2448:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2438:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2438:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2189:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2225:9:10",
														"nodeType": "YulTypedName",
														"src": "2225:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2236:7:10",
														"nodeType": "YulTypedName",
														"src": "2236:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2248:6:10",
														"nodeType": "YulTypedName",
														"src": "2248:6:10",
														"type": ""
													}
												],
												"src": "2189:329:10"
											},
											{
												"body": {
													"nativeSrc": "2566:48:10",
													"nodeType": "YulBlock",
													"src": "2566:48:10",
													"statements": [
														{
															"nativeSrc": "2576:32:10",
															"nodeType": "YulAssignment",
															"src": "2576:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2601:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2601:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2594:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2594:6:10"
																		},
																		"nativeSrc": "2594:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2594:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:10"
																},
																"nativeSrc": "2587:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2587:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2576:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2576:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2524:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2548:5:10",
														"nodeType": "YulTypedName",
														"src": "2548:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2558:7:10",
														"nodeType": "YulTypedName",
														"src": "2558:7:10",
														"type": ""
													}
												],
												"src": "2524:90:10"
											},
											{
												"body": {
													"nativeSrc": "2679:50:10",
													"nodeType": "YulBlock",
													"src": "2679:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2696:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2696:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2716:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2716:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2701:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "2701:14:10"
																		},
																		"nativeSrc": "2701:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2689:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2689:6:10"
																},
																"nativeSrc": "2689:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2689:34:10"
															},
															"nativeSrc": "2689:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2689:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2620:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2667:5:10",
														"nodeType": "YulTypedName",
														"src": "2667:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2674:3:10",
														"nodeType": "YulTypedName",
														"src": "2674:3:10",
														"type": ""
													}
												],
												"src": "2620:109:10"
											},
											{
												"body": {
													"nativeSrc": "2827:118:10",
													"nodeType": "YulBlock",
													"src": "2827:118:10",
													"statements": [
														{
															"nativeSrc": "2837:26:10",
															"nodeType": "YulAssignment",
															"src": "2837:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2849:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2849:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2860:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2845:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:10"
																},
																"nativeSrc": "2845:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2845:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2837:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2837:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2911:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2911:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2924:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2924:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2935:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2935:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2920:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:10"
																		},
																		"nativeSrc": "2920:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2873:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "2873:37:10"
																},
																"nativeSrc": "2873:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2873:65:10"
															},
															"nativeSrc": "2873:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2873:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2735:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2799:9:10",
														"nodeType": "YulTypedName",
														"src": "2799:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2811:6:10",
														"nodeType": "YulTypedName",
														"src": "2811:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2822:4:10",
														"nodeType": "YulTypedName",
														"src": "2822:4:10",
														"type": ""
													}
												],
												"src": "2735:210:10"
											},
											{
												"body": {
													"nativeSrc": "3016:53:10",
													"nodeType": "YulBlock",
													"src": "3016:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3033:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3033:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3056:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3056:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3038:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3038:17:10"
																		},
																		"nativeSrc": "3038:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3026:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:10"
																},
																"nativeSrc": "3026:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3026:37:10"
															},
															"nativeSrc": "3026:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3026:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2951:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3004:5:10",
														"nodeType": "YulTypedName",
														"src": "3004:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3011:3:10",
														"nodeType": "YulTypedName",
														"src": "3011:3:10",
														"type": ""
													}
												],
												"src": "2951:118:10"
											},
											{
												"body": {
													"nativeSrc": "3173:124:10",
													"nodeType": "YulBlock",
													"src": "3173:124:10",
													"statements": [
														{
															"nativeSrc": "3183:26:10",
															"nodeType": "YulAssignment",
															"src": "3183:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3195:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3206:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3206:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:10"
																},
																"nativeSrc": "3191:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3191:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3183:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3183:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3276:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3276:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3287:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3287:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3272:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3272:3:10"
																		},
																		"nativeSrc": "3272:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3272:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3219:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3219:43:10"
																},
																"nativeSrc": "3219:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3219:71:10"
															},
															"nativeSrc": "3219:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3219:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3075:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:10",
														"nodeType": "YulTypedName",
														"src": "3145:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3157:6:10",
														"nodeType": "YulTypedName",
														"src": "3157:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3168:4:10",
														"nodeType": "YulTypedName",
														"src": "3168:4:10",
														"type": ""
													}
												],
												"src": "3075:222:10"
											},
											{
												"body": {
													"nativeSrc": "3343:76:10",
													"nodeType": "YulBlock",
													"src": "3343:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3397:16:10",
																"nodeType": "YulBlock",
																"src": "3397:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3406:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3406:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3409:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3409:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3399:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3399:6:10"
																			},
																			"nativeSrc": "3399:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3399:12:10"
																		},
																		"nativeSrc": "3399:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3399:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3366:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3366:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3388:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3388:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3373:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "3373:14:10"
																				},
																				"nativeSrc": "3373:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3373:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3363:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3363:2:10"
																		},
																		"nativeSrc": "3363:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:10"
																},
																"nativeSrc": "3356:40:10",
																"nodeType": "YulFunctionCall",
																"src": "3356:40:10"
															},
															"nativeSrc": "3353:60:10",
															"nodeType": "YulIf",
															"src": "3353:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3303:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3336:5:10",
														"nodeType": "YulTypedName",
														"src": "3336:5:10",
														"type": ""
													}
												],
												"src": "3303:116:10"
											},
											{
												"body": {
													"nativeSrc": "3474:84:10",
													"nodeType": "YulBlock",
													"src": "3474:84:10",
													"statements": [
														{
															"nativeSrc": "3484:29:10",
															"nodeType": "YulAssignment",
															"src": "3484:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3506:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3493:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:10"
																},
																"nativeSrc": "3493:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3493:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3484:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3484:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3546:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3546:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3522:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "3522:23:10"
																},
																"nativeSrc": "3522:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3522:30:10"
															},
															"nativeSrc": "3522:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3522:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3425:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3452:6:10",
														"nodeType": "YulTypedName",
														"src": "3452:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3460:3:10",
														"nodeType": "YulTypedName",
														"src": "3460:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3468:5:10",
														"nodeType": "YulTypedName",
														"src": "3468:5:10",
														"type": ""
													}
												],
												"src": "3425:133:10"
											},
											{
												"body": {
													"nativeSrc": "3627:260:10",
													"nodeType": "YulBlock",
													"src": "3627:260:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3673:83:10",
																"nodeType": "YulBlock",
																"src": "3673:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3675:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3675:77:10"
																			},
																			"nativeSrc": "3675:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3675:79:10"
																		},
																		"nativeSrc": "3675:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3675:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3648:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3648:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3657:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3657:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3644:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3644:3:10"
																		},
																		"nativeSrc": "3644:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3644:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3669:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3669:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3640:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:10"
																},
																"nativeSrc": "3640:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3640:32:10"
															},
															"nativeSrc": "3637:119:10",
															"nodeType": "YulIf",
															"src": "3637:119:10"
														},
														{
															"nativeSrc": "3766:114:10",
															"nodeType": "YulBlock",
															"src": "3766:114:10",
															"statements": [
																{
																	"nativeSrc": "3781:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3781:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3795:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3795:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3785:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3785:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3810:60:10",
																	"nodeType": "YulAssignment",
																	"src": "3810:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3842:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3842:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3853:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3853:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3838:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3838:3:10"
																				},
																				"nativeSrc": "3838:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3838:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3862:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3862:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "3820:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3820:17:10"
																		},
																		"nativeSrc": "3820:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3820:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3810:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "3564:323:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3597:9:10",
														"nodeType": "YulTypedName",
														"src": "3597:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3608:7:10",
														"nodeType": "YulTypedName",
														"src": "3608:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3620:6:10",
														"nodeType": "YulTypedName",
														"src": "3620:6:10",
														"type": ""
													}
												],
												"src": "3564:323:10"
											},
											{
												"body": {
													"nativeSrc": "3989:73:10",
													"nodeType": "YulBlock",
													"src": "3989:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4006:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4006:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4011:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4011:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3999:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3999:6:10"
																},
																"nativeSrc": "3999:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3999:19:10"
															},
															"nativeSrc": "3999:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3999:19:10"
														},
														{
															"nativeSrc": "4027:29:10",
															"nodeType": "YulAssignment",
															"src": "4027:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4046:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4046:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4051:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4051:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4042:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:10"
																},
																"nativeSrc": "4042:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4042:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4027:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4027:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3893:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3961:3:10",
														"nodeType": "YulTypedName",
														"src": "3961:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3966:6:10",
														"nodeType": "YulTypedName",
														"src": "3966:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3977:11:10",
														"nodeType": "YulTypedName",
														"src": "3977:11:10",
														"type": ""
													}
												],
												"src": "3893:169:10"
											},
											{
												"body": {
													"nativeSrc": "4174:60:10",
													"nodeType": "YulBlock",
													"src": "4174:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4196:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4196:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4204:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4204:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4192:3:10"
																		},
																		"nativeSrc": "4192:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4192:14:10"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "4208:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4208:18:10",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:10"
																},
																"nativeSrc": "4185:42:10",
																"nodeType": "YulFunctionCall",
																"src": "4185:42:10"
															},
															"nativeSrc": "4185:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "4185:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nativeSrc": "4068:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4166:6:10",
														"nodeType": "YulTypedName",
														"src": "4166:6:10",
														"type": ""
													}
												],
												"src": "4068:166:10"
											},
											{
												"body": {
													"nativeSrc": "4386:220:10",
													"nodeType": "YulBlock",
													"src": "4386:220:10",
													"statements": [
														{
															"nativeSrc": "4396:74:10",
															"nodeType": "YulAssignment",
															"src": "4396:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4462:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4462:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4467:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4467:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4403:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4403:58:10"
																},
																"nativeSrc": "4403:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4403:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4396:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4396:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4568:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4568:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nativeSrc": "4479:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4479:88:10"
																},
																"nativeSrc": "4479:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4479:93:10"
															},
															"nativeSrc": "4479:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4479:93:10"
														},
														{
															"nativeSrc": "4581:19:10",
															"nodeType": "YulAssignment",
															"src": "4581:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4592:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4592:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4588:3:10"
																},
																"nativeSrc": "4588:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4588:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4581:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4581:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4240:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4374:3:10",
														"nodeType": "YulTypedName",
														"src": "4374:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4382:3:10",
														"nodeType": "YulTypedName",
														"src": "4382:3:10",
														"type": ""
													}
												],
												"src": "4240:366:10"
											},
											{
												"body": {
													"nativeSrc": "4783:248:10",
													"nodeType": "YulBlock",
													"src": "4783:248:10",
													"statements": [
														{
															"nativeSrc": "4793:26:10",
															"nodeType": "YulAssignment",
															"src": "4793:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4805:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4805:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4816:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4816:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4801:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4801:3:10"
																},
																"nativeSrc": "4801:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4801:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4793:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4840:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4840:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4851:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4851:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4836:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4836:3:10"
																		},
																		"nativeSrc": "4836:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4836:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4859:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4859:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4865:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4855:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4855:3:10"
																		},
																		"nativeSrc": "4855:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4855:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4829:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:10"
																},
																"nativeSrc": "4829:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4829:47:10"
															},
															"nativeSrc": "4829:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4829:47:10"
														},
														{
															"nativeSrc": "4885:139:10",
															"nodeType": "YulAssignment",
															"src": "4885:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5019:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5019:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4893:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4893:124:10"
																},
																"nativeSrc": "4893:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4893:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4885:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4885:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4612:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4763:9:10",
														"nodeType": "YulTypedName",
														"src": "4763:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4778:4:10",
														"nodeType": "YulTypedName",
														"src": "4778:4:10",
														"type": ""
													}
												],
												"src": "4612:419:10"
											},
											{
												"body": {
													"nativeSrc": "5080:79:10",
													"nodeType": "YulBlock",
													"src": "5080:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5137:16:10",
																"nodeType": "YulBlock",
																"src": "5137:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5146:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5146:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5149:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5149:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5139:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5139:6:10"
																			},
																			"nativeSrc": "5139:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5139:12:10"
																		},
																		"nativeSrc": "5139:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5139:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5103:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5103:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5128:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5128:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5110:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5110:17:10"
																				},
																				"nativeSrc": "5110:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5110:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5100:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5100:2:10"
																		},
																		"nativeSrc": "5100:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5100:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5093:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:10"
																},
																"nativeSrc": "5093:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5093:43:10"
															},
															"nativeSrc": "5090:63:10",
															"nodeType": "YulIf",
															"src": "5090:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5037:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5073:5:10",
														"nodeType": "YulTypedName",
														"src": "5073:5:10",
														"type": ""
													}
												],
												"src": "5037:122:10"
											},
											{
												"body": {
													"nativeSrc": "5228:80:10",
													"nodeType": "YulBlock",
													"src": "5228:80:10",
													"statements": [
														{
															"nativeSrc": "5238:22:10",
															"nodeType": "YulAssignment",
															"src": "5238:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5253:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5253:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5247:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5247:5:10"
																},
																"nativeSrc": "5247:13:10",
																"nodeType": "YulFunctionCall",
																"src": "5247:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5238:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5238:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5296:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5296:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5269:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "5269:26:10"
																},
																"nativeSrc": "5269:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5269:33:10"
															},
															"nativeSrc": "5269:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5269:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5165:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5206:6:10",
														"nodeType": "YulTypedName",
														"src": "5206:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5214:3:10",
														"nodeType": "YulTypedName",
														"src": "5214:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5222:5:10",
														"nodeType": "YulTypedName",
														"src": "5222:5:10",
														"type": ""
													}
												],
												"src": "5165:143:10"
											},
											{
												"body": {
													"nativeSrc": "5391:274:10",
													"nodeType": "YulBlock",
													"src": "5391:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5437:83:10",
																"nodeType": "YulBlock",
																"src": "5437:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5439:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5439:77:10"
																			},
																			"nativeSrc": "5439:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5439:79:10"
																		},
																		"nativeSrc": "5439:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5439:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5412:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5412:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5421:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5421:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5408:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5408:3:10"
																		},
																		"nativeSrc": "5408:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5408:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5433:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5404:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:10"
																},
																"nativeSrc": "5404:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5404:32:10"
															},
															"nativeSrc": "5401:119:10",
															"nodeType": "YulIf",
															"src": "5401:119:10"
														},
														{
															"nativeSrc": "5530:128:10",
															"nodeType": "YulBlock",
															"src": "5530:128:10",
															"statements": [
																{
																	"nativeSrc": "5545:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5545:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5559:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5559:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5549:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5549:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5574:74:10",
																	"nodeType": "YulAssignment",
																	"src": "5574:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5620:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5620:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5631:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5631:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5616:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5616:3:10"
																				},
																				"nativeSrc": "5616:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5616:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5640:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5640:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5584:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "5584:31:10"
																		},
																		"nativeSrc": "5584:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5584:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5574:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5574:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5314:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5361:9:10",
														"nodeType": "YulTypedName",
														"src": "5361:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5372:7:10",
														"nodeType": "YulTypedName",
														"src": "5372:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5384:6:10",
														"nodeType": "YulTypedName",
														"src": "5384:6:10",
														"type": ""
													}
												],
												"src": "5314:351:10"
											},
											{
												"body": {
													"nativeSrc": "5777:53:10",
													"nodeType": "YulBlock",
													"src": "5777:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5799:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5799:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5807:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5807:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5795:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:10"
																		},
																		"nativeSrc": "5795:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:14:10"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "5811:11:10",
																		"nodeType": "YulLiteral",
																		"src": "5811:11:10",
																		"type": "",
																		"value": "No tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5788:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:10"
																},
																"nativeSrc": "5788:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5788:35:10"
															},
															"nativeSrc": "5788:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5788:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4",
												"nativeSrc": "5671:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5769:6:10",
														"nodeType": "YulTypedName",
														"src": "5769:6:10",
														"type": ""
													}
												],
												"src": "5671:159:10"
											},
											{
												"body": {
													"nativeSrc": "5982:219:10",
													"nodeType": "YulBlock",
													"src": "5982:219:10",
													"statements": [
														{
															"nativeSrc": "5992:73:10",
															"nodeType": "YulAssignment",
															"src": "5992:73:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6058:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6058:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6063:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6063:1:10",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5999:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5999:58:10"
																},
																"nativeSrc": "5999:66:10",
																"nodeType": "YulFunctionCall",
																"src": "5999:66:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5992:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5992:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6163:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4",
																	"nativeSrc": "6074:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6074:88:10"
																},
																"nativeSrc": "6074:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6074:93:10"
															},
															"nativeSrc": "6074:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6074:93:10"
														},
														{
															"nativeSrc": "6176:19:10",
															"nodeType": "YulAssignment",
															"src": "6176:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6187:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6187:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6192:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6183:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:10"
																},
																"nativeSrc": "6183:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6183:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6176:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5836:365:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5970:3:10",
														"nodeType": "YulTypedName",
														"src": "5970:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5978:3:10",
														"nodeType": "YulTypedName",
														"src": "5978:3:10",
														"type": ""
													}
												],
												"src": "5836:365:10"
											},
											{
												"body": {
													"nativeSrc": "6378:248:10",
													"nodeType": "YulBlock",
													"src": "6378:248:10",
													"statements": [
														{
															"nativeSrc": "6388:26:10",
															"nodeType": "YulAssignment",
															"src": "6388:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6400:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6400:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6411:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6396:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:10"
																},
																"nativeSrc": "6396:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6396:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6388:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6388:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6435:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6435:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6446:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6446:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6431:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:10"
																		},
																		"nativeSrc": "6431:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6431:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6454:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6454:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6460:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6450:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:10"
																		},
																		"nativeSrc": "6450:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6424:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:10"
																},
																"nativeSrc": "6424:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6424:47:10"
															},
															"nativeSrc": "6424:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6424:47:10"
														},
														{
															"nativeSrc": "6480:139:10",
															"nodeType": "YulAssignment",
															"src": "6480:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6614:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6614:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6488:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6488:124:10"
																},
																"nativeSrc": "6488:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6488:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6480:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6480:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6207:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6358:9:10",
														"nodeType": "YulTypedName",
														"src": "6358:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6373:4:10",
														"nodeType": "YulTypedName",
														"src": "6373:4:10",
														"type": ""
													}
												],
												"src": "6207:419:10"
											},
											{
												"body": {
													"nativeSrc": "6738:62:10",
													"nodeType": "YulBlock",
													"src": "6738:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6760:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6760:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6768:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6768:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6756:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:10"
																		},
																		"nativeSrc": "6756:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:14:10"
																	},
																	{
																		"hexValue": "50726573616c65206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "6772:20:10",
																		"nodeType": "YulLiteral",
																		"src": "6772:20:10",
																		"type": "",
																		"value": "Presale not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6749:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6749:6:10"
																},
																"nativeSrc": "6749:44:10",
																"nodeType": "YulFunctionCall",
																"src": "6749:44:10"
															},
															"nativeSrc": "6749:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "6749:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e",
												"nativeSrc": "6632:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6730:6:10",
														"nodeType": "YulTypedName",
														"src": "6730:6:10",
														"type": ""
													}
												],
												"src": "6632:168:10"
											},
											{
												"body": {
													"nativeSrc": "6952:220:10",
													"nodeType": "YulBlock",
													"src": "6952:220:10",
													"statements": [
														{
															"nativeSrc": "6962:74:10",
															"nodeType": "YulAssignment",
															"src": "6962:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7028:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7028:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7033:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7033:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6969:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6969:58:10"
																},
																"nativeSrc": "6969:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6969:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6962:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6962:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7134:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7134:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e",
																	"nativeSrc": "7045:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7045:88:10"
																},
																"nativeSrc": "7045:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7045:93:10"
															},
															"nativeSrc": "7045:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7045:93:10"
														},
														{
															"nativeSrc": "7147:19:10",
															"nodeType": "YulAssignment",
															"src": "7147:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7158:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7163:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7154:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7154:3:10"
																},
																"nativeSrc": "7154:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7154:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7147:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7147:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6806:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6940:3:10",
														"nodeType": "YulTypedName",
														"src": "6940:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6948:3:10",
														"nodeType": "YulTypedName",
														"src": "6948:3:10",
														"type": ""
													}
												],
												"src": "6806:366:10"
											},
											{
												"body": {
													"nativeSrc": "7349:248:10",
													"nodeType": "YulBlock",
													"src": "7349:248:10",
													"statements": [
														{
															"nativeSrc": "7359:26:10",
															"nodeType": "YulAssignment",
															"src": "7359:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7371:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7371:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7367:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7367:3:10"
																},
																"nativeSrc": "7367:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7367:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7359:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7359:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7406:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7417:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7417:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7402:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:10"
																		},
																		"nativeSrc": "7402:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7425:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7425:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7431:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7431:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7421:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7421:3:10"
																		},
																		"nativeSrc": "7421:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7421:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:10"
																},
																"nativeSrc": "7395:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7395:47:10"
															},
															"nativeSrc": "7395:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7395:47:10"
														},
														{
															"nativeSrc": "7451:139:10",
															"nodeType": "YulAssignment",
															"src": "7451:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7585:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7585:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7459:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7459:124:10"
																},
																"nativeSrc": "7459:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7459:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7451:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7451:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7178:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7329:9:10",
														"nodeType": "YulTypedName",
														"src": "7329:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7344:4:10",
														"nodeType": "YulTypedName",
														"src": "7344:4:10",
														"type": ""
													}
												],
												"src": "7178:419:10"
											},
											{
												"body": {
													"nativeSrc": "7709:58:10",
													"nodeType": "YulBlock",
													"src": "7709:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7731:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7731:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7739:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7739:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7727:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:10"
																		},
																		"nativeSrc": "7727:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7727:14:10"
																	},
																	{
																		"hexValue": "50726573616c6520706175736564",
																		"kind": "string",
																		"nativeSrc": "7743:16:10",
																		"nodeType": "YulLiteral",
																		"src": "7743:16:10",
																		"type": "",
																		"value": "Presale paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7720:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:10"
																},
																"nativeSrc": "7720:40:10",
																"nodeType": "YulFunctionCall",
																"src": "7720:40:10"
															},
															"nativeSrc": "7720:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "7720:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4",
												"nativeSrc": "7603:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7701:6:10",
														"nodeType": "YulTypedName",
														"src": "7701:6:10",
														"type": ""
													}
												],
												"src": "7603:164:10"
											},
											{
												"body": {
													"nativeSrc": "7919:220:10",
													"nodeType": "YulBlock",
													"src": "7919:220:10",
													"statements": [
														{
															"nativeSrc": "7929:74:10",
															"nodeType": "YulAssignment",
															"src": "7929:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7995:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7995:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8000:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8000:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7936:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7936:58:10"
																},
																"nativeSrc": "7936:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7936:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7929:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8101:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8101:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4",
																	"nativeSrc": "8012:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8012:88:10"
																},
																"nativeSrc": "8012:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8012:93:10"
															},
															"nativeSrc": "8012:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8012:93:10"
														},
														{
															"nativeSrc": "8114:19:10",
															"nodeType": "YulAssignment",
															"src": "8114:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8125:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8125:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8130:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8130:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8121:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8121:3:10"
																},
																"nativeSrc": "8121:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8121:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8114:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7773:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7907:3:10",
														"nodeType": "YulTypedName",
														"src": "7907:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7915:3:10",
														"nodeType": "YulTypedName",
														"src": "7915:3:10",
														"type": ""
													}
												],
												"src": "7773:366:10"
											},
											{
												"body": {
													"nativeSrc": "8316:248:10",
													"nodeType": "YulBlock",
													"src": "8316:248:10",
													"statements": [
														{
															"nativeSrc": "8326:26:10",
															"nodeType": "YulAssignment",
															"src": "8326:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8338:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8338:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8349:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8349:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8334:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8334:3:10"
																},
																"nativeSrc": "8334:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8334:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8326:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8326:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8373:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8384:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8369:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:10"
																		},
																		"nativeSrc": "8369:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8369:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8392:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8392:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8398:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8398:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8388:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:10"
																		},
																		"nativeSrc": "8388:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8388:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:10"
																},
																"nativeSrc": "8362:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8362:47:10"
															},
															"nativeSrc": "8362:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8362:47:10"
														},
														{
															"nativeSrc": "8418:139:10",
															"nodeType": "YulAssignment",
															"src": "8418:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8552:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8552:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8426:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8426:124:10"
																},
																"nativeSrc": "8426:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8426:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8418:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8418:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8145:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8296:9:10",
														"nodeType": "YulTypedName",
														"src": "8296:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8311:4:10",
														"nodeType": "YulTypedName",
														"src": "8311:4:10",
														"type": ""
													}
												],
												"src": "8145:419:10"
											},
											{
												"body": {
													"nativeSrc": "8676:54:10",
													"nodeType": "YulBlock",
													"src": "8676:54:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8698:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8698:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8706:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8706:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:10"
																		},
																		"nativeSrc": "8694:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8694:14:10"
																	},
																	{
																		"hexValue": "53656e64204d41544943",
																		"kind": "string",
																		"nativeSrc": "8710:12:10",
																		"nodeType": "YulLiteral",
																		"src": "8710:12:10",
																		"type": "",
																		"value": "Send MATIC"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:10"
																},
																"nativeSrc": "8687:36:10",
																"nodeType": "YulFunctionCall",
																"src": "8687:36:10"
															},
															"nativeSrc": "8687:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "8687:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5",
												"nativeSrc": "8570:160:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8668:6:10",
														"nodeType": "YulTypedName",
														"src": "8668:6:10",
														"type": ""
													}
												],
												"src": "8570:160:10"
											},
											{
												"body": {
													"nativeSrc": "8882:220:10",
													"nodeType": "YulBlock",
													"src": "8882:220:10",
													"statements": [
														{
															"nativeSrc": "8892:74:10",
															"nodeType": "YulAssignment",
															"src": "8892:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8958:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8958:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8963:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8963:2:10",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8899:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8899:58:10"
																},
																"nativeSrc": "8899:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8899:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8892:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8892:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9064:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9064:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5",
																	"nativeSrc": "8975:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8975:88:10"
																},
																"nativeSrc": "8975:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8975:93:10"
															},
															"nativeSrc": "8975:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8975:93:10"
														},
														{
															"nativeSrc": "9077:19:10",
															"nodeType": "YulAssignment",
															"src": "9077:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9088:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9088:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9093:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:10"
																},
																"nativeSrc": "9084:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9084:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9077:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9077:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8736:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8870:3:10",
														"nodeType": "YulTypedName",
														"src": "8870:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8878:3:10",
														"nodeType": "YulTypedName",
														"src": "8878:3:10",
														"type": ""
													}
												],
												"src": "8736:366:10"
											},
											{
												"body": {
													"nativeSrc": "9279:248:10",
													"nodeType": "YulBlock",
													"src": "9279:248:10",
													"statements": [
														{
															"nativeSrc": "9289:26:10",
															"nodeType": "YulAssignment",
															"src": "9289:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9301:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9301:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9312:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9312:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9297:3:10"
																},
																"nativeSrc": "9297:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9297:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9289:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9289:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9336:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9336:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9347:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9347:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9332:3:10"
																		},
																		"nativeSrc": "9332:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9332:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9355:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9355:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9361:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9361:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9351:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9351:3:10"
																		},
																		"nativeSrc": "9351:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9351:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9325:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9325:6:10"
																},
																"nativeSrc": "9325:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9325:47:10"
															},
															"nativeSrc": "9325:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9325:47:10"
														},
														{
															"nativeSrc": "9381:139:10",
															"nodeType": "YulAssignment",
															"src": "9381:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9515:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9515:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9389:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9389:124:10"
																},
																"nativeSrc": "9389:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9389:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9381:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9381:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9108:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9259:9:10",
														"nodeType": "YulTypedName",
														"src": "9259:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9274:4:10",
														"nodeType": "YulTypedName",
														"src": "9274:4:10",
														"type": ""
													}
												],
												"src": "9108:419:10"
											},
											{
												"body": {
													"nativeSrc": "9561:152:10",
													"nodeType": "YulBlock",
													"src": "9561:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9578:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9578:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9581:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9581:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:10"
																},
																"nativeSrc": "9571:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9571:88:10"
															},
															"nativeSrc": "9571:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9571:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9675:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9675:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9678:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9678:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9668:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:10"
																},
																"nativeSrc": "9668:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9668:15:10"
															},
															"nativeSrc": "9668:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9668:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9699:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9699:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9702:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9702:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9692:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9692:6:10"
																},
																"nativeSrc": "9692:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9692:15:10"
															},
															"nativeSrc": "9692:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9692:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9533:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9533:180:10"
											},
											{
												"body": {
													"nativeSrc": "9763:147:10",
													"nodeType": "YulBlock",
													"src": "9763:147:10",
													"statements": [
														{
															"nativeSrc": "9773:25:10",
															"nodeType": "YulAssignment",
															"src": "9773:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9796:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9796:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9778:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9778:17:10"
																},
																"nativeSrc": "9778:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9778:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9773:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9773:1:10"
																}
															]
														},
														{
															"nativeSrc": "9807:25:10",
															"nodeType": "YulAssignment",
															"src": "9807:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9830:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9830:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9812:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9812:17:10"
																},
																"nativeSrc": "9812:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9812:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9807:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9807:1:10"
																}
															]
														},
														{
															"nativeSrc": "9841:16:10",
															"nodeType": "YulAssignment",
															"src": "9841:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9852:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9852:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9855:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9855:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9848:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:10"
																},
																"nativeSrc": "9848:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9848:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9841:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9881:22:10",
																"nodeType": "YulBlock",
																"src": "9881:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9883:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9883:16:10"
																			},
																			"nativeSrc": "9883:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9883:18:10"
																		},
																		"nativeSrc": "9883:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9883:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9873:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9873:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9876:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9870:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9870:2:10"
																},
																"nativeSrc": "9870:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9870:10:10"
															},
															"nativeSrc": "9867:36:10",
															"nodeType": "YulIf",
															"src": "9867:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9719:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9750:1:10",
														"nodeType": "YulTypedName",
														"src": "9750:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9753:1:10",
														"nodeType": "YulTypedName",
														"src": "9753:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9759:3:10",
														"nodeType": "YulTypedName",
														"src": "9759:3:10",
														"type": ""
													}
												],
												"src": "9719:191:10"
											},
											{
												"body": {
													"nativeSrc": "10022:59:10",
													"nodeType": "YulBlock",
													"src": "10022:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10044:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10044:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10052:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10052:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10040:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10040:3:10"
																		},
																		"nativeSrc": "10040:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10040:14:10"
																	},
																	{
																		"hexValue": "457863656564732068617264636170",
																		"kind": "string",
																		"nativeSrc": "10056:17:10",
																		"nodeType": "YulLiteral",
																		"src": "10056:17:10",
																		"type": "",
																		"value": "Exceeds hardcap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10033:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:10"
																},
																"nativeSrc": "10033:41:10",
																"nodeType": "YulFunctionCall",
																"src": "10033:41:10"
															},
															"nativeSrc": "10033:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "10033:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b",
												"nativeSrc": "9916:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10014:6:10",
														"nodeType": "YulTypedName",
														"src": "10014:6:10",
														"type": ""
													}
												],
												"src": "9916:165:10"
											},
											{
												"body": {
													"nativeSrc": "10233:220:10",
													"nodeType": "YulBlock",
													"src": "10233:220:10",
													"statements": [
														{
															"nativeSrc": "10243:74:10",
															"nodeType": "YulAssignment",
															"src": "10243:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10309:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10314:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10314:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10250:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10250:58:10"
																},
																"nativeSrc": "10250:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10250:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10243:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10415:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10415:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b",
																	"nativeSrc": "10326:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10326:88:10"
																},
																"nativeSrc": "10326:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10326:93:10"
															},
															"nativeSrc": "10326:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10326:93:10"
														},
														{
															"nativeSrc": "10428:19:10",
															"nodeType": "YulAssignment",
															"src": "10428:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10439:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10439:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10444:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10444:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10435:3:10"
																},
																"nativeSrc": "10435:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10435:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10428:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10087:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10221:3:10",
														"nodeType": "YulTypedName",
														"src": "10221:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10229:3:10",
														"nodeType": "YulTypedName",
														"src": "10229:3:10",
														"type": ""
													}
												],
												"src": "10087:366:10"
											},
											{
												"body": {
													"nativeSrc": "10630:248:10",
													"nodeType": "YulBlock",
													"src": "10630:248:10",
													"statements": [
														{
															"nativeSrc": "10640:26:10",
															"nodeType": "YulAssignment",
															"src": "10640:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10652:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10652:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10663:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10663:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10648:3:10"
																},
																"nativeSrc": "10648:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10648:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10640:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10640:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10687:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10687:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10698:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10698:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10683:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10683:3:10"
																		},
																		"nativeSrc": "10683:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10683:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10706:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10706:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10712:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10712:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10702:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10702:3:10"
																		},
																		"nativeSrc": "10702:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10702:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10676:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10676:6:10"
																},
																"nativeSrc": "10676:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10676:47:10"
															},
															"nativeSrc": "10676:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10676:47:10"
														},
														{
															"nativeSrc": "10732:139:10",
															"nodeType": "YulAssignment",
															"src": "10732:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10866:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10866:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10740:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10740:124:10"
																},
																"nativeSrc": "10740:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10740:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10732:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10732:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10459:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10610:9:10",
														"nodeType": "YulTypedName",
														"src": "10610:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10625:4:10",
														"nodeType": "YulTypedName",
														"src": "10625:4:10",
														"type": ""
													}
												],
												"src": "10459:419:10"
											},
											{
												"body": {
													"nativeSrc": "10932:362:10",
													"nodeType": "YulBlock",
													"src": "10932:362:10",
													"statements": [
														{
															"nativeSrc": "10942:25:10",
															"nodeType": "YulAssignment",
															"src": "10942:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10965:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10965:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10947:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10947:17:10"
																},
																"nativeSrc": "10947:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10947:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10942:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10942:1:10"
																}
															]
														},
														{
															"nativeSrc": "10976:25:10",
															"nodeType": "YulAssignment",
															"src": "10976:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10999:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10999:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10981:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10981:17:10"
																},
																"nativeSrc": "10981:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10981:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10976:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10976:1:10"
																}
															]
														},
														{
															"nativeSrc": "11010:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11010:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11033:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11033:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11036:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11036:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11029:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11029:3:10"
																},
																"nativeSrc": "11029:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11029:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11014:11:10",
																	"nodeType": "YulTypedName",
																	"src": "11014:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11047:41:10",
															"nodeType": "YulAssignment",
															"src": "11047:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11076:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "11076:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11058:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11058:17:10"
																},
																"nativeSrc": "11058:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11058:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11047:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "11047:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11265:22:10",
																"nodeType": "YulBlock",
																"src": "11265:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11267:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11267:16:10"
																			},
																			"nativeSrc": "11267:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11267:18:10"
																		},
																		"nativeSrc": "11267:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11267:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11198:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11198:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11191:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11191:6:10"
																				},
																				"nativeSrc": "11191:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11191:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11221:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11221:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11228:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "11228:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11237:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "11237:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11224:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11224:3:10"
																						},
																						"nativeSrc": "11224:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11224:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11218:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "11218:2:10"
																				},
																				"nativeSrc": "11218:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11218:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11171:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11171:2:10"
																		},
																		"nativeSrc": "11171:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11171:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11151:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11151:6:10"
																},
																"nativeSrc": "11151:113:10",
																"nodeType": "YulFunctionCall",
																"src": "11151:113:10"
															},
															"nativeSrc": "11148:139:10",
															"nodeType": "YulIf",
															"src": "11148:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10884:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10915:1:10",
														"nodeType": "YulTypedName",
														"src": "10915:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10918:1:10",
														"nodeType": "YulTypedName",
														"src": "10918:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10924:7:10",
														"nodeType": "YulTypedName",
														"src": "10924:7:10",
														"type": ""
													}
												],
												"src": "10884:410:10"
											},
											{
												"body": {
													"nativeSrc": "11328:152:10",
													"nodeType": "YulBlock",
													"src": "11328:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11345:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11345:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11348:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11348:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11338:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11338:6:10"
																},
																"nativeSrc": "11338:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11338:88:10"
															},
															"nativeSrc": "11338:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11338:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11442:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11442:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11445:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11445:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11435:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11435:6:10"
																},
																"nativeSrc": "11435:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11435:15:10"
															},
															"nativeSrc": "11435:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11435:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11466:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11466:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11469:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11469:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11459:6:10"
																},
																"nativeSrc": "11459:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11459:15:10"
															},
															"nativeSrc": "11459:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11459:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11300:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11300:180:10"
											},
											{
												"body": {
													"nativeSrc": "11528:143:10",
													"nodeType": "YulBlock",
													"src": "11528:143:10",
													"statements": [
														{
															"nativeSrc": "11538:25:10",
															"nodeType": "YulAssignment",
															"src": "11538:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11561:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11561:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11543:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11543:17:10"
																},
																"nativeSrc": "11543:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11543:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11538:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11538:1:10"
																}
															]
														},
														{
															"nativeSrc": "11572:25:10",
															"nodeType": "YulAssignment",
															"src": "11572:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11595:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11595:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11577:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11577:17:10"
																},
																"nativeSrc": "11577:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11577:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11572:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11572:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11619:22:10",
																"nodeType": "YulBlock",
																"src": "11619:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11621:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11621:16:10"
																			},
																			"nativeSrc": "11621:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11621:18:10"
																		},
																		"nativeSrc": "11621:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11621:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11616:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11616:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11609:6:10"
																},
																"nativeSrc": "11609:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11609:9:10"
															},
															"nativeSrc": "11606:35:10",
															"nodeType": "YulIf",
															"src": "11606:35:10"
														},
														{
															"nativeSrc": "11651:14:10",
															"nodeType": "YulAssignment",
															"src": "11651:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11660:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11660:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11663:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11663:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11656:3:10"
																},
																"nativeSrc": "11656:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11656:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11651:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11651:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11486:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11517:1:10",
														"nodeType": "YulTypedName",
														"src": "11517:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11520:1:10",
														"nodeType": "YulTypedName",
														"src": "11520:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11526:1:10",
														"nodeType": "YulTypedName",
														"src": "11526:1:10",
														"type": ""
													}
												],
												"src": "11486:185:10"
											},
											{
												"body": {
													"nativeSrc": "11803:206:10",
													"nodeType": "YulBlock",
													"src": "11803:206:10",
													"statements": [
														{
															"nativeSrc": "11813:26:10",
															"nodeType": "YulAssignment",
															"src": "11813:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11825:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11825:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11836:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11836:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11821:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11821:3:10"
																},
																"nativeSrc": "11821:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11821:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11813:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11813:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11893:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11893:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11906:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11917:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11917:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11902:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:10"
																		},
																		"nativeSrc": "11902:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11902:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11849:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11849:43:10"
																},
																"nativeSrc": "11849:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11849:71:10"
															},
															"nativeSrc": "11849:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11849:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11974:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11974:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11987:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11987:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11998:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11998:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11983:3:10"
																		},
																		"nativeSrc": "11983:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11983:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11930:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11930:43:10"
																},
																"nativeSrc": "11930:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11930:72:10"
															},
															"nativeSrc": "11930:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11930:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11677:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11767:9:10",
														"nodeType": "YulTypedName",
														"src": "11767:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11779:6:10",
														"nodeType": "YulTypedName",
														"src": "11779:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11787:6:10",
														"nodeType": "YulTypedName",
														"src": "11787:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11798:4:10",
														"nodeType": "YulTypedName",
														"src": "11798:4:10",
														"type": ""
													}
												],
												"src": "11677:332:10"
											},
											{
												"body": {
													"nativeSrc": "12121:54:10",
													"nodeType": "YulBlock",
													"src": "12121:54:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12143:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12151:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12151:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12139:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12139:3:10"
																		},
																		"nativeSrc": "12139:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12139:14:10"
																	},
																	{
																		"hexValue": "4e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "12155:12:10",
																		"nodeType": "YulLiteral",
																		"src": "12155:12:10",
																		"type": "",
																		"value": "Not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12132:6:10"
																},
																"nativeSrc": "12132:36:10",
																"nodeType": "YulFunctionCall",
																"src": "12132:36:10"
															},
															"nativeSrc": "12132:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "12132:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad",
												"nativeSrc": "12015:160:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12113:6:10",
														"nodeType": "YulTypedName",
														"src": "12113:6:10",
														"type": ""
													}
												],
												"src": "12015:160:10"
											},
											{
												"body": {
													"nativeSrc": "12327:220:10",
													"nodeType": "YulBlock",
													"src": "12327:220:10",
													"statements": [
														{
															"nativeSrc": "12337:74:10",
															"nodeType": "YulAssignment",
															"src": "12337:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12403:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12403:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12408:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12408:2:10",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12344:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12344:58:10"
																},
																"nativeSrc": "12344:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12344:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12337:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12337:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12509:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12509:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad",
																	"nativeSrc": "12420:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12420:88:10"
																},
																"nativeSrc": "12420:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12420:93:10"
															},
															"nativeSrc": "12420:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12420:93:10"
														},
														{
															"nativeSrc": "12522:19:10",
															"nodeType": "YulAssignment",
															"src": "12522:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12533:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12538:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12538:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12529:3:10"
																},
																"nativeSrc": "12529:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12529:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12522:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12181:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12315:3:10",
														"nodeType": "YulTypedName",
														"src": "12315:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12323:3:10",
														"nodeType": "YulTypedName",
														"src": "12323:3:10",
														"type": ""
													}
												],
												"src": "12181:366:10"
											},
											{
												"body": {
													"nativeSrc": "12724:248:10",
													"nodeType": "YulBlock",
													"src": "12724:248:10",
													"statements": [
														{
															"nativeSrc": "12734:26:10",
															"nodeType": "YulAssignment",
															"src": "12734:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12746:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12746:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12757:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12757:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12742:3:10"
																},
																"nativeSrc": "12742:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12742:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12734:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12734:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12781:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12781:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12792:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12792:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12777:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12777:3:10"
																		},
																		"nativeSrc": "12777:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12777:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12800:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12800:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12806:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12806:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12796:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12796:3:10"
																		},
																		"nativeSrc": "12796:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12796:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12770:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12770:6:10"
																},
																"nativeSrc": "12770:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12770:47:10"
															},
															"nativeSrc": "12770:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12770:47:10"
														},
														{
															"nativeSrc": "12826:139:10",
															"nodeType": "YulAssignment",
															"src": "12826:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12960:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12960:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12834:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12834:124:10"
																},
																"nativeSrc": "12834:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12834:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12826:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12826:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12553:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12704:9:10",
														"nodeType": "YulTypedName",
														"src": "12704:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12719:4:10",
														"nodeType": "YulTypedName",
														"src": "12719:4:10",
														"type": ""
													}
												],
												"src": "12553:419:10"
											},
											{
												"body": {
													"nativeSrc": "13084:61:10",
													"nodeType": "YulBlock",
													"src": "13084:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13106:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13106:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13114:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13114:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13102:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13102:3:10"
																		},
																		"nativeSrc": "13102:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13102:14:10"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20726566756e64",
																		"kind": "string",
																		"nativeSrc": "13118:19:10",
																		"nodeType": "YulLiteral",
																		"src": "13118:19:10",
																		"type": "",
																		"value": "Nothing to refund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13095:6:10"
																},
																"nativeSrc": "13095:43:10",
																"nodeType": "YulFunctionCall",
																"src": "13095:43:10"
															},
															"nativeSrc": "13095:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "13095:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1",
												"nativeSrc": "12978:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13076:6:10",
														"nodeType": "YulTypedName",
														"src": "13076:6:10",
														"type": ""
													}
												],
												"src": "12978:167:10"
											},
											{
												"body": {
													"nativeSrc": "13297:220:10",
													"nodeType": "YulBlock",
													"src": "13297:220:10",
													"statements": [
														{
															"nativeSrc": "13307:74:10",
															"nodeType": "YulAssignment",
															"src": "13307:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13373:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13373:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13378:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13378:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13314:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13314:58:10"
																},
																"nativeSrc": "13314:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13314:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13307:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13479:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13479:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1",
																	"nativeSrc": "13390:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13390:88:10"
																},
																"nativeSrc": "13390:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13390:93:10"
															},
															"nativeSrc": "13390:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13390:93:10"
														},
														{
															"nativeSrc": "13492:19:10",
															"nodeType": "YulAssignment",
															"src": "13492:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13503:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13503:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13508:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13508:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:10"
																},
																"nativeSrc": "13499:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13499:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13492:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13492:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13151:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13285:3:10",
														"nodeType": "YulTypedName",
														"src": "13285:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13293:3:10",
														"nodeType": "YulTypedName",
														"src": "13293:3:10",
														"type": ""
													}
												],
												"src": "13151:366:10"
											},
											{
												"body": {
													"nativeSrc": "13694:248:10",
													"nodeType": "YulBlock",
													"src": "13694:248:10",
													"statements": [
														{
															"nativeSrc": "13704:26:10",
															"nodeType": "YulAssignment",
															"src": "13704:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13716:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13716:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13727:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13727:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13712:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13712:3:10"
																},
																"nativeSrc": "13712:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13712:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13704:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13704:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13751:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13751:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13762:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13762:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13747:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13747:3:10"
																		},
																		"nativeSrc": "13747:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13747:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13770:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13770:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13776:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13776:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13766:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13766:3:10"
																		},
																		"nativeSrc": "13766:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13766:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13740:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13740:6:10"
																},
																"nativeSrc": "13740:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13740:47:10"
															},
															"nativeSrc": "13740:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13740:47:10"
														},
														{
															"nativeSrc": "13796:139:10",
															"nodeType": "YulAssignment",
															"src": "13796:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13930:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13930:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13804:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13804:124:10"
																},
																"nativeSrc": "13804:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13804:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13796:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13796:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13523:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13674:9:10",
														"nodeType": "YulTypedName",
														"src": "13674:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13689:4:10",
														"nodeType": "YulTypedName",
														"src": "13689:4:10",
														"type": ""
													}
												],
												"src": "13523:419:10"
											},
											{
												"body": {
													"nativeSrc": "14054:75:10",
													"nodeType": "YulBlock",
													"src": "14054:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14076:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14076:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14084:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14072:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14072:3:10"
																		},
																		"nativeSrc": "14072:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14072:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14088:33:10",
																		"nodeType": "YulLiteral",
																		"src": "14088:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14065:6:10"
																},
																"nativeSrc": "14065:57:10",
																"nodeType": "YulFunctionCall",
																"src": "14065:57:10"
															},
															"nativeSrc": "14065:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "14065:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "13948:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14046:6:10",
														"nodeType": "YulTypedName",
														"src": "14046:6:10",
														"type": ""
													}
												],
												"src": "13948:181:10"
											},
											{
												"body": {
													"nativeSrc": "14281:220:10",
													"nodeType": "YulBlock",
													"src": "14281:220:10",
													"statements": [
														{
															"nativeSrc": "14291:74:10",
															"nodeType": "YulAssignment",
															"src": "14291:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14357:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14357:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14362:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14362:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14298:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14298:58:10"
																},
																"nativeSrc": "14298:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14298:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14291:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14463:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14463:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "14374:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14374:88:10"
																},
																"nativeSrc": "14374:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14374:93:10"
															},
															"nativeSrc": "14374:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14374:93:10"
														},
														{
															"nativeSrc": "14476:19:10",
															"nodeType": "YulAssignment",
															"src": "14476:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14487:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14487:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14492:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14492:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14483:3:10"
																},
																"nativeSrc": "14483:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14483:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14476:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14476:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14135:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14269:3:10",
														"nodeType": "YulTypedName",
														"src": "14269:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14277:3:10",
														"nodeType": "YulTypedName",
														"src": "14277:3:10",
														"type": ""
													}
												],
												"src": "14135:366:10"
											},
											{
												"body": {
													"nativeSrc": "14678:248:10",
													"nodeType": "YulBlock",
													"src": "14678:248:10",
													"statements": [
														{
															"nativeSrc": "14688:26:10",
															"nodeType": "YulAssignment",
															"src": "14688:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14700:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14700:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14711:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14711:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14696:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14696:3:10"
																},
																"nativeSrc": "14696:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14696:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14688:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14688:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14735:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14735:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14746:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14746:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14731:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14731:3:10"
																		},
																		"nativeSrc": "14731:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14731:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14754:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14754:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14760:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14760:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14750:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14750:3:10"
																		},
																		"nativeSrc": "14750:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14750:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14724:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14724:6:10"
																},
																"nativeSrc": "14724:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14724:47:10"
															},
															"nativeSrc": "14724:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14724:47:10"
														},
														{
															"nativeSrc": "14780:139:10",
															"nodeType": "YulAssignment",
															"src": "14780:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14914:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14914:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14788:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14788:124:10"
																},
																"nativeSrc": "14788:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14788:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14780:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14780:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14507:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14658:9:10",
														"nodeType": "YulTypedName",
														"src": "14658:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14673:4:10",
														"nodeType": "YulTypedName",
														"src": "14673:4:10",
														"type": ""
													}
												],
												"src": "14507:419:10"
											},
											{
												"body": {
													"nativeSrc": "15058:206:10",
													"nodeType": "YulBlock",
													"src": "15058:206:10",
													"statements": [
														{
															"nativeSrc": "15068:26:10",
															"nodeType": "YulAssignment",
															"src": "15068:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15080:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15080:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15091:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15091:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15076:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15076:3:10"
																},
																"nativeSrc": "15076:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15076:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15068:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15068:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15148:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15148:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15161:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15161:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15172:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15172:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15157:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15157:3:10"
																		},
																		"nativeSrc": "15157:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15157:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15104:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15104:43:10"
																},
																"nativeSrc": "15104:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15104:71:10"
															},
															"nativeSrc": "15104:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15104:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15229:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15229:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15242:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15242:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15253:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15253:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15238:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15238:3:10"
																		},
																		"nativeSrc": "15238:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15238:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15185:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15185:43:10"
																},
																"nativeSrc": "15185:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15185:72:10"
															},
															"nativeSrc": "15185:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15185:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14932:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15022:9:10",
														"nodeType": "YulTypedName",
														"src": "15022:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15034:6:10",
														"nodeType": "YulTypedName",
														"src": "15034:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15042:6:10",
														"nodeType": "YulTypedName",
														"src": "15042:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15053:4:10",
														"nodeType": "YulTypedName",
														"src": "15053:4:10",
														"type": ""
													}
												],
												"src": "14932:332:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Send MATIC\")\n\n    }\n\n    function abi_encode_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds hardcap\")\n\n    }\n\n    function abi_encode_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to refund\")\n\n    }\n\n    function abi_encode_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610113575f3560e01c806384d242261161009f578063d7299ef711610063578063d7299ef714610317578063d744b7021461033f578063db2e21bc14610369578063f2fde38b1461037f578063fb86a404146103a757610113565b806384d24226146102675780638da5cb5b146102a3578063c5c4744c146102cd578063c8bdbfb6146102f7578063d0febe4c1461030d57610113565b806348c54b9d116100e657806348c54b9d146101bd5780635c975abb146101d3578063715018a6146101fd57806378e97925146102135780637ff9b5961461023d57610113565b80631958e58a1461011757806324600fc3146101415780633197cbb61461015757806342e94c9014610181575b5f80fd5b348015610122575f80fd5b5061012b6103d1565b6040516101389190611028565b60405180910390f35b34801561014c575f80fd5b506101556103f6565b005b348015610162575f80fd5b5061016b610450565b6040516101789190611059565b60405180910390f35b34801561018c575f80fd5b506101a760048036038101906101a291906110b1565b610456565b6040516101b49190611059565b60405180910390f35b3480156101c8575f80fd5b506101d161046b565b005b3480156101de575f80fd5b506101e76105dd565b6040516101f491906110f6565b60405180910390f35b348015610208575f80fd5b506102116105ef565b005b34801561021e575f80fd5b50610227610602565b6040516102349190611059565b60405180910390f35b348015610248575f80fd5b50610251610608565b60405161025e9190611059565b60405180910390f35b348015610272575f80fd5b5061028d600480360381019061028891906110b1565b61060e565b60405161029a9190611059565b60405180910390f35b3480156102ae575f80fd5b506102b7610623565b6040516102c4919061111e565b60405180910390f35b3480156102d8575f80fd5b506102e161064a565b6040516102ee9190611059565b60405180910390f35b348015610302575f80fd5b5061030b610650565b005b61031561078c565b005b348015610322575f80fd5b5061033d60048036038101906103389190611161565b610a07565b005b34801561034a575f80fd5b50610353610a62565b6040516103609190611059565b60405180910390f35b348015610374575f80fd5b5061037d610a69565b005b34801561038a575f80fd5b506103a560048036038101906103a091906110b1565b610c63565b005b3480156103b2575f80fd5b506103bb610ce7565b6040516103c89190611059565b60405180910390f35b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103fe610ced565b5f47905061040a610623565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561044c573d5f803e3d5ffd5b5050565b60055481565b6009602052805f5260405f205f915090505481565b610473610d74565b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906111e6565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610584338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dc39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516105ca9190611059565b60405180910390a2506105db610e42565b565b60085f9054906101000a900460ff1681565b6105f7610ced565b6106005f610e4b565b565b60045481565b60035481565b600a602052805f5260405f205f915090505481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b610658610ced565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106b3919061111e565b602060405180830381865afa1580156106ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f2919061122e565b90505f8111610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d906112a3565b60405180910390fd5b610789610741610623565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dc39092919063ffffffff16565b50565b610794610d74565b60045442101580156107a857506005544211155b6107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de9061130b565b60405180910390fd5b60085f9054906101000a900460ff1615610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90611373565b60405180910390fd5b5f3411610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086f906113db565b60405180910390fd5b600654346007546108899190611426565b11156108ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c1906114a3565b60405180910390fd5b5f600354670de0b6b3a7640000346108e291906114c1565b6108ec919061152f565b905080600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461093a9190611426565b925050819055503460095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461098d9190611426565b925050819055503460075f8282546109a59190611426565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f3334836040516109f492919061155f565b60405180910390a250610a05610e42565b565b610a0f610ced565b8060085f6101000a81548160ff0219169083151502179055507f66006354ac6a35f0f9b001e7cd8a73623bab487be4239f71fb1428656e7de6a681604051610a5791906110f6565b60405180910390a150565b62278d0081565b610a71610d74565b60085f9054906101000a900460ff16610abf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab6906115d0565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3990611638565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c09573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582604051610c509190611059565b60405180910390a250610c61610e42565b565b610c6b610ced565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cdb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cd2919061111e565b60405180910390fd5b610ce481610e4b565b50565b60065481565b610cf5610f0c565b73ffffffffffffffffffffffffffffffffffffffff16610d13610623565b73ffffffffffffffffffffffffffffffffffffffff1614610d7257610d36610f0c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d69919061111e565b60405180910390fd5b565b600260015403610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db0906116a0565b60405180910390fd5b6002600181905550565b610e3d838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610df69291906116be565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f13565b505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8060205f8451602086015f885af180610f32576040513d5f823e3d81fd5b3d92505f519150505f8214610f4b576001811415610f66565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fa857836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f9f919061111e565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610ff0610feb610fe684610fae565b610fcd565b610fae565b9050919050565b5f61100182610fd6565b9050919050565b5f61101282610ff7565b9050919050565b61102281611008565b82525050565b5f60208201905061103b5f830184611019565b92915050565b5f819050919050565b61105381611041565b82525050565b5f60208201905061106c5f83018461104a565b92915050565b5f80fd5b5f61108082610fae565b9050919050565b61109081611076565b811461109a575f80fd5b50565b5f813590506110ab81611087565b92915050565b5f602082840312156110c6576110c5611072565b5b5f6110d38482850161109d565b91505092915050565b5f8115159050919050565b6110f0816110dc565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b61111881611076565b82525050565b5f6020820190506111315f83018461110f565b92915050565b611140816110dc565b811461114a575f80fd5b50565b5f8135905061115b81611137565b92915050565b5f6020828403121561117657611175611072565b5b5f6111838482850161114d565b91505092915050565b5f82825260208201905092915050565b7f4e6f7468696e6720746f20636c61696d000000000000000000000000000000005f82015250565b5f6111d060108361118c565b91506111db8261119c565b602082019050919050565b5f6020820190508181035f8301526111fd816111c4565b9050919050565b61120d81611041565b8114611217575f80fd5b50565b5f8151905061122881611204565b92915050565b5f6020828403121561124357611242611072565b5b5f6112508482850161121a565b91505092915050565b7f4e6f20746f6b656e7300000000000000000000000000000000000000000000005f82015250565b5f61128d60098361118c565b915061129882611259565b602082019050919050565b5f6020820190508181035f8301526112ba81611281565b9050919050565b7f50726573616c65206e6f742061637469766500000000000000000000000000005f82015250565b5f6112f560128361118c565b9150611300826112c1565b602082019050919050565b5f6020820190508181035f830152611322816112e9565b9050919050565b7f50726573616c65207061757365640000000000000000000000000000000000005f82015250565b5f61135d600e8361118c565b915061136882611329565b602082019050919050565b5f6020820190508181035f83015261138a81611351565b9050919050565b7f53656e64204d41544943000000000000000000000000000000000000000000005f82015250565b5f6113c5600a8361118c565b91506113d082611391565b602082019050919050565b5f6020820190508181035f8301526113f2816113b9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61143082611041565b915061143b83611041565b9250828201905080821115611453576114526113f9565b5b92915050565b7f45786365656473206861726463617000000000000000000000000000000000005f82015250565b5f61148d600f8361118c565b915061149882611459565b602082019050919050565b5f6020820190508181035f8301526114ba81611481565b9050919050565b5f6114cb82611041565b91506114d683611041565b92508282026114e481611041565b915082820484148315176114fb576114fa6113f9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61153982611041565b915061154483611041565b92508261155457611553611502565b5b828204905092915050565b5f6040820190506115725f83018561104a565b61157f602083018461104a565b9392505050565b7f4e6f7420706175736564000000000000000000000000000000000000000000005f82015250565b5f6115ba600a8361118c565b91506115c582611586565b602082019050919050565b5f6020820190508181035f8301526115e7816115ae565b9050919050565b7f4e6f7468696e6720746f20726566756e640000000000000000000000000000005f82015250565b5f61162260118361118c565b915061162d826115ee565b602082019050919050565b5f6020820190508181035f83015261164f81611616565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61168a601f8361118c565b915061169582611656565b602082019050919050565b5f6020820190508181035f8301526116b78161167e565b9050919050565b5f6040820190506116d15f83018561110f565b6116de602083018461104a565b939250505056fea2646970667358221220bbc51c86d0b54d19665b02248b040d251bdb9df51e9b1baa2c9e1a936260606264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84D24226 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xD7299EF7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD7299EF7 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xD744B702 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xFB86A404 EQ PUSH2 0x3A7 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x84D24226 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xC8BDBFB6 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x30D JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x48C54B9D GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x23D JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x1958E58A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x181 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x3F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x5EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x650 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0x78C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x353 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3FE PUSH2 0xCED JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x40A PUSH2 0x623 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x473 PUSH2 0xD74 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x584 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDC3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x5DB PUSH2 0xE42 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5F7 PUSH2 0xCED JUMP JUMPDEST PUSH2 0x600 PUSH0 PUSH2 0xE4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x658 PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72D SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x789 PUSH2 0x741 PUSH2 0x623 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDC3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x794 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x7A8 JUMPI POP PUSH1 0x5 SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86F SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0x9F4 SWAP3 SWAP2 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xA05 PUSH2 0xE42 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0F PUSH2 0xCED JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x66006354AC6A35F0F9B001E7CD8A73623BAB487BE4239F71FB1428656E7DE6A6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0xA71 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB6 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP1 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC61 PUSH2 0xE42 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC6B PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xE4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCF5 PUSH2 0xF0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD13 PUSH2 0x623 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD72 JUMPI PUSH2 0xD36 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE3D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDF6 SWAP3 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF4B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF66 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFA8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF0 PUSH2 0xFEB PUSH2 0xFE6 DUP5 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1001 DUP3 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1012 DUP3 PUSH2 0xFF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH2 0x1008 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103B PUSH0 DUP4 ADD DUP5 PUSH2 0x1019 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1053 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x106C PUSH0 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1080 DUP3 PUSH2 0xFAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1090 DUP2 PUSH2 0x1076 JUMP JUMPDEST DUP2 EQ PUSH2 0x109A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10AB DUP2 PUSH2 0x1087 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D3 DUP5 DUP3 DUP6 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F0 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1109 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1118 DUP2 PUSH2 0x1076 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1131 PUSH0 DUP4 ADD DUP5 PUSH2 0x110F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1140 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP2 EQ PUSH2 0x114A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x115B DUP2 PUSH2 0x1137 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1183 DUP5 DUP3 DUP6 ADD PUSH2 0x114D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11D0 PUSH1 0x10 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x11DB DUP3 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FD DUP2 PUSH2 0x11C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120D DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1228 DUP2 PUSH2 0x1204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1250 DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E730000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128D PUSH1 0x9 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1298 DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BA DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F5 PUSH1 0x12 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1300 DUP3 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1322 DUP2 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C6520706175736564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135D PUSH1 0xE DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1368 DUP3 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x138A DUP2 PUSH2 0x1351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E64204D4154494300000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C5 PUSH1 0xA DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F2 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1430 DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320686172646361700000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x148D PUSH1 0xF DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1498 DUP3 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BA DUP2 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14CB DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D6 DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14E4 DUP2 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1539 DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1554 JUMPI PUSH2 0x1553 PUSH2 0x1502 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1572 PUSH0 DUP4 ADD DUP6 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x157F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F742070617573656400000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15BA PUSH1 0xA DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x15C5 DUP3 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15E7 DUP2 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20726566756E64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1622 PUSH1 0x11 DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x162D DUP3 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x164F DUP2 PUSH2 0x1616 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x168A PUSH1 0x1F DUP4 PUSH2 0x118C JUMP JUMPDEST SWAP2 POP PUSH2 0x1695 DUP3 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16B7 DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH0 DUP4 ADD DUP6 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x16DE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xC5 SHR DUP7 0xD0 0xB5 0x4D NOT PUSH7 0x5B02248B040D25 SHL 0xDB SWAP14 CREATE2 0x1E SWAP12 SHL 0xAA 0x2C SWAP15 BYTE SWAP4 PUSH3 0x606062 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "298:3425:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2842:142;;;;;;;;;;;;;:::i;:::-;;551:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;814:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2537:299;;;;;;;;;;;;;:::i;:::-;;697:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;521:24:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;417:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;868:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;664:26:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2990:215;;;;;;;;;;;;;:::i;:::-;;2093:438;;;:::i;:::-;;3211:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;721:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3342:379;;;;;;;;;;;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;579:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:24;;;;;;;;;;;;;:::o;2842:142::-;1531:13:0;:11;:13::i;:::-;2896:14:9::1;2913:21;2896:38;;2952:7;:5;:7::i;:::-;2944:25;;:33;2970:6;2944:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2886:98;2842:142::o:0;551:22::-;;;;:::o;814:48::-;;;;;;;;;;;;;;;;;:::o;2537:299::-;2261:21:4;:19;:21::i;:::-;2592:14:9::1;2609:15;:27;2625:10;2609:27;;;;;;;;;;;;;;;;2592:44;;2663:1;2654:6;:10;2646:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2726:1;2696:15;:27;2712:10;2696:27;;;;;;;;;;;;;;;:31;;;;2737:43;2761:10;2773:6;2737:10;;;;;;;;;;;:23;;;;:43;;;;;:::i;:::-;2810:10;2796:33;;;2822:6;2796:33;;;;;;:::i;:::-;;;;;;;;2582:254;2303:20:4::0;:18;:20::i;:::-;2537:299:9:o;697:18::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;521:24:9:-;;;;:::o;417:25::-;;;;:::o;868:50::-;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;664:26:9:-;;;;:::o;2990:215::-;1531:13:0;:11;:13::i;:::-;3051:15:9::1;3069:10;;;;;;;;;;;:20;;;3098:4;3069:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3051:53;;3132:1;3122:7;:11;3114:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;3157:41;3181:7;:5;:7::i;:::-;3190;3157:10;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;3041:164;2990:215::o:0;2093:438::-;2261:21:4;:19;:21::i;:::-;1963:9:9::1;;1944:15;:28;;:58;;;;;1995:7;;1976:15;:26;;1944:58;1936:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2044:6;;;;;;;;;;;2043:7;2035:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;2185:1:::2;2173:9;:13;2165:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;2246:7;;2233:9;2219:11;;:23;;;;:::i;:::-;:34;;2211:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2284:14;2322:10;;2314:4;2302:9;:16;;;;:::i;:::-;2301:31;;;;:::i;:::-;2284:48;;2374:6;2343:15;:27;2359:10;2343:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2419:9;2390:13;:25;2404:10;2390:25;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2453:9;2438:11;;:24;;;;;;;:::i;:::-;;;;;;;;2494:10;2478:46;;;2506:9;2517:6;2478:46;;;;;;;:::i;:::-;;;;;;;;2155:376;2303:20:4::0;:18;:20::i;:::-;2093:438:9:o;3211:125::-;1531:13:0;:11;:13::i;:::-;3285:7:9::1;3276:6;;:16;;;;;;;;;;;;;;;;;;3307:22;3321:7;3307:22;;;;;;:::i;:::-;;;;;;;;3211:125:::0;:::o;721:54::-;768:7;721:54;:::o;3342:379::-;2261:21:4;:19;:21::i;:::-;3411:6:9::1;;;;;;;;;;;3403:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;3442:14;3459:13;:25;3473:10;3459:25;;;;;;;;;;;;;;;;3442:42;;3511:1;3502:6;:10;3494:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;3573:1;3545:13;:25;3559:10;3545:25;;;;;;;;;;;;;;;:29;;;;3614:1;3584:15;:27;3600:10;3584:27;;;;;;;;;;;;;;;:31;;;;3633:10;3625:28;;:36;3654:6;3625:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3695:10;3677:37;;;3707:6;3677:37;;;;;;:::i;:::-;;;;;;;;3393:328;2303:20:4::0;:18;:20::i;:::-;3342:379:9:o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;579:22:9:-;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:222::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1403:71;1471:1;1460:9;1456:17;1447:6;1403:71;:::i;:::-;1259:222;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:96;1851:7;1880:24;1898:5;1880:24;:::i;:::-;1869:35;;1814:96;;;:::o;1916:122::-;1989:24;2007:5;1989:24;:::i;:::-;1982:5;1979:35;1969:63;;2028:1;2025;2018:12;1969:63;1916:122;:::o;2044:139::-;2090:5;2128:6;2115:20;2106:29;;2144:33;2171:5;2144:33;:::i;:::-;2044:139;;;;:::o;2189:329::-;2248:6;2297:2;2285:9;2276:7;2272:23;2268:32;2265:119;;;2303:79;;:::i;:::-;2265:119;2423:1;2448:53;2493:7;2484:6;2473:9;2469:22;2448:53;:::i;:::-;2438:63;;2394:117;2189:329;;;;:::o;2524:90::-;2558:7;2601:5;2594:13;2587:21;2576:32;;2524:90;;;:::o;2620:109::-;2701:21;2716:5;2701:21;:::i;:::-;2696:3;2689:34;2620:109;;:::o;2735:210::-;2822:4;2860:2;2849:9;2845:18;2837:26;;2873:65;2935:1;2924:9;2920:17;2911:6;2873:65;:::i;:::-;2735:210;;;;:::o;2951:118::-;3038:24;3056:5;3038:24;:::i;:::-;3033:3;3026:37;2951:118;;:::o;3075:222::-;3168:4;3206:2;3195:9;3191:18;3183:26;;3219:71;3287:1;3276:9;3272:17;3263:6;3219:71;:::i;:::-;3075:222;;;;:::o;3303:116::-;3373:21;3388:5;3373:21;:::i;:::-;3366:5;3363:32;3353:60;;3409:1;3406;3399:12;3353:60;3303:116;:::o;3425:133::-;3468:5;3506:6;3493:20;3484:29;;3522:30;3546:5;3522:30;:::i;:::-;3425:133;;;;:::o;3564:323::-;3620:6;3669:2;3657:9;3648:7;3644:23;3640:32;3637:119;;;3675:79;;:::i;:::-;3637:119;3795:1;3820:50;3862:7;3853:6;3842:9;3838:22;3820:50;:::i;:::-;3810:60;;3766:114;3564:323;;;;:::o;3893:169::-;3977:11;4011:6;4006:3;3999:19;4051:4;4046:3;4042:14;4027:29;;3893:169;;;;:::o;4068:166::-;4208:18;4204:1;4196:6;4192:14;4185:42;4068:166;:::o;4240:366::-;4382:3;4403:67;4467:2;4462:3;4403:67;:::i;:::-;4396:74;;4479:93;4568:3;4479:93;:::i;:::-;4597:2;4592:3;4588:12;4581:19;;4240:366;;;:::o;4612:419::-;4778:4;4816:2;4805:9;4801:18;4793:26;;4865:9;4859:4;4855:20;4851:1;4840:9;4836:17;4829:47;4893:131;5019:4;4893:131;:::i;:::-;4885:139;;4612:419;;;:::o;5037:122::-;5110:24;5128:5;5110:24;:::i;:::-;5103:5;5100:35;5090:63;;5149:1;5146;5139:12;5090:63;5037:122;:::o;5165:143::-;5222:5;5253:6;5247:13;5238:22;;5269:33;5296:5;5269:33;:::i;:::-;5165:143;;;;:::o;5314:351::-;5384:6;5433:2;5421:9;5412:7;5408:23;5404:32;5401:119;;;5439:79;;:::i;:::-;5401:119;5559:1;5584:64;5640:7;5631:6;5620:9;5616:22;5584:64;:::i;:::-;5574:74;;5530:128;5314:351;;;;:::o;5671:159::-;5811:11;5807:1;5799:6;5795:14;5788:35;5671:159;:::o;5836:365::-;5978:3;5999:66;6063:1;6058:3;5999:66;:::i;:::-;5992:73;;6074:93;6163:3;6074:93;:::i;:::-;6192:2;6187:3;6183:12;6176:19;;5836:365;;;:::o;6207:419::-;6373:4;6411:2;6400:9;6396:18;6388:26;;6460:9;6454:4;6450:20;6446:1;6435:9;6431:17;6424:47;6488:131;6614:4;6488:131;:::i;:::-;6480:139;;6207:419;;;:::o;6632:168::-;6772:20;6768:1;6760:6;6756:14;6749:44;6632:168;:::o;6806:366::-;6948:3;6969:67;7033:2;7028:3;6969:67;:::i;:::-;6962:74;;7045:93;7134:3;7045:93;:::i;:::-;7163:2;7158:3;7154:12;7147:19;;6806:366;;;:::o;7178:419::-;7344:4;7382:2;7371:9;7367:18;7359:26;;7431:9;7425:4;7421:20;7417:1;7406:9;7402:17;7395:47;7459:131;7585:4;7459:131;:::i;:::-;7451:139;;7178:419;;;:::o;7603:164::-;7743:16;7739:1;7731:6;7727:14;7720:40;7603:164;:::o;7773:366::-;7915:3;7936:67;8000:2;7995:3;7936:67;:::i;:::-;7929:74;;8012:93;8101:3;8012:93;:::i;:::-;8130:2;8125:3;8121:12;8114:19;;7773:366;;;:::o;8145:419::-;8311:4;8349:2;8338:9;8334:18;8326:26;;8398:9;8392:4;8388:20;8384:1;8373:9;8369:17;8362:47;8426:131;8552:4;8426:131;:::i;:::-;8418:139;;8145:419;;;:::o;8570:160::-;8710:12;8706:1;8698:6;8694:14;8687:36;8570:160;:::o;8736:366::-;8878:3;8899:67;8963:2;8958:3;8899:67;:::i;:::-;8892:74;;8975:93;9064:3;8975:93;:::i;:::-;9093:2;9088:3;9084:12;9077:19;;8736:366;;;:::o;9108:419::-;9274:4;9312:2;9301:9;9297:18;9289:26;;9361:9;9355:4;9351:20;9347:1;9336:9;9332:17;9325:47;9389:131;9515:4;9389:131;:::i;:::-;9381:139;;9108:419;;;:::o;9533:180::-;9581:77;9578:1;9571:88;9678:4;9675:1;9668:15;9702:4;9699:1;9692:15;9719:191;9759:3;9778:20;9796:1;9778:20;:::i;:::-;9773:25;;9812:20;9830:1;9812:20;:::i;:::-;9807:25;;9855:1;9852;9848:9;9841:16;;9876:3;9873:1;9870:10;9867:36;;;9883:18;;:::i;:::-;9867:36;9719:191;;;;:::o;9916:165::-;10056:17;10052:1;10044:6;10040:14;10033:41;9916:165;:::o;10087:366::-;10229:3;10250:67;10314:2;10309:3;10250:67;:::i;:::-;10243:74;;10326:93;10415:3;10326:93;:::i;:::-;10444:2;10439:3;10435:12;10428:19;;10087:366;;;:::o;10459:419::-;10625:4;10663:2;10652:9;10648:18;10640:26;;10712:9;10706:4;10702:20;10698:1;10687:9;10683:17;10676:47;10740:131;10866:4;10740:131;:::i;:::-;10732:139;;10459:419;;;:::o;10884:410::-;10924:7;10947:20;10965:1;10947:20;:::i;:::-;10942:25;;10981:20;10999:1;10981:20;:::i;:::-;10976:25;;11036:1;11033;11029:9;11058:30;11076:11;11058:30;:::i;:::-;11047:41;;11237:1;11228:7;11224:15;11221:1;11218:22;11198:1;11191:9;11171:83;11148:139;;11267:18;;:::i;:::-;11148:139;10932:362;10884:410;;;;:::o;11300:180::-;11348:77;11345:1;11338:88;11445:4;11442:1;11435:15;11469:4;11466:1;11459:15;11486:185;11526:1;11543:20;11561:1;11543:20;:::i;:::-;11538:25;;11577:20;11595:1;11577:20;:::i;:::-;11572:25;;11616:1;11606:35;;11621:18;;:::i;:::-;11606:35;11663:1;11660;11656:9;11651:14;;11486:185;;;;:::o;11677:332::-;11798:4;11836:2;11825:9;11821:18;11813:26;;11849:71;11917:1;11906:9;11902:17;11893:6;11849:71;:::i;:::-;11930:72;11998:2;11987:9;11983:18;11974:6;11930:72;:::i;:::-;11677:332;;;;;:::o;12015:160::-;12155:12;12151:1;12143:6;12139:14;12132:36;12015:160;:::o;12181:366::-;12323:3;12344:67;12408:2;12403:3;12344:67;:::i;:::-;12337:74;;12420:93;12509:3;12420:93;:::i;:::-;12538:2;12533:3;12529:12;12522:19;;12181:366;;;:::o;12553:419::-;12719:4;12757:2;12746:9;12742:18;12734:26;;12806:9;12800:4;12796:20;12792:1;12781:9;12777:17;12770:47;12834:131;12960:4;12834:131;:::i;:::-;12826:139;;12553:419;;;:::o;12978:167::-;13118:19;13114:1;13106:6;13102:14;13095:43;12978:167;:::o;13151:366::-;13293:3;13314:67;13378:2;13373:3;13314:67;:::i;:::-;13307:74;;13390:93;13479:3;13390:93;:::i;:::-;13508:2;13503:3;13499:12;13492:19;;13151:366;;;:::o;13523:419::-;13689:4;13727:2;13716:9;13712:18;13704:26;;13776:9;13770:4;13766:20;13762:1;13751:9;13747:17;13740:47;13804:131;13930:4;13804:131;:::i;:::-;13796:139;;13523:419;;;:::o;13948:181::-;14088:33;14084:1;14076:6;14072:14;14065:57;13948:181;:::o;14135:366::-;14277:3;14298:67;14362:2;14357:3;14298:67;:::i;:::-;14291:74;;14374:93;14463:3;14374:93;:::i;:::-;14492:2;14487:3;14483:12;14476:19;;14135:366;;;:::o;14507:419::-;14673:4;14711:2;14700:9;14696:18;14688:26;;14760:9;14754:4;14750:20;14746:1;14735:9;14731:17;14724:47;14788:131;14914:4;14788:131;:::i;:::-;14780:139;;14507:419;;;:::o;14932:332::-;15053:4;15091:2;15080:9;15076:18;15068:26;;15104:71;15172:1;15161:9;15157:17;15148:6;15104:71;:::i;:::-;15185:72;15253:2;15242:9;15238:18;15229:6;15185:72;:::i;:::-;14932:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1183000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_PRESALE_DURATION()": "369",
								"alienToken()": "infinite",
								"buyTokens()": "infinite",
								"claimTokens()": "infinite",
								"claimableTokens(address)": "2825",
								"contributions(address)": "2892",
								"emergencyWithdraw()": "infinite",
								"endTime()": "2493",
								"hardCap()": "2535",
								"owner()": "2560",
								"pausePresale(bool)": "infinite",
								"paused()": "2511",
								"renounceOwnership()": "infinite",
								"startTime()": "2514",
								"tokenPrice()": "2536",
								"totalRaised()": "2492",
								"transferOwnership(address)": "infinite",
								"withdrawFunds()": "infinite",
								"withdrawUnsoldTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1204,
									"end": 1898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1398,
									"end": 1410,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1453,
									"end": 1454,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1430,
									"end": 1455,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1430,
									"end": 1455,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1430,
									"end": 1441,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1430,
									"end": 1455,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1430,
									"end": 1455,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1430,
									"end": 1455,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1422,
									"end": 1473,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1422,
									"end": 1473,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1504,
									"end": 1512,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1491,
									"end": 1501,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1491,
									"end": 1512,
									"modifierDepth": 1,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1483,
									"end": 1541,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1483,
									"end": 1541,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 768,
									"end": 775,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "278D00"
								},
								{
									"begin": 1570,
									"end": 1580,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1567,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1559,
									"end": 1580,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1580,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1559,
									"end": 1580,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1580,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1559,
									"end": 1580,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1604,
									"modifierDepth": 1,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1604,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1551,
									"end": 1625,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1551,
									"end": 1625,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1658,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1643,
									"end": 1654,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1643,
									"end": 1658,
									"modifierDepth": 1,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1635,
									"end": 1676,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1635,
									"end": 1676,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1705,
									"end": 1706,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1694,
									"end": 1702,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1706,
									"modifierDepth": 1,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1686,
									"end": 1726,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1686,
									"end": 1726,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1757,
									"end": 1768,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1737,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1792,
									"end": 1803,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1789,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1779,
									"end": 1803,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1803,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1803,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1803,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1835,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1813,
									"end": 1835,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1835,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1835,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1835,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1855,
									"end": 1863,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1845,
									"end": 1852,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1845,
									"end": 1863,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1845,
									"end": 1863,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1845,
									"end": 1863,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1845,
									"end": 1863,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1883,
									"end": 1891,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1873,
									"end": 1891,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1891,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1891,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1891,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1898,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1334,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1342,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1350,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1352,
									"end": 1358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1360,
									"end": 1366,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1409,
									"end": 1412,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 1397,
									"end": 1406,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1388,
									"end": 1395,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1384,
									"end": 1407,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1380,
									"end": 1413,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1416,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1617,
									"end": 1624,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1614,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1606,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1615,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1561,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1551,
									"end": 1625,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 1551,
									"end": 1625,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1507,
									"end": 1635,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1674,
									"end": 1676,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1756,
									"end": 1763,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1736,
									"end": 1745,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1700,
									"end": 1764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1764,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1764,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1645,
									"end": 1774,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1813,
									"end": 1815,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1895,
									"end": 1902,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1886,
									"end": 1892,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1875,
									"end": 1884,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1871,
									"end": 1893,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1839,
									"end": 1903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1829,
									"end": 1903,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1829,
									"end": 1903,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1784,
									"end": 1913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1952,
									"end": 1954,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2034,
									"end": 2041,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2014,
									"end": 2023,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1978,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1968,
									"end": 2042,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1968,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1923,
									"end": 2052,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2174,
									"end": 2181,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2165,
									"end": 2171,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2154,
									"end": 2163,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 2150,
									"end": 2172,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2118,
									"end": 2182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2182,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2192,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2231,
									"end": 2234,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2314,
									"end": 2321,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2311,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2294,
									"end": 2303,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2312,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2258,
									"end": 2322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2248,
									"end": 2322,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2248,
									"end": 2322,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2202,
									"end": 2332,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2463,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2345,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2432,
									"end": 2456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2450,
									"end": 2455,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2432,
									"end": 2456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2432,
									"end": 2456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2432,
									"end": 2456,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2432,
									"end": 2456,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2430,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2457,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2463,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2463,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2691,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2469,
									"end": 2691,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2566,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2600,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2589,
									"end": 2598,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2585,
									"end": 2603,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2577,
									"end": 2603,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2577,
									"end": 2603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2613,
									"end": 2684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2681,
									"end": 2682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2670,
									"end": 2679,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2666,
									"end": 2683,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2657,
									"end": 2663,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2613,
									"end": 2684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2613,
									"end": 2684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2613,
									"end": 2684,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2613,
									"end": 2684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2691,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2691,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2691,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2691,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2866,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2697,
									"end": 2866,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2792,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2815,
									"end": 2821,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2803,
									"end": 2822,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2850,
									"end": 2853,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2860,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2831,
									"end": 2860,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2831,
									"end": 2860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2866,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2866,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2866,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2866,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2872,
									"end": 3035,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2872,
									"end": 3035,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3012,
									"end": 3027,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 3008,
									"end": 3009,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3000,
									"end": 3006,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3010,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2989,
									"end": 3028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2872,
									"end": 3035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2872,
									"end": 3035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3407,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 3041,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3183,
									"end": 3186,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3204,
									"end": 3271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 3268,
									"end": 3270,
									"name": "PUSH",
									"source": 10,
									"value": "D"
								},
								{
									"begin": 3263,
									"end": 3266,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3204,
									"end": 3271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 3204,
									"end": 3271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3204,
									"end": 3271,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 3204,
									"end": 3271,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3197,
									"end": 3271,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3197,
									"end": 3271,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3280,
									"end": 3373,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3369,
									"end": 3372,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3280,
									"end": 3373,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 3280,
									"end": 3373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3280,
									"end": 3373,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3280,
									"end": 3373,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3398,
									"end": 3400,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3393,
									"end": 3396,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3407,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3407,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3832,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3413,
									"end": 3832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3579,
									"end": 3583,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3619,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3606,
									"end": 3615,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 3620,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3594,
									"end": 3620,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3594,
									"end": 3620,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3666,
									"end": 3675,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3660,
									"end": 3664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3656,
									"end": 3676,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3652,
									"end": 3653,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3641,
									"end": 3650,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3637,
									"end": 3654,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3630,
									"end": 3677,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3694,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3820,
									"end": 3824,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3694,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 3694,
									"end": 3825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3694,
									"end": 3825,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3694,
									"end": 3825,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3686,
									"end": 3825,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3686,
									"end": 3825,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3832,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3832,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3838,
									"end": 4012,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 3838,
									"end": 4012,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4004,
									"name": "PUSH",
									"source": 10,
									"value": "5374617274206D757374206265206265666F726520656E640000000000000000"
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3962,
									"end": 3976,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3955,
									"end": 4005,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3838,
									"end": 4012,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3838,
									"end": 4012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4018,
									"end": 4384,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4018,
									"end": 4384,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4160,
									"end": 4163,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4181,
									"end": 4248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4245,
									"end": 4247,
									"name": "PUSH",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 4240,
									"end": 4243,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4181,
									"end": 4248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4181,
									"end": 4248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4181,
									"end": 4248,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4181,
									"end": 4248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4174,
									"end": 4248,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4174,
									"end": 4248,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4346,
									"end": 4349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4257,
									"end": 4350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4350,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4257,
									"end": 4350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4375,
									"end": 4377,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4370,
									"end": 4373,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4366,
									"end": 4378,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4359,
									"end": 4378,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4359,
									"end": 4378,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4018,
									"end": 4384,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4018,
									"end": 4384,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4018,
									"end": 4384,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4018,
									"end": 4384,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4809,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4390,
									"end": 4809,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4556,
									"end": 4560,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4594,
									"end": 4596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4583,
									"end": 4592,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4571,
									"end": 4597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4571,
									"end": 4597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4643,
									"end": 4652,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 4641,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4633,
									"end": 4653,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4629,
									"end": 4630,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4618,
									"end": 4627,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4614,
									"end": 4631,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4607,
									"end": 4654,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4671,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4797,
									"end": 4801,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4671,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4671,
									"end": 4802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4671,
									"end": 4802,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4671,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4663,
									"end": 4802,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4663,
									"end": 4802,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4809,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4809,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4809,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4815,
									"end": 4995,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4815,
									"end": 4995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4863,
									"end": 4940,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4853,
									"end": 4941,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 4957,
									"end": 4958,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4950,
									"end": 4965,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4984,
									"end": 4988,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4981,
									"end": 4982,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4974,
									"end": 4989,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5001,
									"end": 5195,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 5001,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5045,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5061,
									"end": 5081,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5079,
									"end": 5080,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5061,
									"end": 5081,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 5061,
									"end": 5081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5061,
									"end": 5081,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5061,
									"end": 5081,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5056,
									"end": 5081,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5056,
									"end": 5081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5095,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5113,
									"end": 5114,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5095,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 5095,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5095,
									"end": 5115,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5095,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5090,
									"end": 5115,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5090,
									"end": 5115,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5139,
									"end": 5140,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5136,
									"end": 5137,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5132,
									"end": 5141,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5124,
									"end": 5141,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5124,
									"end": 5141,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5163,
									"end": 5164,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5157,
									"end": 5161,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5154,
									"end": 5165,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5188,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5151,
									"end": 5188,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5168,
									"end": 5186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 5168,
									"end": 5186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5186,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5168,
									"end": 5186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5188,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5151,
									"end": 5188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5001,
									"end": 5195,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5001,
									"end": 5195,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5001,
									"end": 5195,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5001,
									"end": 5195,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5001,
									"end": 5195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5201,
									"end": 5367,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 5201,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "PUSH",
									"source": 10,
									"value": "50726573616C6520746F6F206C6F6E6700000000000000000000000000000000"
								},
								{
									"begin": 5337,
									"end": 5338,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5329,
									"end": 5335,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5325,
									"end": 5339,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5318,
									"end": 5360,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5201,
									"end": 5367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5201,
									"end": 5367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5373,
									"end": 5739,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 5373,
									"end": 5739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5515,
									"end": 5518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5536,
									"end": 5603,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5600,
									"end": 5602,
									"name": "PUSH",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 5595,
									"end": 5598,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5536,
									"end": 5603,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5536,
									"end": 5603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5536,
									"end": 5603,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5536,
									"end": 5603,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5529,
									"end": 5603,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5529,
									"end": 5603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5612,
									"end": 5705,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5701,
									"end": 5704,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5612,
									"end": 5705,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 5612,
									"end": 5705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5612,
									"end": 5705,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5612,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5730,
									"end": 5732,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5725,
									"end": 5728,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5733,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5714,
									"end": 5733,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5714,
									"end": 5733,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5373,
									"end": 5739,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5373,
									"end": 5739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5373,
									"end": 5739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5373,
									"end": 5739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5745,
									"end": 6164,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 5745,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5911,
									"end": 5915,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5951,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5938,
									"end": 5947,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5934,
									"end": 5952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5926,
									"end": 5952,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5926,
									"end": 5952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5998,
									"end": 6007,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5992,
									"end": 5996,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5988,
									"end": 6008,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5984,
									"end": 5985,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5973,
									"end": 5982,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 5986,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5962,
									"end": 6009,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6026,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 6152,
									"end": 6156,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6026,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 6026,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6026,
									"end": 6157,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 6026,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6018,
									"end": 6157,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6018,
									"end": 6157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5745,
									"end": 6164,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5745,
									"end": 6164,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5745,
									"end": 6164,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5745,
									"end": 6164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6333,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 6170,
									"end": 6333,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6310,
									"end": 6325,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420707269636500000000000000000000000000000000000000"
								},
								{
									"begin": 6306,
									"end": 6307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6294,
									"end": 6308,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6287,
									"end": 6326,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6333,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6705,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 6339,
									"end": 6705,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6481,
									"end": 6484,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6502,
									"end": 6569,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 6566,
									"end": 6568,
									"name": "PUSH",
									"source": 10,
									"value": "D"
								},
								{
									"begin": 6561,
									"end": 6564,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6502,
									"end": 6569,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 6502,
									"end": 6569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6502,
									"end": 6569,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 6502,
									"end": 6569,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6569,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6578,
									"end": 6671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6578,
									"end": 6671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 6578,
									"end": 6671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6578,
									"end": 6671,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 6578,
									"end": 6671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6696,
									"end": 6698,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6691,
									"end": 6694,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6687,
									"end": 6699,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 6699,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 6699,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6705,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6711,
									"end": 7130,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 6711,
									"end": 7130,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6877,
									"end": 6881,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6915,
									"end": 6917,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6904,
									"end": 6913,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6892,
									"end": 6918,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6892,
									"end": 6918,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 6973,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6958,
									"end": 6962,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6954,
									"end": 6974,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6950,
									"end": 6951,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6939,
									"end": 6948,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6935,
									"end": 6952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6928,
									"end": 6975,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6992,
									"end": 7123,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 7118,
									"end": 7122,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6992,
									"end": 7123,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 6992,
									"end": 7123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6992,
									"end": 7123,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6992,
									"end": 7123,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6984,
									"end": 7123,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6984,
									"end": 7123,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6711,
									"end": 7130,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6711,
									"end": 7130,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6711,
									"end": 7130,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6711,
									"end": 7130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7301,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 7136,
									"end": 7301,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7276,
									"end": 7293,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420686172646361700000000000000000000000000000000000"
								},
								{
									"begin": 7272,
									"end": 7273,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7264,
									"end": 7270,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7260,
									"end": 7274,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7253,
									"end": 7294,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7301,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7307,
									"end": 7673,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 7307,
									"end": 7673,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7449,
									"end": 7452,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 7537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 7534,
									"end": 7536,
									"name": "PUSH",
									"source": 10,
									"value": "F"
								},
								{
									"begin": 7529,
									"end": 7532,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7470,
									"end": 7537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 7470,
									"end": 7537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7470,
									"end": 7537,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 7470,
									"end": 7537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7463,
									"end": 7537,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7463,
									"end": 7537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 7635,
									"end": 7638,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 7546,
									"end": 7639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7639,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 7546,
									"end": 7639,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7664,
									"end": 7666,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7659,
									"end": 7662,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7655,
									"end": 7667,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7648,
									"end": 7667,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7648,
									"end": 7667,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7307,
									"end": 7673,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7307,
									"end": 7673,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7307,
									"end": 7673,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7307,
									"end": 7673,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 8098,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 7679,
									"end": 8098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 7885,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7872,
									"end": 7881,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7868,
									"end": 7886,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7860,
									"end": 7886,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7860,
									"end": 7886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7932,
									"end": 7941,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7922,
									"end": 7942,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 7918,
									"end": 7919,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7916,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7903,
									"end": 7920,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7896,
									"end": 7943,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 8091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 8091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 7960,
									"end": 8091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 8091,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 7960,
									"end": 8091,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7952,
									"end": 8091,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7952,
									"end": 8091,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 8098,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 8098,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 8098,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 8098,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 3723,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbc51c86d0b54d19665b02248b040d251bdb9df51e9b1baa2c9e1a936260606264736f6c63430008180033",
									".code": [
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "84D24226"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "D7299EF7"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "D7299EF7"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "D744B702"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "DB2E21BC"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "FB86A404"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "84D24226"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "C5C4744C"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "C8BDBFB6"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "D0FEBE4C"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "48C54B9D"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "48C54B9D"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "78E97925"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "7FF9B596"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "1958E58A"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "24600FC3"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "3197CBB6"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "42E94C90"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 3723,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 387,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 387,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2842,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 551,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 551,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 814,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 814,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2537,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 697,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 697,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 521,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 521,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 417,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 417,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 868,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 868,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 664,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 664,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 664,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2990,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2093,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3211,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3211,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 721,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 721,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3342,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 601,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 579,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 579,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 411,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 387,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2842,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2952,
											"end": 2957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2952,
											"end": 2959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2944,
											"end": 2969,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 2970,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2886,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2537,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2635,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2636,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2636,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2664,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2646,
											"end": 2685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2646,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2722,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2723,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2761,
											"end": 2771,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2773,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2737,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2737,
											"end": 2780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2820,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430"
										},
										{
											"begin": 2822,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2796,
											"end": 2829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2829,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 417,
											"end": 442,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 417,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 868,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 664,
											"end": 690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 664,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2990,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3069,
											"end": 3079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3069,
											"end": 3089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3098,
											"end": 3102,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3069,
											"end": 3104,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3069,
											"end": 3104,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3069,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3133,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3114,
											"end": 3147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3114,
											"end": 3147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3181,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3181,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3181,
											"end": 3188,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3181,
											"end": 3188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3181,
											"end": 3188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3157,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3157,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3157,
											"end": 3198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2093,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 1972,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1959,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1972,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1972,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1995,
											"end": 2002,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1991,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 2002,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 2002,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1944,
											"end": 2002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1936,
											"end": 2025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1936,
											"end": 2025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2035,
											"end": 2069,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2035,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2186,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2182,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2186,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2165,
											"end": 2201,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2165,
											"end": 2201,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2253,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2246,
											"end": 2253,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2242,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2219,
											"end": 2230,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2242,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2219,
											"end": 2242,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2242,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2242,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2219,
											"end": 2242,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2242,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2219,
											"end": 2242,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2253,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2253,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2211,
											"end": 2273,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2211,
											"end": 2273,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2322,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2318,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2302,
											"end": 2311,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2318,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2302,
											"end": 2318,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2318,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2318,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2302,
											"end": 2318,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2318,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2302,
											"end": 2318,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2301,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2301,
											"end": 2332,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2301,
											"end": 2332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2380,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2369,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2343,
											"end": 2380,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2428,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2414,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2390,
											"end": 2428,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2428,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2462,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2449,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2438,
											"end": 2449,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2438,
											"end": 2462,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2462,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2504,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 2506,
											"end": 2515,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2523,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2478,
											"end": 2524,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2524,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2155,
											"end": 2531,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3292,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3276,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3292,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "66006354AC6A35F0F9B001E7CD8A73623BAB487BE4239F71FB1428656E7DE6A6"
										},
										{
											"begin": 3321,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3307,
											"end": 3329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3329,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 9,
											"value": "278D00"
										},
										{
											"begin": 721,
											"end": 775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 721,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3342,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3403,
											"end": 3432,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3403,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3483,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3512,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3494,
											"end": 3534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3494,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3573,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3569,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3570,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3610,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3611,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3643,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3654,
											"end": 3660,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3695,
											"end": 3705,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 3707,
											"end": 3713,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3677,
											"end": 3714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3714,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 601,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 579,
											"end": 601,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1222,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1403,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1880,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1989,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2144,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2283,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2272,
											"end": 2295,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2300,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2448,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2614,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2524,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2614,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2729,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2620,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2716,
											"end": 2721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2701,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2945,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2735,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2822,
											"end": 2826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2917,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2873,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2938,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2873,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3038,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3033,
											"end": 3036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3063,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3297,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3075,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3269,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3219,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3290,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3219,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3297,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3297,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3419,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3303,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3373,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3366,
											"end": 3371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3395,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3353,
											"end": 3413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3413,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3353,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3558,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3425,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3513,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3522,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3552,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 3522,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3558,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3887,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3564,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3620,
											"end": 3626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3655,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3644,
											"end": 3667,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3672,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3756,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 3637,
											"end": 3756,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3675,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3675,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3675,
											"end": 3754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3675,
											"end": 3754,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3675,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3756,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 3637,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3862,
											"end": 3869,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3820,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3887,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 4062,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3893,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3977,
											"end": 3988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 4062,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 4062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4234,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4068,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 4204,
											"end": 4205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4606,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4240,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 4462,
											"end": 4465,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4403,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4470,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4403,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4396,
											"end": 4470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4396,
											"end": 4470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4568,
											"end": 4571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4479,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4572,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4479,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4592,
											"end": 4595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4588,
											"end": 4600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 5031,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 4612,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4805,
											"end": 4814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4859,
											"end": 4863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4875,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5019,
											"end": 5023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4893,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 5024,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4893,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 5024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 5024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 5031,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 5031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 5031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 5031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5159,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5037,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5128,
											"end": 5133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5110,
											"end": 5134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5134,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5110,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5135,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5090,
											"end": 5153,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5153,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5090,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5308,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5165,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5247,
											"end": 5260,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5296,
											"end": 5301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5269,
											"end": 5302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5302,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5269,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5308,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5665,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5314,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5419,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5431,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5436,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5520,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5401,
											"end": 5520,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5439,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5439,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5518,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5439,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5520,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5401,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5629,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5616,
											"end": 5638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5584,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5648,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5584,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5648,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5648,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5665,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5665,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5830,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5671,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F20746F6B656E730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 6201,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5836,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6063,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5999,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6065,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5999,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 6065,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 6065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6163,
											"end": 6166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6074,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6187,
											"end": 6190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 6201,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 6201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 6201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 6201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6614,
											"end": 6618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6488,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6800,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6632,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C65206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 6768,
											"end": 6769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6749,
											"end": 6793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7172,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6806,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 7033,
											"end": 7035,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7028,
											"end": 7031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6969,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6969,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6969,
											"end": 7036,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 6969,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6962,
											"end": 7036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6962,
											"end": 7036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 7134,
											"end": 7137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7045,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7138,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 7045,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7597,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 7178,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7344,
											"end": 7348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7371,
											"end": 7380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7441,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7415,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7395,
											"end": 7442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7585,
											"end": 7589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7459,
											"end": 7590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7590,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7459,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7597,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7603,
											"end": 7767,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7603,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C6520706175736564000000000000000000000000000000000000"
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7727,
											"end": 7741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7603,
											"end": 7767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7603,
											"end": 7767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 8139,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7773,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7915,
											"end": 7918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 7995,
											"end": 7998,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7936,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 8003,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7936,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 8003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 8003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 8101,
											"end": 8104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 8012,
											"end": 8105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8105,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 8012,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8132,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 8139,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 8139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 8139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 8139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8564,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 8145,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8311,
											"end": 8315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8351,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8334,
											"end": 8352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8408,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8369,
											"end": 8386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8426,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8552,
											"end": 8556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8426,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 8426,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8426,
											"end": 8557,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8426,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8730,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8570,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8722,
											"name": "PUSH",
											"source": 10,
											"value": "53656E64204D4154494300000000000000000000000000000000000000000000"
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8694,
											"end": 8708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 9102,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8736,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 8881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8963,
											"end": 8965,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 8958,
											"end": 8961,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 8899,
											"end": 8966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8966,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8899,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8975,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 9064,
											"end": 9067,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8975,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8975,
											"end": 9068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8975,
											"end": 9068,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8975,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9077,
											"end": 9096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9077,
											"end": 9096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 9102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 9102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 9102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 9102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9527,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 9108,
											"end": 9527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9301,
											"end": 9310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9370,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9371,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9336,
											"end": 9345,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9349,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9515,
											"end": 9519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 9389,
											"end": 9520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9520,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9389,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9713,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 9533,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9658,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9578,
											"end": 9579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9675,
											"end": 9676,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9668,
											"end": 9683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9707,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9910,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 9719,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9759,
											"end": 9762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 9796,
											"end": 9797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 9778,
											"end": 9798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9798,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 9778,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9773,
											"end": 9798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9773,
											"end": 9798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 9812,
											"end": 9832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9807,
											"end": 9832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9807,
											"end": 9832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9855,
											"end": 9856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9852,
											"end": 9853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9848,
											"end": 9857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 9879,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9870,
											"end": 9880,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9867,
											"end": 9903,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9867,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9867,
											"end": 9903,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 9883,
											"end": 9901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9867,
											"end": 9903,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9867,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9910,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 10081,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 9916,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "4578636565647320686172646361700000000000000000000000000000000000"
										},
										{
											"begin": 10052,
											"end": 10053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 10081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 10081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10453,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10087,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10314,
											"end": 10316,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 10309,
											"end": 10312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 10250,
											"end": 10317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10243,
											"end": 10317,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10243,
											"end": 10317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10415,
											"end": 10418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10326,
											"end": 10419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10444,
											"end": 10446,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10439,
											"end": 10442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 10459,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10625,
											"end": 10629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10652,
											"end": 10661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 10666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10706,
											"end": 10710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10702,
											"end": 10722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10866,
											"end": 10870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10740,
											"end": 10871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10871,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10740,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11294,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 10884,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10947,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10965,
											"end": 10966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10947,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 10947,
											"end": 10967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10947,
											"end": 10967,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10947,
											"end": 10967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10942,
											"end": 10967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10942,
											"end": 10967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10999,
											"end": 11000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 10981,
											"end": 11001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11001,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10981,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11036,
											"end": 11037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11038,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11076,
											"end": 11087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 11058,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11088,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11058,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11047,
											"end": 11088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11047,
											"end": 11088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11239,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11218,
											"end": 11240,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11199,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11171,
											"end": 11254,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11148,
											"end": 11287,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 11267,
											"end": 11285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11287,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11148,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 11294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11294,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11294,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11300,
											"end": 11480,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 11300,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11425,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11445,
											"end": 11449,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 11442,
											"end": 11443,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11435,
											"end": 11450,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11469,
											"end": 11473,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11466,
											"end": 11467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11459,
											"end": 11474,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11671,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 11486,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 11561,
											"end": 11562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 11543,
											"end": 11563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11563,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 11543,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11538,
											"end": 11563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11538,
											"end": 11563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11577,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11595,
											"end": 11596,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11577,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 11577,
											"end": 11597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11577,
											"end": 11597,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11577,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11597,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11606,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11606,
											"end": 11641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 11621,
											"end": 11639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11606,
											"end": 11641,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11606,
											"end": 11641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11656,
											"end": 11665,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11651,
											"end": 11665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11651,
											"end": 11665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11838,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11825,
											"end": 11834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11917,
											"end": 11918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11915,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11919,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 11849,
											"end": 11920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11920,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11849,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11998,
											"end": 12000,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11987,
											"end": 11996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11974,
											"end": 11980,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 11930,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 12002,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11930,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 12009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12175,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 12015,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12167,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F742070617573656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12143,
											"end": 12149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12132,
											"end": 12168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12181,
											"end": 12547,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 12181,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12323,
											"end": 12326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12344,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12408,
											"end": 12410,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12403,
											"end": 12406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12344,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12344,
											"end": 12411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12344,
											"end": 12411,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12344,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12337,
											"end": 12411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12337,
											"end": 12411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12509,
											"end": 12512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 12420,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12513,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12420,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12540,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12533,
											"end": 12536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12529,
											"end": 12541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12522,
											"end": 12541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12522,
											"end": 12541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12181,
											"end": 12547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12181,
											"end": 12547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12181,
											"end": 12547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12181,
											"end": 12547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12972,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 12553,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12719,
											"end": 12723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12757,
											"end": 12759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12746,
											"end": 12755,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12734,
											"end": 12760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12734,
											"end": 12760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12806,
											"end": 12815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12800,
											"end": 12804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12796,
											"end": 12816,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12790,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12777,
											"end": 12794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12817,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12834,
											"end": 12965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 12960,
											"end": 12964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12834,
											"end": 12965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 12834,
											"end": 12965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12834,
											"end": 12965,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 12834,
											"end": 12965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12826,
											"end": 12965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12826,
											"end": 12965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12972,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12978,
											"end": 13145,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 12978,
											"end": 13145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13137,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7468696E6720746F20726566756E64000000000000000000000000000000"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13095,
											"end": 13138,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12978,
											"end": 13145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12978,
											"end": 13145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13517,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 13151,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13293,
											"end": 13296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13378,
											"end": 13380,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13373,
											"end": 13376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 13314,
											"end": 13381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13381,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13314,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13381,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13390,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13479,
											"end": 13482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13390,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 13390,
											"end": 13483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13390,
											"end": 13483,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13390,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13508,
											"end": 13510,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13503,
											"end": 13506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13499,
											"end": 13511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13523,
											"end": 13942,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 13523,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13689,
											"end": 13693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13716,
											"end": 13725,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13704,
											"end": 13730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13704,
											"end": 13730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13770,
											"end": 13774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13786,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13762,
											"end": 13763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13747,
											"end": 13764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 13935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13930,
											"end": 13934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 13935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 13804,
											"end": 13935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 13935,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13804,
											"end": 13935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13523,
											"end": 13942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13523,
											"end": 13942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13523,
											"end": 13942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13523,
											"end": 13942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14129,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 13948,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14088,
											"end": 14121,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14084,
											"end": 14085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14072,
											"end": 14086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14065,
											"end": 14122,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14501,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 14135,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14277,
											"end": 14280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14298,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14362,
											"end": 14364,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14357,
											"end": 14360,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 14298,
											"end": 14365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14365,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14298,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14463,
											"end": 14466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 14374,
											"end": 14467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14467,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14374,
											"end": 14467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14492,
											"end": 14494,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14487,
											"end": 14490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14476,
											"end": 14495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14476,
											"end": 14495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14507,
											"end": 14926,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 14507,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14673,
											"end": 14677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14713,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14700,
											"end": 14709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14696,
											"end": 14714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14760,
											"end": 14769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14754,
											"end": 14758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14770,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14746,
											"end": 14747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14735,
											"end": 14744,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14731,
											"end": 14748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14724,
											"end": 14771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14788,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 14914,
											"end": 14918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14788,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 14788,
											"end": 14919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14788,
											"end": 14919,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 14788,
											"end": 14919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14507,
											"end": 14926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14507,
											"end": 14926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14507,
											"end": 14926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14507,
											"end": 14926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15053,
											"end": 15057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15091,
											"end": 15093,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15080,
											"end": 15089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15104,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 15172,
											"end": 15173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15157,
											"end": 15174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15148,
											"end": 15154,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15104,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 15104,
											"end": 15175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15104,
											"end": 15175,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 15104,
											"end": 15175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15185,
											"end": 15257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15253,
											"end": 15255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15242,
											"end": 15251,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15238,
											"end": 15256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15229,
											"end": 15235,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15185,
											"end": 15257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 15185,
											"end": 15257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15185,
											"end": 15257,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15185,
											"end": 15257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AlienPresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_PRESALE_DURATION()": "d744b702",
							"alienToken()": "1958e58a",
							"buyTokens()": "d0febe4c",
							"claimTokens()": "48c54b9d",
							"claimableTokens(address)": "84d24226",
							"contributions(address)": "42e94c90",
							"emergencyWithdraw()": "db2e21bc",
							"endTime()": "3197cbb6",
							"hardCap()": "fb86a404",
							"owner()": "8da5cb5b",
							"pausePresale(bool)": "d7299ef7",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"startTime()": "78e97925",
							"tokenPrice()": "7ff9b596",
							"totalRaised()": "c5c4744c",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFunds()": "24600fc3",
							"withdrawUnsoldTokens()": "c8bdbfb6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_alienToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountRefunded\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PresalePaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensAllocated\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PRESALE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alienToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"pausePresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUnsoldTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AlienPresale.sol\":\"AlienPresale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"AlienPresale.sol\":{\"keccak256\":\"0x9f9be7b0070f7367c54b4a21ce9805fb2e78a8758fa7ac2844839cca2875abd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e423960fa7899f82ef7d24888543b27d0dec84282b3569c36b093f8df82e33\",\"dweb:/ipfs/QmYC7n26v29fraK1yTYyyHbmEpbcrYsbcnU9aHQtoRinVp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 903,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "alienToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 905,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 907,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "startTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 909,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "endTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 911,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "hardCap",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 913,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "totalRaised",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 915,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "paused",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 922,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "contributions",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 926,
								"contract": "AlienPresale.sol:AlienPresale",
								"label": "claimableTokens",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"AlienPresale.sol": {
				"ast": {
					"absolutePath": "AlienPresale.sol",
					"exportedSymbols": {
						"AlienPresale": [
							1284
						],
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1285,
							"sourceUnit": 148,
							"src": "58:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1285,
							"sourceUnit": 303,
							"src": "111:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1285,
							"sourceUnit": 381,
							"src": "174:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1285,
							"sourceUnit": 845,
							"src": "231:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 893,
										"name": "Ownable",
										"nameLocations": [
											"323:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "323:7:9"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "323:7:9"
								},
								{
									"baseName": {
										"id": 895,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"332:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "332:15:9"
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "332:15:9"
								}
							],
							"canonicalName": "AlienPresale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1284,
							"linearizedBaseContracts": [
								1284,
								302,
								147,
								874
							],
							"name": "AlienPresale",
							"nameLocation": "307:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 900,
									"libraryName": {
										"id": 897,
										"name": "SafeERC20",
										"nameLocations": [
											"360:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "360:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "354:27:9",
									"typeName": {
										"id": 899,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 898,
											"name": "IERC20",
											"nameLocations": [
												"374:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "374:6:9"
										},
										"referencedDeclaration": 380,
										"src": "374:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "1958e58a",
									"id": 903,
									"mutability": "mutable",
									"name": "alienToken",
									"nameLocation": "401:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "387:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 902,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 901,
											"name": "IERC20",
											"nameLocations": [
												"387:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "387:6:9"
										},
										"referencedDeclaration": 380,
										"src": "387:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 905,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "432:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "417:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 904,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "417:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 907,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "536:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "521:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "521:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 909,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "566:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "551:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb86a404",
									"id": 911,
									"mutability": "mutable",
									"name": "hardCap",
									"nameLocation": "594:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "579:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c5c4744c",
									"id": 913,
									"mutability": "mutable",
									"name": "totalRaised",
									"nameLocation": "679:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "664:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 912,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 915,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "709:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "697:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 914,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "697:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d744b702",
									"id": 918,
									"mutability": "constant",
									"name": "MAX_PRESALE_DURATION",
									"nameLocation": "745:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "721:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 916,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 917,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "768:7:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42e94c90",
									"id": 922,
									"mutability": "mutable",
									"name": "contributions",
									"nameLocation": "849:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "814:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 921,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 919,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "822:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "814:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 920,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "833:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84d24226",
									"id": 926,
									"mutability": "mutable",
									"name": "claimableTokens",
									"nameLocation": "903:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "868:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 925,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 923,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "876:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "868:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 924,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "887:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 934,
									"name": "TokensPurchased",
									"nameLocation": "931:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "963:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "947:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPaid",
												"nameLocation": "978:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "970:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensAllocated",
												"nameLocation": "998:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "990:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:68:9"
									},
									"src": "925:90:9"
								},
								{
									"anonymous": false,
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 940,
									"name": "TokensClaimed",
									"nameLocation": "1026:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1056:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1040:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensClaimed",
												"nameLocation": "1070:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1062:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:45:9"
									},
									"src": "1020:65:9"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 946,
									"name": "EmergencyWithdraw",
									"nameLocation": "1096:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1130:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1114:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountRefunded",
												"nameLocation": "1144:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1136:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:46:9"
									},
									"src": "1090:70:9"
								},
								{
									"anonymous": false,
									"eventSelector": "66006354ac6a35f0f9b001e7cd8a73623bab487be4239f71fb1428656e7de6a6",
									"id": 950,
									"name": "PresalePaused",
									"nameLocation": "1171:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1190:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1185:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 947,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:13:9"
									},
									"src": "1165:33:9"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "1412:486:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "_alienToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1430:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1453:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1445:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1445:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1445:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1430:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1457:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																"typeString": "literal_string \"Invalid token\""
															},
															"value": "Invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																"typeString": "literal_string \"Invalid token\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1422:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "1422:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "1491:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 980,
																"name": "_endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "1504:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1491:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374617274206d757374206265206265666f726520656e64",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d",
																"typeString": "literal_string \"Start must be before end\""
															},
															"value": "Start must be before end"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b6fd1e6b7682c3d37d3836ce17a33d7668023693971d4ae7cf5551a21d9df9d",
																"typeString": "literal_string \"Start must be before end\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1483:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1483:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 986,
																	"name": "_endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "1559:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 987,
																	"name": "_startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1570:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1559:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 989,
																"name": "MAX_PRESALE_DURATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "1584:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1559:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520746f6f206c6f6e67",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1606:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1",
																"typeString": "literal_string \"Presale too long\""
															},
															"value": "Presale too long"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10f0af7fe3bbbd6f4d0159ad56b6b4d143b5787672ce603c1b8bf796c1b88ee1",
																"typeString": "literal_string \"Presale too long\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1551:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "1551:74:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 995,
																"name": "_tokenPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "1643:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1657:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1643:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1660:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1635:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "1635:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1002,
																"name": "_hardCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1694:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1705:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1694:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642068617264636170",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1708:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106",
																"typeString": "literal_string \"Invalid hardcap\""
															},
															"value": "Invalid hardcap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54277ad0b4f353faeddc02dc361fde70ab5ebea4c9f8d3be04f128c121953106",
																"typeString": "literal_string \"Invalid hardcap\""
															}
														],
														"id": 1001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1686:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1686:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "1686:40:9"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "alienToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "1737:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1010,
																"name": "_alienToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1757:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1009,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1750:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1750:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1737:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "1737:32:9"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1014,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1779:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1015,
														"name": "_tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1792:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1779:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1779:24:9"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "1813:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "1825:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1813:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "1813:22:9"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "1845:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1023,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1855:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "1845:18:9"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "hardCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "1873:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1027,
														"name": "_hardCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1883:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1873:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1873:18:9"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 965,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 962,
													"src": "1398:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 966,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 964,
												"name": "Ownable",
												"nameLocations": [
													"1390:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1390:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1390:21:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_alienToken",
												"nameLocation": "1233:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1225:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1262:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1254:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "1291:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1283:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "1319:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1311:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_hardCap",
												"nameLocation": "1345:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1337:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1371:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1363:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:174:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1412:0:9"
									},
									"scope": 1284,
									"src": "1204:694:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "1926:161:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1034,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1944:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1950:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1944:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1036,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1963:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1944:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1038,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1976:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1982:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1976:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1040,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "1995:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1976:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1944:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206e6f7420616374697665",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2004:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e",
																"typeString": "literal_string \"Presale not active\""
															},
															"value": "Presale not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ae210a7f0ccf9a0d6c2d9f7a38120a6c20d1bea6b0c7f8e714732cf24add96e",
																"typeString": "literal_string \"Presale not active\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:89:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "1936:89:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2043:7:9",
															"subExpression": {
																"id": 1047,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2044:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520706175736564",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2052:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4",
																"typeString": "literal_string \"Presale paused\""
															},
															"value": "Presale paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33c29f947976860009622827c88355d4def371d6bd27bbc2f1b2c40d163de5b4",
																"typeString": "literal_string \"Presale paused\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2035:34:9"
											},
											{
												"id": 1052,
												"nodeType": "PlaceholderStatement",
												"src": "2079:1:9"
											}
										]
									},
									"id": 1054,
									"name": "saleActive",
									"nameLocation": "1913:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1923:2:9"
									},
									"src": "1904:183:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "2155:376:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1062,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2173:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2177:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2173:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2185:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2173:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64204d41544943",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2188:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5",
																"typeString": "literal_string \"Send MATIC\""
															},
															"value": "Send MATIC"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_918a6fb57f125d46bb2d5b8dd0c38a179ef9ba3ba867e3e9d5ea3906e99203f5",
																"typeString": "literal_string \"Send MATIC\""
															}
														],
														"id": 1061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2165:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "2165:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1070,
																	"name": "totalRaised",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "2219:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1071,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2233:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2237:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2233:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2219:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1074,
																"name": "hardCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "2246:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2219:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457863656564732068617264636170",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2255:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b",
																"typeString": "literal_string \"Exceeds hardcap\""
															},
															"value": "Exceeds hardcap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a84ac7cd0cb1b5958d46ca40216ac8e6a04bc259bde8245a773d3da82db79f4b",
																"typeString": "literal_string \"Exceeds hardcap\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2211:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2211:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "2211:62:9"
											},
											{
												"assignments": [
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "2292:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1117,
														"src": "2284:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1081,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2302:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2306:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2302:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2314:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2302:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1085,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2301:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1086,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2322:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2301:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2284:48:9"
											},
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1089,
															"name": "claimableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2343:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1092,
														"indexExpression": {
															"expression": {
																"id": 1090,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2359:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2363:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2359:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2343:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1093,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2374:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2343:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "2343:37:9"
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1096,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2390:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1099,
														"indexExpression": {
															"expression": {
																"id": 1097,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2404:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2408:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2404:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2390:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1100,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2419:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2423:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2419:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2390:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "2390:38:9"
											},
											{
												"expression": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "totalRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2438:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1105,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2453:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2457:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2453:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2438:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2438:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2494:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2498:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2494:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2506:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2510:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2506:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1114,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "2517:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "2478:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "EmitStatement",
												"src": "2473:51:9"
											}
										]
									},
									"functionSelector": "d0febe4c",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "nonReentrant",
												"nameLocations": [
													"2131:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2131:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2131:12:9"
										},
										{
											"id": 1059,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1058,
												"name": "saleActive",
												"nameLocations": [
													"2144:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1054,
												"src": "2144:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2144:10:9"
										}
									],
									"name": "buyTokens",
									"nameLocation": "2102:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2111:2:9"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:9"
									},
									"scope": 1284,
									"src": "2093:438:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2582:254:9",
										"statements": [
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "2600:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "2592:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2592:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"baseExpression": {
														"id": 1125,
														"name": "claimableTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2609:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1128,
													"indexExpression": {
														"expression": {
															"id": 1126,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2625:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2629:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2625:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2609:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2592:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "2654:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2663:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2654:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2666:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2646:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "2646:39:9"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1137,
															"name": "claimableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2696:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1140,
														"indexExpression": {
															"expression": {
																"id": 1138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2712:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2716:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2712:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2696:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2726:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2696:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "2696:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2761:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2765:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2761:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2773:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1144,
															"name": "alienToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2737:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2748:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "2737:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "2737:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2810:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2814:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2810:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2822:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1152,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "2796:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2796:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "EmitStatement",
												"src": "2791:38:9"
											}
										]
									},
									"functionSelector": "48c54b9d",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1120,
												"name": "nonReentrant",
												"nameLocations": [
													"2569:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2569:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2569:12:9"
										}
									],
									"name": "claimTokens",
									"nameLocation": "2546:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2557:2:9"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2582:0:9"
									},
									"scope": 1284,
									"src": "2537:299:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2886:98:9",
										"statements": [
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2904:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1181,
														"src": "2896:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2896:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1168,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2921:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AlienPresale_$1284",
																	"typeString": "contract AlienPresale"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AlienPresale_$1284",
																	"typeString": "contract AlienPresale"
																}
															],
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2913:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1166,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2913:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2913:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2927:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2913:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2896:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "2970:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1174,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2952:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2952:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2944:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1172,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2944:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2944:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2961:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2944:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "2944:33:9"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1161,
												"name": "onlyOwner",
												"nameLocations": [
													"2876:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2876:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2876:9:9"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "2851:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2864:2:9"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2886:0:9"
									},
									"scope": 1284,
									"src": "2842:142:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "3041:164:9",
										"statements": [
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3059:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "3051:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3051:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1193,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3098:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AlienPresale_$1284",
																		"typeString": "contract AlienPresale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AlienPresale_$1284",
																		"typeString": "contract AlienPresale"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3090:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3090:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3090:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1189,
															"name": "alienToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3069:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3080:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "3069:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3069:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3051:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "3122:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3132:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3122:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3135:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4",
																"typeString": "literal_string \"No tokens\""
															},
															"value": "No tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4",
																"typeString": "literal_string \"No tokens\""
															}
														],
														"id": 1197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3114:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3114:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "3114:33:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1207,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3181:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3181:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "3190:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1204,
															"name": "alienToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3157:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3168:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "3157:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "3157:41:9"
											}
										]
									},
									"functionSelector": "c8bdbfb6",
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1184,
												"name": "onlyOwner",
												"nameLocations": [
													"3031:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3031:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3031:9:9"
										}
									],
									"name": "withdrawUnsoldTokens",
									"nameLocation": "2999:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:9"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3041:0:9"
									},
									"scope": 1284,
									"src": "2990:215:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "3266:70:9",
										"statements": [
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3276:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "3285:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3276:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "3276:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "PresalePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3307:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "3302:27:9"
											}
										]
									},
									"functionSelector": "d7299ef7",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1218,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1217,
												"name": "onlyOwner",
												"nameLocations": [
													"3256:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3256:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3256:9:9"
										}
									],
									"name": "pausePresale",
									"nameLocation": "3220:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "3238:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "3233:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3233:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:14:9"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:9"
									},
									"scope": 1284,
									"src": "3211:125:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "3393:328:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1235,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3411:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420706175736564",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3419:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad",
																"typeString": "literal_string \"Not paused\""
															},
															"value": "Not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad",
																"typeString": "literal_string \"Not paused\""
															}
														],
														"id": 1234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3403:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "3403:29:9"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3450:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "3442:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3442:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"baseExpression": {
														"id": 1241,
														"name": "contributions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3459:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1244,
													"indexExpression": {
														"expression": {
															"id": 1242,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3473:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3477:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3473:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3459:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3442:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1247,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "3502:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3511:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3502:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20726566756e64",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3514:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1",
																"typeString": "literal_string \"Nothing to refund\""
															},
															"value": "Nothing to refund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1",
																"typeString": "literal_string \"Nothing to refund\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3494:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3494:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3494:40:9"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1253,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "3545:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1256,
														"indexExpression": {
															"expression": {
																"id": 1254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3559:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3563:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3559:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3545:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3573:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3545:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "3545:29:9"
											},
											{
												"expression": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1260,
															"name": "claimableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3584:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1263,
														"indexExpression": {
															"expression": {
																"id": 1261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3600:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3604:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3600:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3584:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3614:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3584:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "3584:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "3654:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1269,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3633:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3637:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3633:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3625:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3625:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3625:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3645:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3625:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "3625:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1277,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3695:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3699:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3695:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "3707:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1276,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3677:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3677:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "EmitStatement",
												"src": "3672:42:9"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1231,
												"name": "nonReentrant",
												"nameLocations": [
													"3380:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3380:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:12:9"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "3351:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3368:2:9"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3393:0:9"
									},
									"scope": 1284,
									"src": "3342:379:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1285,
							"src": "298:3425:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								934,
								940,
								946,
								950
							]
						}
					],
					"src": "32:3692:9"
				},
				"id": 9
			}
		}
	}
}